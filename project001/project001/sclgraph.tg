// JGraLab - The Java graph laboratory
//   Version : Carnotaurus
//   Revision: 1107
//   Build ID: 65

Schema eu.redseeds.scl.SCLSchema;
GraphClass SCLGraph { uid: String };
Package ea;
VertexClass Attribute: ClassifiedObject { allowDuplicates: Boolean,  defaultValue: String,  isConst: Boolean,  isDerived: Boolean,  isOrdered: Boolean,  isStatic: Boolean,  lowerBound: String,  upperBound: String,  visibility: String };
abstract VertexClass ClassifiedObject: TaggedObject;
VertexClass Connector: TaggedObject { direction: String,  sequenceNo: Integer,  subtype: String,  transitionGuard: String };
VertexClass ConnectorEnd: TaggedObject { aggregation: Integer,  allowDuplicates: String,  cardinality: String,  constraint: String,  derived: Boolean,  derivedUnion: Boolean,  isChangable: Boolean,  isNavigable: Boolean,  navigable: String,  ordering: Integer,  qualifier: String,  roleType: String,  visibility: String };
abstract VertexClass EAObject { guid: String,  name: String };
VertexClass Element: ClassifiedObject { genType: String,  isAbstract: Boolean,  isLeaf: Boolean,  subtype: Integer,  tag: String,  visibility: String };
VertexClass Method: ClassifiedObject { code: String,  isAbstract: Boolean,  isStatic: Boolean,  throwsException: String,  visibility: String };
VertexClass Model: Package;
VertexClass Package: EAObject;
VertexClass Parameter: ClassifiedObject { defaultValue: String,  kind: String,  position: Integer };
abstract VertexClass TaggedObject: EAObject { stereotype: String,  type: String };
VertexClass TaggedValue: EAObject { value: String };
CompositionClass AttributesIsPartOfElement from Attribute (0,*) role attributes to Element (1,1) role element aggregate to;
EdgeClass ClassifierLinksToClassifiedObject from Element (0,1) role classifier to ClassifiedObject (0,*) role classifiedObject;
CompositionClass ClientEndIsPartOfConn_cl from ConnectorEnd (1,1) role clientEnd to Connector (0,1) role conn_cl aggregate to;
EdgeClass ClientLinksToConn_cl from Element (1,1) role client to Connector (0,*) role conn_cl;
CompositionClass Conn_suContainsSupplierEnd from Connector (0,1) role conn_su to ConnectorEnd (1,1) role supplierEnd aggregate from;
CompositionClass ConnectorsIsPartOfPackage from Connector (0,*) role connectors to Package (0,1) role package aggregate to;
CompositionClass ElementsIsPartOfPackage from Element (0,*) role elements to Package (0,1) role package aggregate to;
CompositionClass MethodsIsPartOfElement from Method (0,*) role methods to Element (1,1) role element aggregate to;
CompositionClass PackagesIsPartOfParent from Package (0,*) role packages to Package (0,1) role parent aggregate to;
CompositionClass ParametersIsPartOfMethod from Parameter (0,*) role parameters to Method (1,1) role method aggregate to;
CompositionClass ParentContainsElements from Element (0,1) role parent to Element (0,*) role elements aggregate from;
EdgeClass ReferenceLinksToReferencedObj from TaggedValue (0,*) role reference to TaggedObject (0,1) role referencedObj;
EdgeClass SupplierLinksToConn_su from Element (1,1) role supplier to Connector (0,*) role conn_su;
CompositionClass TaggedValuesIsPartOfObject from TaggedValue (0,*) role taggedValues to TaggedObject (1,1) role object aggregate to;
Package java5;
Package rsl;
Package sclkernel;
VertexClass ArchitecturalModel: SoftwareArtifact;
VertexClass Clipboard: SoftwareCase;
VertexClass DetailedDesignModel: SoftwareArtifact;
VertexClass GoalsSpecification: SoftwareArtifact;
VertexClass Implements: TraceabilityLink;
VertexClass IsAllocatedTo: TraceabilityLink;
VertexClass IsDependentOn: TraceabilityLink;
abstract VertexClass SCLElement { uid: String };
abstract VertexClass SCLElementsPackage: SCLElement { name: String };
abstract VertexClass SCLRelationship { uid: String };
VertexClass Satisfies: TraceabilityLink;
abstract VertexClass SoftwareArtifact: SCLElementsPackage;
VertexClass SoftwareCase: SCLElementsPackage;
VertexClass SourceCode: SoftwareArtifact;
VertexClass Stereotype: SCLElement { name: String };
VertexClass TraceabilityLink: SCLRelationship { isGenerated: Boolean };
VertexClass Transformations: SoftwareArtifact;
EdgeClass AllocationToRSLLinksToAllocationTarget: SCLRelationshipLinksToTarget from IsAllocatedTo (0,*) role allocationToRSL to uml.classes.kernel.NamedElement (1,1) role allocationTarget;
EdgeClass AllocationToUMLLinksToAllocationSource: SCLRelationshipLinksToSource from IsAllocatedTo (0,*) role allocationToUML to SCLElement (1,1) role allocationSource;
AggregationClass ArtifactContainsOwnedTrace from SoftwareArtifact (1,1) role artifact to TraceabilityLink (0,*) role ownedTrace aggregate from;
AggregationClass ArtifactContainsUmlModel from SoftwareArtifact (0,1) role artifact to uml.auxiliaryconstructs.models.Model (0,*) role umlModel aggregate from;
EdgeClass ClientDependentOnLinksToDependencySource: SCLRelationshipLinksToSource from IsDependentOn (0,*) role clientDependentOn to uml.classes.kernel.NamedElement (1,1) role dependencySource;
CompositionClass ContainedClipboardIsPartOfParentSoftwareCase from Clipboard (0,*) role containedClipboard to SoftwareCase (1,1) role parentSoftwareCase aggregate to;
EdgeClass EaObjectLinksToSclElement from ea.EAObject (0,*) role eaObject to SCLElement (0,*) role sclElement;
EdgeClass ElementLinksToStereotype from SCLElement (0,*) role element2 to Stereotype (0,*) role stereotype2;
EdgeClass ImplementsLinksToImplementationSource: SCLRelationshipLinksToSource from Implements (0,*) to SCLElement (1,1) role implementationSource;
EdgeClass ImplementsLinksToImplementationTarget: SCLRelationshipLinksToTarget from Implements (0,*) to SCLElement (1,1) role implementationTarget;
abstract AggregationClass SCLElementsPackageContainsElement from SCLElementsPackage (1,1) to SCLElement (0,*) role element aggregate from;
abstract AggregationClass SCLElementsPackageContainsNestedPackage: SCLElementsPackageContainsElement from SCLElementsPackage (1,1) to SCLElementsPackage (0,*) role nestedPackage aggregate from;
AggregationClass SCLElementsPackageContainsRelation from SCLElementsPackage (1,1) to SCLRelationship (0,*) role relation aggregate from;
abstract EdgeClass SCLRelationshipLinksToSource from SCLRelationship (0,*) to SCLElement (1,1) role source;
abstract EdgeClass SCLRelationshipLinksToTarget from SCLRelationship (0,*) to SCLElement (1,1) role target;
EdgeClass SatisfiesLinksToSatisfactionSource: SCLRelationshipLinksToSource from Satisfies (0,*) to uml.classes.kernel.NamedElement (1,1) role satisfactionSource;
EdgeClass SatisfiesLinksToSatisfactionTarget: SCLRelationshipLinksToTarget from Satisfies (0,*) to SCLElement (1,1) role satisfactionTarget;
AggregationClass SoftwareCaseContainsArtifact: SCLElementsPackageContainsElement from SoftwareCase (1,1) to SoftwareArtifact (0,*) role artifact aggregate from;
AggregationClass SoftwareCaseContainsTrace from SoftwareCase (1,1) to TraceabilityLink (0,*) role trace aggregate from;
EdgeClass StereotypeLinksToElement from Stereotype (0,*) role stereotype to SCLElement (0,*) role element;
EdgeClass StereotypeLinksToRelationship from Stereotype (0,*) role stereotype to SCLRelationship (0,*) role relationship;
EdgeClass SupplierDependentOnLinksToDependencyTarget: SCLRelationshipLinksToTarget from IsDependentOn (0,*) role supplierDependentOn to uml.classes.kernel.NamedElement (1,1) role dependencyTarget;
Package uml;
Package java5.annotations;
VertexClass Annotation: sclkernel.SCLElement { name: String };
EdgeClass IsAnnotationArgumentOf from java5.expressions.Expression (0,*) to Annotation (1,1) role fullannotation;
EdgeClass IsAnnotationNameOf from java5.basiclanguageelements.Identifier (1,1) to Annotation (1,1) role annotation;
EdgeClass IsAnnotationOfEnumConstant from Annotation (1,1) to java5.members.EnumConstant (1,1) role enumconstant;
EdgeClass IsAnnotationOfMember from Annotation (0,*) to java5.members.Member (1,1) role member;
EdgeClass IsAnnotationOfPackage from Annotation (0,*) to java5.programs.JavaPackage (1,1) role package;
EdgeClass IsAnnotationOfType from Annotation (0,*) to java5.types.Type (1,1) role type;
EdgeClass IsAnnotationOfVariable from Annotation (0,*) to java5.statements.Declaration (1,1) role declaration;
EdgeClass IsMetaAnnotationOf from Annotation (0,*) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
Package java5.basiclanguageelements;
VertexClass Block: sclkernel.SCLElement;
VertexClass Identifier: sclkernel.SCLElement { name: String };
VertexClass JavaModifier: sclkernel.SCLElement { type: Integer };
VertexClass ParameterDeclaration: sclkernel.SCLElement;
VertexClass QualifiedName: QualifiedType;
VertexClass QualifiedType: java5.typespecifications.TypeSpecification;
VertexClass VariableLengthDeclaration: ParameterDeclaration;
EdgeClass IsAnnotationBlockOf from Block (1,1) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
EdgeClass IsAnnotationDefinitionNameOf from Identifier (1,1) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
EdgeClass IsBreakTargetOf from Identifier (0,1) to java5.statements.Break (1,1) role breakstatement;
EdgeClass IsCaughtExceptionOf from ParameterDeclaration (1,1) to java5.statements.Catch (1,1) role catchstatement;
EdgeClass IsClassBlockOf from Block (1,1) to java5.types.ClassDefinition (1,1) role classdefinition;
EdgeClass IsClassNameOf from Identifier (1,1) to java5.types.ClassDefinition (1,1) role classdefinition;
EdgeClass IsContinueTargetOf from Identifier (0,1) to java5.statements.Continue (1,1) role continuestatement;
EdgeClass IsEnumBlockOf from Block (1,1) to java5.types.EnumDefinition (1,1) role enumdefinition;
EdgeClass IsEnumConstantBlockOf from Block (1,1) to java5.members.EnumConstant (0,*);
EdgeClass IsEnumConstantNameOf from Identifier (1,1) to java5.members.EnumConstant (1,1) role enumconstant;
EdgeClass IsEnumNameOf from Identifier (1,1) to java5.types.EnumDefinition (1,1) role enumdefinition;
EdgeClass IsFieldNameOf from Identifier (1,1) to java5.expressions.FieldAccess (1,1) role fieldaccess;
EdgeClass IsImportDefinitionOf from QualifiedName (1,1) to java5.programs.Import (1,1) role translationunit;
EdgeClass IsInterfaceBlockOf from Block (1,1) to java5.types.InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsInterfaceNameOf from Identifier (1,1) to java5.types.InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsLabelNameOf from Identifier (1,1) to java5.statements.Label (1,1) role labelattachedstatement;
EdgeClass IsMemberOf from java5.members.Member (0,*) to Block (1,1);
EdgeClass IsModifierOfAnnotation from JavaModifier (0,*) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
EdgeClass IsModifierOfClass from JavaModifier (0,*) to java5.types.ClassDefinition (1,1) role classdefinition;
EdgeClass IsModifierOfConstructor from JavaModifier (0,*) to java5.members.ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsModifierOfEnum from JavaModifier (0,*) to java5.types.EnumDefinition (1,1) role enumdefinition;
EdgeClass IsModifierOfInterface from JavaModifier (0,2) to java5.types.InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsModifierOfMethod from JavaModifier (0,*) to java5.members.MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsModifierOfParameter from JavaModifier (0,1) to ParameterDeclaration (1,1);
EdgeClass IsModifierOfVariable from JavaModifier (0,*) to java5.statements.Declaration (1,1) role declaration;
EdgeClass IsNameOfConstructor from Identifier (1,1) to java5.members.ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsNameOfInvocatedMethod from Identifier (1,1) to java5.expressions.MethodInvocation (1,1) role methodinvocation;
EdgeClass IsNameOfMethod from Identifier (1,1) to java5.members.MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsParameterNameOf from Identifier (1,1) to ParameterDeclaration (1,1);
EdgeClass IsParameterOfConstructor from ParameterDeclaration (0,*) to java5.members.ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsParameterOfForEachClause from ParameterDeclaration (1,1) to java5.statements.ForEachClause (1,1) role foreachclause;
EdgeClass IsParameterOfMethod from ParameterDeclaration (0,*) to java5.members.MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsQualifiedTypeOf from QualifiedType (0,1) to QualifiedType (1,1);
EdgeClass IsTypeNameOf from Identifier (1,1) to QualifiedType (1,1);
EdgeClass IsTypeOfParameter from java5.typespecifications.TypeSpecification (1,1) to ParameterDeclaration (1,1) role parameterdeclaration;
EdgeClass IsTypeParameterDeclarationNameOf from Identifier (1,1) to java5.typespecifications.TypeParameterDeclaration (1,1);
EdgeClass IsTypeParameterUsageNameOf from Identifier (1,1) to java5.typespecifications.TypeParameterUsage (1,1);
EdgeClass IsVariableNameOf from Identifier (1,*) to java5.statements.Declaration (1,1) role declaration;
Package java5.comments;
abstract VertexClass Comment: sclkernel.SCLElement;
VertexClass JavaDocComment: Comment;
VertexClass MultiLineComment: Comment;
VertexClass SingleLineComment: Comment;
EdgeClass IsCommentIn from Comment (0,*) to java5.programs.SourceFile (1,1);
Package java5.constants;
EnumDomain BuiltInTypes ( BOOLEAN, CHAR, BYTE, SHORT, INT, LONG, FLOAT, DOUBLE );
EnumDomain InfixOperators ( ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, MUL_ASSIGN, MOD_ASSIGN, B_AND_ASSIGN, B_OR_ASSIGN, B_XOR_ASSIGN, B_NOT_ASSIGN, SHL_ASSIGN, SHR_ASSIGN, UNSIGNED_SHR_ASSIGN, PLUS, MINUS, MUL, DIV, MOD, B_AND, B_OR, B_XOR, L_AND, L_OR, EQ, NEQ, GT, GEQ, LT, LEQ, SHL, SHR, UNSIGNED_SHR, INSTANCEOF );
EnumDomain MethodInvocationTypes ( METHOD, SUPERMETHOD, CONSTRUCTOR, SUPERCONSTRUCTOR, EXPLICITCONSTRUCTOR );
EnumDomain PostfixOperators ( INCR, DECR );
EnumDomain PrefixOperators ( MINUS, PLUS, INCR, DECR, L_NOT, B_NOT );
Package java5.expressions;
VertexClass ArrayCreation: Expression;
VertexClass ArrayInitializer: Expression;
VertexClass BooleanConstant: Constant { value: Boolean };
VertexClass BuiltInCast: Expression;
VertexClass CharConstant: Constant { value: String };
VertexClass ClassCast: Expression;
VertexClass ClassInstanceCreation: Expression;
VertexClass ConditionalExpression: Expression;
abstract VertexClass Constant: Expression { literal: String };
VertexClass DoubleConstant: Constant { value: Double };
abstract VertexClass Expression: java5.statements.Statement;
VertexClass FieldAccess: Expression;
VertexClass FloatConstant: Constant { value: Double };
VertexClass InfixExpression: Expression { operator: java5.constants.InfixOperators };
VertexClass IntegerConstant: Constant { value: Integer };
VertexClass LongConstant: Constant { value: Long };
VertexClass MethodInvocation: Expression { methodInvocationType: java5.constants.MethodInvocationTypes };
VertexClass NullExpression: Expression;
VertexClass PostfixExpression: Expression { operator: java5.constants.PostfixOperators };
VertexClass PrefixExpression: Expression { operator: java5.constants.PrefixOperators };
VertexClass StringConstant: Constant;
VertexClass VariableInitializer: Expression;
EdgeClass IsArgumentOfEnumConstant from Expression (0,*) to java5.members.EnumConstant (1,1) role enumconstant;
EdgeClass IsArgumentOfMethodInvocation from Expression (0,*) to MethodInvocation (1,1);
EdgeClass IsArrayElementIndexOf from Expression (0,*) to FieldAccess (1,1);
EdgeClass IsCaseConditionOf from Expression (1,1) to java5.statements.Case (1,1) role casestatement;
EdgeClass IsCastedBuiltInTypeOf from java5.typespecifications.BuiltInType (1,1) to BuiltInCast (1,1) role builtincast;
EdgeClass IsCastedObjectOf from Expression (1,1) to ClassCast (1,1);
EdgeClass IsCastedTypeOf from java5.typespecifications.TypeSpecification (1,1) to ClassCast (1,1) role classcast;
EdgeClass IsCastedValueOf from Expression (1,1) to BuiltInCast (1,1);
EdgeClass IsConditionOfAssert from Expression (1,1) to java5.statements.Assert (1,1) role assert;
EdgeClass IsConditionOfDoWhile from Expression (1,1) to java5.statements.DoWhile (1,1) role dowhilestatement;
EdgeClass IsConditionOfExpression from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsConditionOfIf from Expression (1,1) to java5.statements.If (1,1) role ifstatement;
EdgeClass IsConditionOfWhile from Expression (1,1) to java5.statements.While (1,1) role whilestatement;
EdgeClass IsConstructorInvocationOf from MethodInvocation (1,1) to ClassInstanceCreation (1,1);
EdgeClass IsContentOf from Expression (0,*) to ArrayInitializer (1,1) role arrayinitializer2;
EdgeClass IsDimensionInitializerOf from ArrayInitializer (1,*) to ArrayCreation (1,1);
EdgeClass IsEnumeratableOf from Expression (1,1) to java5.statements.ForEachClause (1,1) role foreachclause;
EdgeClass IsFieldContainerOf from Expression (0,1) to FieldAccess (1,1);
EdgeClass IsForConditionOf from Expression (0,1) to java5.statements.TraditionalForClause (1,1) role traditionalforclause;
EdgeClass IsInitializerOf from Expression (1,1) to VariableInitializer (1,1);
EdgeClass IsInitializerOfVariable from Expression (0,1) to java5.statements.Declaration (1,1) role declaration;
EdgeClass IsIteratorOf from Expression (0,*) to java5.statements.TraditionalForClause (1,1) role traditionalforclause2;
EdgeClass IsLeftHandSideOfInfixExpression from Expression (1,1) to InfixExpression (1,1);
EdgeClass IsLeftHandSideOfPostFixExpression from Expression (1,1) to PostfixExpression (1,1);
EdgeClass IsMatchOf from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsMessageOf from Expression (0,1) to java5.statements.Assert (1,1) role assert2;
EdgeClass IsMethodContainerOf from Expression (0,1) to MethodInvocation (1,1);
EdgeClass IsMismatchOf from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsMonitorOf from Expression (1,1) to java5.statements.Synchronized (1,1) role synchronizestatement;
EdgeClass IsReturnedBy from Expression (0,1) to java5.statements.Return (1,1) role returnstatement;
EdgeClass IsRightHandSideOfInfixExpression from Expression (1,1) to InfixExpression (1,1);
EdgeClass IsRightHandSideOfPrefixExpression from Expression (1,1) to PrefixExpression (1,1);
EdgeClass IsSizeOf from Expression (0,0) to ArrayInitializer (1,1) role arrayinitializer;
EdgeClass IsSwitchArgumentOf from Expression (1,1) to java5.statements.Switch (1,1) role switchcasestatement;
EdgeClass IsThrownExceptionOf from Expression (1,1) to java5.statements.Throw (1,1) role throwstatement;
EdgeClass IsTypeArgumentOfArrayCreation from java5.typespecifications.TypeArgument (0,1) to ArrayCreation (1,1) role argumentArraycreation;
EdgeClass IsTypeArgumentOfMethodInvocation from java5.typespecifications.TypeArgument (0,1) to MethodInvocation (1,1) role classinstancecreation;
EdgeClass IsTypeOfCreatedArray from java5.typespecifications.TypeSpecification (0,1) to ArrayCreation (1,1) role arraycreation;
Package java5.members;
VertexClass ConstructorDefinition: Member;
VertexClass EnumConstant: Member;
VertexClass Field: Member;
abstract VertexClass Member: sclkernel.SCLElement;
VertexClass MethodDeclaration: Member;
VertexClass MethodDefinition: MethodDeclaration;
VertexClass StaticConstructor: Member;
VertexClass StaticInitializer: Member;
EdgeClass IsBodyOfConstructor from java5.statements.Compound (1,1) to ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsBodyOfMethod from java5.statements.Compound (1,1) to MethodDefinition (1,1) role methoddeclaration;
EdgeClass IsBodyOfStaticConstructor from java5.statements.Compound (1,1) to StaticConstructor (1,1) role staticconstructor;
EdgeClass IsBodyOfStaticInitializer from java5.statements.Compound (1,1) to StaticInitializer (1,1) role classinitializer;
EdgeClass IsExceptionThrownByConstructor from java5.typespecifications.TypeSpecification (0,*) to ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsExceptionThrownByMethod from java5.typespecifications.TypeSpecification (0,*) to MethodDeclaration (1,1) role throwsclause;
EdgeClass IsFieldCreationOf from java5.statements.Statement (1,1) to Field (1,1) role field;
EdgeClass IsReturnTypeOf from java5.typespecifications.TypeSpecification (1,1) to MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsTypeParameterOfConstructor from java5.typespecifications.TypeSpecification (0,*) to ConstructorDefinition (1,1) role constructordefinition;
EdgeClass IsTypeParameterOfMethod from java5.typespecifications.TypeSpecification (0,*) to MethodDeclaration (1,1) role methoddeclaration2;
Package java5.programs;
abstract VertexClass ExternalDeclaration: sclkernel.SCLElement;
VertexClass Import: ExternalDeclaration;
VertexClass JavaPackage: ExternalDeclaration { name: String };
VertexClass Program: sclkernel.SCLElement { name: String };
VertexClass SourceFile: sclkernel.SCLElement { name: String };
VertexClass SourceUsage: sclkernel.SCLElement;
VertexClass TranslationUnit: sclkernel.SCLElement;
EdgeClass IncludesSource from SourceUsage (0,1) to SourceUsage (0,*);
EdgeClass IsExternalDeclarationIn from ExternalDeclaration (0,*) to SourceUsage (1,1);
EdgeClass IsPackageOf from JavaPackage (1,*) to Program (1,*);
EdgeClass IsPartOf from TranslationUnit (1,*) to JavaPackage (1,1);
EdgeClass IsPrimarySourceFor from SourceFile (1,1) to TranslationUnit (1,1);
EdgeClass IsSourceFor from SourceFile (1,1) to SourceUsage (1,*);
EdgeClass IsSourceUsageIn from SourceUsage (0,*) to TranslationUnit (1,1);
EdgeClass IsSubPackageOf from JavaPackage (0,*) to JavaPackage (0,1);
EdgeClass IsTranslationUnitIn from TranslationUnit (1,*) to Program (1,1);
Package java5.statements;
VertexClass Assert: Statement;
VertexClass Break: Statement;
VertexClass Case: sclkernel.SCLElement;
VertexClass Catch: Statement;
VertexClass Compound: Statement;
VertexClass Continue: Statement;
VertexClass Declaration: Statement;
VertexClass Default: sclkernel.SCLElement;
VertexClass DoWhile: Statement;
VertexClass EmptyStatement: Statement;
VertexClass ForEachClause: ForHead;
abstract VertexClass ForHead: sclkernel.SCLElement;
VertexClass ForStatement: Statement;
VertexClass If: Statement;
VertexClass Label: Statement;
VertexClass Return: Statement;
abstract VertexClass Statement: sclkernel.SCLElement;
VertexClass Switch: Statement;
VertexClass Synchronized: Statement;
VertexClass Throw: Statement;
VertexClass TraditionalForClause: ForHead;
VertexClass Try: Statement;
VertexClass While: Statement;
EdgeClass IsAttachedTo from Statement (1,1) to Label (1,1);
EdgeClass IsCaseOf from Case (0,*) to Switch (1,1);
EdgeClass IsCatchBodyOf from Compound (1,1) to Catch (1,1);
EdgeClass IsDefaultCaseOf from Default (0,1) to Switch (1,1);
EdgeClass IsElseOf from Statement (0,1) to If (1,1);
EdgeClass IsFinallyBodyOf from Compound (0,1) to Try (1,1);
EdgeClass IsHandlerOf from Catch (0,*) to Try (1,1);
EdgeClass IsHeadOfFor from ForHead (1,1) to ForStatement (1,1);
EdgeClass IsLoopBodyOfDoWhile from Statement (1,1) to DoWhile (1,1);
EdgeClass IsLoopBodyOfFor from Statement (1,1) to ForStatement (1,1);
EdgeClass IsLoopBodyOfWhile from Statement (1,1) to While (1,1);
EdgeClass IsRunVariableInitializationOf from Statement (0,*) to TraditionalForClause (1,1);
EdgeClass IsStatementOfCase from Statement (0,*) to Case (1,1);
EdgeClass IsStatementOfCompound from Statement (0,*) to Compound (1,1);
EdgeClass IsStatementOfDefaultCase from Statement (0,*) to Default (1,1);
EdgeClass IsSynchronizedBodyOf from Compound (1,1) to Synchronized (1,1);
EdgeClass IsThenOf from Statement (1,1) to If (1,1);
EdgeClass IsTryBodyOf from Compound (1,1) to Try (1,1);
EdgeClass IsTypeArgumentOfVariable from java5.typespecifications.TypeArgument (0,*) to Declaration (1,1) role argumentDeclaration;
EdgeClass IsTypeOfVariable from java5.typespecifications.TypeSpecification (1,1) to Declaration (1,1) role declaration;
Package java5.types;
VertexClass AnnotationDefinition: Type;
VertexClass ClassDefinition: Type;
VertexClass EnumDefinition: Type;
VertexClass InterfaceDefinition: Type;
abstract VertexClass Type: java5.programs.ExternalDeclaration, java5.members.Member { name: String };
EdgeClass IsInterfaceOfClass from java5.typespecifications.TypeSpecification (0,*) role implementedInterface to ClassDefinition (1,1) role classdefinition;
EdgeClass IsInterfaceOfEnum from java5.typespecifications.TypeSpecification (0,*) to EnumDefinition (1,1) role enumdefinition;
EdgeClass IsSuperClassOfClass from java5.typespecifications.TypeSpecification (0,1) role subclass to ClassDefinition (1,1) role superclass;
EdgeClass IsSuperClassOfInterface from java5.typespecifications.TypeSpecification (0,*) to InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsTypeParameterOfClass from java5.typespecifications.TypeParameterDeclaration (0,*) to ClassDefinition (1,1) role parameterClassdefinition;
EdgeClass IsTypeParameterOfInterface from java5.typespecifications.TypeParameterDeclaration (0,*) to InterfaceDefinition (1,1) role parameterInterfacedefinition;
Package java5.typespecifications;
VertexClass ArrayType: TypeSpecification { dimensions: Integer };
VertexClass BuiltInType: TypeSpecification { type: java5.constants.BuiltInTypes };
VertexClass SimpleArgument: sclkernel.SCLElement;
VertexClass TypeArgument: TypeSpecification;
VertexClass TypeParameterDeclaration: TypeSpecification;
VertexClass TypeParameterUsage: TypeSpecification;
abstract VertexClass TypeSpecification: sclkernel.SCLElement;
VertexClass WildcardArgument: sclkernel.SCLElement;
EdgeClass IsElementTypeOf from TypeSpecification (1,1) to ArrayType (1,1);
EdgeClass IsLowerBoundOfWildCardArgument from TypeSpecification (1,1) to WildcardArgument (1,1);
EdgeClass IsSimpleArgumentOf from SimpleArgument (0,*) to TypeArgument (1,1);
EdgeClass IsTypeArgumentOfTypeSpecification from TypeArgument (0,*) to TypeSpecification (1,1);
EdgeClass IsTypeOfSimpleArgument from TypeSpecification (1,1) to SimpleArgument (1,1);
EdgeClass IsUpperBoundOfTypeParameter from TypeSpecification (0,*) to TypeParameterDeclaration (1,1);
EdgeClass IsWildcardArgumentOf from WildcardArgument (0,*) to TypeArgument (1,1);
EdgeClass TypeSpecificationLinksToWildcardArgument from TypeSpecification (1,1) to WildcardArgument (1,1);
Package rsl.rsldomainelements;
Package rsl.rslgoal;
Package rsl.rslkernel;
Package rsl.rslrequirementrepresentations;
Package rsl.rslrequirementrepresentationsentences;
Package rsl.rslrequirements;
Package uml.action;
Package uml.activities;
Package uml.auxiliaryconstructs;
Package uml.classes;
Package uml.commonbehaviors;
Package uml.components;
Package uml.compositestructures;
Package uml.interactions;
Package uml.usecases;
VertexClass Actor: uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
VertexClass Extend: uml.classes.kernel.DirectedRelationship, uml.classes.kernel.NamedElement;
VertexClass ExtensionPoint: uml.classes.kernel.RedefinableElement;
VertexClass Include: uml.classes.kernel.DirectedRelationship, uml.classes.kernel.NamedElement;
VertexClass UseCase: uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
CompositionClass ExtendIsPartOfExtension from Extend (0,*) role extend to UseCase (1,1) role extension aggregate to;
EdgeClass ExtenderLinksToExtendedCase from Extend (0,*) role extender to UseCase (1,1) role extendedCase;
EdgeClass ExtensionLinksToExtensionLocation from Extend (0,*) role extension to ExtensionPoint (1,*) role extensionLocation;
CompositionClass ExtensionPointIsPartOfUseCase from ExtensionPoint (0,*) role extensionPoint to UseCase (1,1) role useCase aggregate to;
CompositionClass IncludeIsPartOfIncludingCase from Include (0,*) role include to UseCase (1,1) role includingCase aggregate to;
EdgeClass IncluderLinksToAddition from Include (0,*) role includer to UseCase (1,1) role addition;
Package rsl.rsldomainelements.actors;
VertexClass Actor: rsl.rsldomainelements.domainelements.ActorOrSystemElement;
VertexClass ActorsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
AggregationClass NestingPackageContainsNestedPackage: rsl.rsldomainelements.domainelements.NestingPackageContainsNestedPackage from ActorsPackage (1,1) role nestingPackage to ActorsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsActor: rsl.rsldomainelements.domainelements.PackageContainsDomainElement from ActorsPackage (1,1) role package to Actor (0,*) role actor aggregate from;
Package rsl.rsldomainelements.domainelementrepresentations;
VertexClass DomainElementRepresentation: rsl.rslkernel.elements.ElementRepresentation;
Package rsl.rsldomainelements.domainelements;
abstract VertexClass ActorOrSystemElement: DomainElement;
abstract VertexClass DomainElement: rsl.rslkernel.elements.RepresentableElement;
VertexClass DomainElementRelationship: rsl.rslkernel.elements.RepresentableElementRelationship { directed: Boolean,  sourceMultiplicity: String,  targetMultiplicity: String };
abstract VertexClass DomainElementsPackage: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass DomainSpecification: rsl.rslkernel.elements.RepresentableElementsPackage;
AggregationClass DomainElementContainsStatement from DomainElement (1,1) role domainElement to rsl.rsldomainelements.notions.DomainStatement (0,*) role statement aggregate from;
AggregationClass DomainSpecificationContainsDomainElementsPackage: sclkernel.SCLElementsPackageContainsElement from DomainSpecification (1,1) role domainSpecification to DomainElementsPackage (0,*) role domainElementsPackage aggregate from;
AggregationClass ElementContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from ActorOrSystemElement (0,1) role element to rsl.rsldomainelements.phrases.NounPhrase (1,1) role name aggregate from;
AggregationClass ElementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from DomainElement (1,1) role element to rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (1,*) role representation aggregate from;
abstract AggregationClass NestingPackageContainsNestedPackage: rsl.rslkernel.elements.NestingPackageContainsNestedPackage from DomainElementsPackage (1,1) role nestingPackage to DomainElementsPackage (0,*) role nestedPackage aggregate from;
abstract AggregationClass PackageContainsDomainElement: rsl.rslkernel.elements.RepresentableElementsPackageContainsElement from DomainElementsPackage (1,1) role package to DomainElement (0,*) role domainElement aggregate from;
CompositionClass SpecificationContainsSystemUnderDevelopment from DomainSpecification (0,1) role specification to rsl.rsldomainelements.systemelements.SystemElement (1,1) role systemUnderDevelopment aggregate from;
EdgeClass ToSourceLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from DomainElementRelationship (0,*) role toSource to DomainElement (1,1) role target;
EdgeClass ToTargetLinksToSource: sclkernel.SCLRelationshipLinksToSource from DomainElementRelationship (0,*) role toTarget to DomainElement (1,1) role source;
Package rsl.rsldomainelements.notions;
EnumDomain AttributeDataTypes ( STRING, INTEGER, BOOLEAN, DATE, TIME, FLOAT );
EnumDomain NotionAggregationKind ( SOURCE_SHARED, TARGET_SHARED, NONE, SOURCE_COMPOSITE, TARGET_COMPOSITE );
abstract VertexClass AttributeDataType: rsl.rsldomainelements.domainelements.DomainElement;
VertexClass DomainStatement: rsl.rslkernel.elements.RepresentableElement;
VertexClass Enumeration: AttributeDataType { name: String };
VertexClass EnumerationLiteral: sclkernel.SCLElement { value: String };
VertexClass Notion: rsl.rsldomainelements.domainelements.DomainElement { defaultValue: String,  isPersistent: Boolean };
VertexClass NotionAttribute: rsl.rslkernel.attributes.Attribute;
VertexClass NotionRelationship: rsl.rsldomainelements.domainelements.DomainElementRelationship { aggregation: uml.classes.kernel.AggregationKind,  isPersistent: Boolean,  sourceRole: String,  targetRole: String };
VertexClass NotionSpecialisation: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass NotionsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
VertexClass PrimitiveDataType: AttributeDataType { typeName: AttributeDataTypes };
EdgeClass DataPresenterLinksToDataProvider from rsl.rsldomainelements.uielements.UIElement (0,1) role dataPresenter to Notion (0,1) role dataProvider;
EdgeClass ElementLinksToElementNameModifier from rsl.rsldomainelements.uielements.UIElement (0,1) role element to Notion (0,1) role elementNameModifier;
EdgeClass GeneralLinksToSource: sclkernel.SCLRelationshipLinksToSource from NotionSpecialisation (0,*) role general to Notion (1,1) role source;
CompositionClass LiteralIsPartOfEnumeration from EnumerationLiteral (0,*) role literal to Enumeration (1,1) role enumeration aggregate to;
AggregationClass NestingPackageContainsNestedPackage: rsl.rsldomainelements.domainelements.NestingPackageContainsNestedPackage from NotionsPackage (1,1) role nestingPackage to NotionsPackage (0,*) role nestedPackage aggregate from;
AggregationClass NotionAttributeContainsDescription from NotionAttribute (0,1) role notionAttribute to rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (0,1) role description aggregate from;
CompositionClass NotionAttributeIsPartOfParentNotion from Notion (0,*) role notionAttribute to Notion (0,1) role parentNotion aggregate to;
AggregationClass NotionContainsAttribute: rsl.rslkernel.attributes.RepresentableElementContainsAttribute from Notion (1,1) role notion to NotionAttribute (0,*) role attribute aggregate from;
AggregationClass NotionContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from Notion (0,1) role notion to rsl.rsldomainelements.phrases.NounPhrase (1,1) role name aggregate from;
EdgeClass NotionLinksToDataType from Notion (0,*) role notion to AttributeDataType (0,1) role dataType;
AggregationClass PackageContainsNotion: rsl.rsldomainelements.domainelements.PackageContainsDomainElement from NotionsPackage (1,1) role package to Notion (0,*) role notion aggregate from;
EdgeClass SpecialLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from NotionSpecialisation (0,*) role special to Notion (1,1) role target redefines target;
AggregationClass StatementContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from DomainStatement (1,1) role statement to rsl.rsldomainelements.phrases.Phrase (1,1) role name aggregate from;
AggregationClass StatementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from DomainStatement (1,1) role statement to rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (1,*) role representation aggregate from;
EdgeClass UiElementLinksToElementTypeIndicator from rsl.rsldomainelements.uielements.UIElement (0,1) role uiElement to Notion (0,1) role elementTypeIndicator;
Package rsl.rsldomainelements.phrases;
VertexClass ComplexVerbPhrase: VerbPhrase;
VertexClass DeterminerLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass ModifierLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass NounLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass NounPhrase: Phrase;
VertexClass Phrase: rsl.rslkernel.elements.TermOrPhrase, rsl.rslkernel.elements.SentenceOrPhrase;
VertexClass PhraseHyperlink: rsl.rslkernel.elements.Hyperlink;
VertexClass PhrasePrepositionLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass PhraseVerbLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass SimpleVerbPhrase: VerbPhrase;
abstract VertexClass VerbPhrase: Phrase;
AggregationClass ComplexVerbPhraseContainsSimpleVerbPhrase from ComplexVerbPhrase (0,1) role complexVerbPhrase to SimpleVerbPhrase (1,1) role simpleVerbPhrase aggregate from;
CompositionClass DeterminerIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from DeterminerLink (0,1) role determiner to NounPhrase (1,1) role source aggregate to;
EdgeClass DeterminerLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from DeterminerLink (0,*) role determinerLink to rsl.rsldomainelements.terms.Determiner (1,1) role target;
CompositionClass ModifierIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from ModifierLink (0,1) role modifier to NounPhrase (1,1) role source aggregate to;
EdgeClass ModifierLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from ModifierLink (0,*) role modifierLink to rsl.rsldomainelements.terms.Modifier (1,1) role target;
CompositionClass NounIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from NounLink (1,1) role noun to NounPhrase (1,1) role source aggregate to;
EdgeClass NounLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from NounLink (0,*) role nounLink to rsl.rsldomainelements.terms.Noun (1,1) role target;
abstract EdgeClass PhraseHyperlinkLinksToTarget: rsl.rslkernel.elements.HyperlinkLinksToTarget from PhraseHyperlink (0,*) to Phrase (1,1) role target;
CompositionClass PrepositionIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from PhrasePrepositionLink (0,1) role preposition to VerbPhrase (1,1) role source aggregate to;
EdgeClass PrepositionLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from PhrasePrepositionLink (0,*) role prepositionLink to rsl.rsldomainelements.terms.Preposition (1,1) role target;
CompositionClass VerbIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from PhraseVerbLink (1,1) role verb to SimpleVerbPhrase (1,1) role source aggregate to;
EdgeClass VerbLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from PhraseVerbLink (0,*) role verbLink to rsl.rsldomainelements.terms.Verb (1,1) role target;
AggregationClass VerbPhraseContainsObject from VerbPhrase (0,1) role verbPhrase to NounPhrase (0,1) role object aggregate from;
Package rsl.rsldomainelements.systemelements;
VertexClass SystemElement: rsl.rsldomainelements.domainelements.ActorOrSystemElement;
VertexClass SystemElementsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
AggregationClass NestingPackageContainsNestedPackage: rsl.rsldomainelements.domainelements.NestingPackageContainsNestedPackage from SystemElementsPackage (1,1) role nestingPackage to SystemElementsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsSystemElement: rsl.rsldomainelements.domainelements.PackageContainsDomainElement from SystemElementsPackage (1,1) role package to SystemElement (0,*) role systemElement aggregate from;
Package rsl.rsldomainelements.terms;
VertexClass Article: Determiner;
VertexClass ConditionalConjunction: Term;
VertexClass Determiner: Term;
VertexClass Lemma: sclkernel.SCLElement;
VertexClass Lexeme: sclkernel.SCLElement { language: String };
VertexClass ModalVerb: Term;
VertexClass Modifier: Term;
VertexClass Noun: Term;
VertexClass Preposition: Term;
VertexClass Quantifier: Determiner;
abstract VertexClass Term: rsl.rslkernel.elements.TermOrPhrase { keyword: String,  name: String,  synonymUid: Long };
abstract VertexClass TermHyperlink: rsl.rslkernel.elements.Hyperlink { value: String };
VertexClass Terminology: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass Verb: Term;
CompositionClass LemmaIsPartOfLexeme from Lemma (1,1) role lemma to Lexeme (1,1) aggregate to;
CompositionClass LexemeIsPartOfTerm from Lexeme (1,*) role lexeme to Term (1,1) aggregate to;
abstract EdgeClass TermHyperlinkLinksToTarget: rsl.rslkernel.elements.HyperlinkLinksToTarget from TermHyperlink (0,*) to Term (1,1) role target;
AggregationClass TerminologyContainsTerm: sclkernel.SCLElementsPackageContainsElement from Terminology (1,1) role terminology to Term (0,*) role term aggregate from;
Package rsl.rsldomainelements.uielements;
VertexClass InputOutputDevice: rsl.rsldomainelements.systemelements.SystemElement { deviceName: String };
VertexClass InputOutputStyle: rsl.rslkernel.elements.RepresentableElement { styleName: String };
VertexClass InputOutputStyleRepresentation: rsl.rslkernel.elements.ElementRepresentation;
VertexClass InputUIElement: UIElement { dataValidation: String };
VertexClass OptionUIElement: UIElement { isReSelectable: Boolean };
VertexClass SelectionUIElement: UIElement { maximumSelectableOptions: Integer,  sortCriterion: String,  sortOrder: String };
VertexClass TriggerUIElement: UIElement { executionTime: Integer,  isStatelessTrigger: Boolean };
VertexClass UIContainer: UIElement;
VertexClass UIElement: rsl.rslkernel.elements.RepresentableElement { hasAutoContent: Boolean,  isInteractionCritical: Boolean,  isMandatory: Boolean,  name: String };
abstract VertexClass UIElementRepresentation: rsl.rslkernel.elements.ElementRepresentation { implementationPlatform: String,  modality: String };
VertexClass UIElementsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
VertexClass UIPresentationUnit: UIContainer;
EdgeClass ButtonElementLinksToButtonWidget from TriggerUIElement (0,1) role buttonElement to rsl.rsldomainelements.uielements.guirepresentation.Button (0,*) role buttonWidget;
EdgeClass CheckOptionElementLinksToCheckOptionWidget from OptionUIElement (0,1) role checkOptionElement to rsl.rsldomainelements.uielements.guirepresentation.CheckOption (0,*) role checkOptionWidget;
EdgeClass CheckOptionListWidgetLinksToCheckOptionListSpecification from rsl.rsldomainelements.uielements.guirepresentation.CheckOptionList (0,*) role checkOptionListWidget to SelectionUIElement (0,1) role checkOptionListSpecification;
AggregationClass ContainerContainsContent from UIContainer (0,1) role container to UIElement (0,*) role content aggregate from;
EdgeClass ContainerElementLinksToContainerWidget from UIContainer (0,1) role containerElement to rsl.rsldomainelements.uielements.guirepresentation.Container (0,*) role containerWidget;
EdgeClass DialogElementLinksToDialogWidget from UIPresentationUnit (0,1) role dialogElement to rsl.rsldomainelements.uielements.guirepresentation.Dialog (0,*) role dialogWidget;
EdgeClass DropDownListElementLinksToDropDownListWidget from SelectionUIElement (0,1) role dropDownListElement to rsl.rsldomainelements.uielements.guirepresentation.DropDownList (0,*) role dropDownListWidget;
CompositionClass InputoutputstyleContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from InputOutputStyle (1,1) role inputoutputstyle redefines element to InputOutputStyleRepresentation (1,*) role representation redefines representation aggregate from;
EdgeClass InteractionDeviceLinksToSupportedInteractionStyle from InputOutputDevice (0,*) role interactionDevice to InputOutputStyle (0,*) role supportedInteractionStyle;
EdgeClass LabelElementLinksToLabelWidget from InputUIElement (0,1) role labelElement to rsl.rsldomainelements.uielements.guirepresentation.Label (0,*) role labelWidget;
EdgeClass OpenListElementLinksToOpenListWidget from SelectionUIElement (0,1) role openListElement to rsl.rsldomainelements.uielements.guirepresentation.OpenList (0,*) role openListWidget;
EdgeClass RadioOptionElementLinksToRadioOptionWidget from OptionUIElement (0,1) role radioOptionElement to rsl.rsldomainelements.uielements.guirepresentation.RadioOption (0,*) role radioOptionWidget;
EdgeClass RadioOptionListWidgetLinksToRadioOptionListSpecification from rsl.rsldomainelements.uielements.guirepresentation.RadioOptionList (0,*) role radioOptionListWidget to SelectionUIElement (0,1) role radioOptionListSpecification;
AggregationClass SelectionUIElementContainsOption from SelectionUIElement (1,1) to OptionUIElement (0,*) role option aggregate from;
EdgeClass TextFieldElementLinksToTextFieldWidget from InputUIElement (0,1) role textFieldElement to rsl.rsldomainelements.uielements.guirepresentation.TextField (0,*) role textFieldWidget;
EdgeClass ToggeButtonElementLinksToToggeButtonWidget from TriggerUIElement (0,1) role toggeButtonElement to rsl.rsldomainelements.uielements.guirepresentation.ToggleButton (0,*) role toggeButtonWidget;
EdgeClass UiElementLinksToRecommendedInteractionDevice from UIElement (0,*) role uiElement to InputOutputDevice (0,*) role recommendedInteractionDevice;
CompositionClass UielementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from UIElement (1,1) role uielement redefines element to UIElementRepresentation (1,*) role representation redefines representation aggregate from;
EdgeClass WindowElementLinksToWindowWidget from UIPresentationUnit (0,1) role windowElement to rsl.rsldomainelements.uielements.guirepresentation.Window (0,*) role windowWidget;
Package rsl.rslgoal.basicrepresentations;
abstract VertexClass TaskRepresentation: rsl.rslkernel.elements.ElementRepresentation { name: String };
Package rsl.rslgoal.goalrelationships;
VertexClass And: AndOrRelationship;
abstract VertexClass AndOrRelationship: GoalRelationship;
VertexClass Break: NegativeContributionTo;
abstract VertexClass GoalRelationship: sclkernel.TraceabilityLink, rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass GoalVocabularyRelationship: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass Help: PositiveContributionTo;
VertexClass Hurt: NegativeContributionTo;
VertexClass Make: PositiveContributionTo;
VertexClass NegativeContributionTo: SoftGoalRelationship;
VertexClass Or: AndOrRelationship;
VertexClass PositiveContributionTo: SoftGoalRelationship;
abstract VertexClass SoftGoalRelationship: GoalRelationship;
VertexClass SomeNegative: NegativeContributionTo;
VertexClass SomePositive: PositiveContributionTo;
VertexClass SubGoalOfRelationship: GoalRelationship;
EdgeClass GoalVocabularyLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from GoalVocabularyRelationship (0,*) role goalVocabulary to rsl.rsldomainelements.notions.Notion (1,1) role target redefines target;
Package rsl.rslgoal.goalrepresentations;
abstract VertexClass GoalRepresentation: rsl.rslkernel.elements.ElementRepresentation { name: String };
Package rsl.rslgoal.goalsspecifications;
VertexClass AchievementGoal: HardGoal;
VertexClass CompositeHardGoal: HardGoal;
VertexClass GoalSpecification: rsl.rslkernel.elements.RepresentableElement { goalID: String };
VertexClass GoalsPackage: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass GoalsSpecification: sclkernel.SoftwareArtifact;
abstract VertexClass HardGoal: GoalSpecification;
VertexClass SoftGoal: GoalSpecification;
EdgeClass AccomplishedByLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.taskspecifications.TaskHardGoalRelationship (0,*) role accomplishedBy to HardGoal (1,1) role source;
AggregationClass GoalContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from GoalSpecification (0,1) role goal to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,1) role name aggregate from;
AggregationClass GoalContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from GoalSpecification (1,1) role goal to rsl.rslgoal.goalrepresentations.GoalRepresentation (1,*) role representation aggregate from;
EdgeClass GoalSpecificationLinksToDomainSpecification from GoalsSpecification (1,1) role goalSpecification to rsl.rsldomainelements.domainelements.DomainSpecification (1,1) role domainSpecification;
AggregationClass GoalsSpecificationContainsGoalsPackage: sclkernel.SCLElementsPackageContainsNestedPackage from GoalsSpecification (1,1) role goalsSpecification to GoalsPackage (0,*) role goalsPackage aggregate from;
AggregationClass NestingPackageContainsNestedPackage: rsl.rslkernel.elements.NestingPackageContainsNestedPackage from GoalsPackage (1,1) role nestingPackage to GoalsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsGoal from GoalsPackage (1,1) role package to GoalSpecification (0,*) role goal aggregate from;
EdgeClass PartRelationLinksToWhole: sclkernel.SCLRelationshipLinksToTarget from rsl.rslgoal.goalrelationships.SubGoalOfRelationship (0,*) role partRelation to CompositeHardGoal (1,1) role whole;
EdgeClass SatisfiedByLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.requirementsspecifications.SatisficesRelationship (0,*) role satisfiedBy to SoftGoal (1,1) role source;
EdgeClass SoftGoalNegativeInfluenceLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.taskspecifications.InfluencesNegatively (0,*) role softGoalNegativeInfluence to SoftGoal (1,1) role source;
EdgeClass SoftGoalPositiveInfluenceLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.taskspecifications.InfluencesPositively (0,*) role softGoalPositiveInfluence to SoftGoal (1,1) role source;
EdgeClass SourceAndOrRelationshipLinksToComposesGoal: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.AndOrRelationship (1,1) role sourceAndOrRelationship to GoalSpecification (1,1) role composesGoal;
EdgeClass SourceLinksToAchieves from rsl.rslrequirementrepresentations.descriptiverequirementrepresentations.AchievesRelationship (1,*) role source to AchievementGoal (0,1) role achieves;
EdgeClass SourceSoftGoalRelationshipLinksToComposesSoftGoal: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.SoftGoalRelationship (1,1) role sourceSoftGoalRelationship to SoftGoal (1,1) role composesSoftGoal;
EdgeClass TargetAndOrRelationshipLinksToComposedGoal: sclkernel.SCLRelationshipLinksToTarget from rsl.rslgoal.goalrelationships.AndOrRelationship (1,1) role targetAndOrRelationship to GoalSpecification (1,1) role composedGoal;
EdgeClass TargetSoftGoalRelationshipLinksToComposedSoftGoal: sclkernel.SCLRelationshipLinksToTarget from rsl.rslgoal.goalrelationships.SoftGoalRelationship (1,1) role targetSoftGoalRelationship to SoftGoal (1,1) role composedSoftGoal;
EdgeClass VocabularyLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.GoalVocabularyRelationship (0,*) role vocabulary to GoalSpecification (1,1) role source;
EdgeClass WholeRelationLinksToPart: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.SubGoalOfRelationship (1,1) role wholeRelation to HardGoal (1,1) role part;
Package rsl.rslgoal.taskspecifications;
VertexClass CompositeTask: Task;
VertexClass CompositeTaskRelationship: TaskRelationship;
VertexClass InfluencesNegatively: TaskRelationship;
VertexClass InfluencesPositively: TaskRelationship;
VertexClass Task: rsl.rslkernel.elements.RepresentableElementsPackage, rsl.rslkernel.elements.RepresentableElement { taskID: String };
VertexClass TaskHardGoalRelationship: TaskRelationship;
abstract VertexClass TaskRelationship: sclkernel.TraceabilityLink, rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass TaskSpecification: sclkernel.SoftwareArtifact;
EdgeClass AccomplishesGoalLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from TaskHardGoalRelationship (0,*) role accomplishesGoal to Task (1,1) role target;
EdgeClass ContainedTaskLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from CompositeTaskRelationship (0,*) role containedTask to CompositeTask (1,1) role target;
EdgeClass ContainingTaskLinksToSource: sclkernel.SCLRelationshipLinksToSource from CompositeTaskRelationship (0,*) role containingTask to Task (1,1) role source;
CompositionClass RepresentingScenarioIsPartOfRepresentedTask from rsl.rslrequirementrepresentations.descriptiverequirementrepresentations.ConstrainedLanguageScenario (0,1) role representingScenario to Task (0,1) role representedTask aggregate to;
AggregationClass TaskContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from Task (0,1) role task to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,1) role name aggregate from;
AggregationClass TaskContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from Task (1,1) role task to rsl.rslgoal.basicrepresentations.TaskRepresentation (1,*) role representation aggregate from;
EdgeClass TaskNegativeInfluenceLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from InfluencesNegatively (0,*) role taskNegativeInfluence to Task (1,1) role target;
EdgeClass TaskPositiveInfluenceLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from InfluencesPositively (0,*) role taskPositiveInfluence to Task (1,1) role target;
AggregationClass TaskSpecificationContainsTask: sclkernel.SCLElementsPackageContainsElement from TaskSpecification (1,1) role taskSpecification to Task (0,*) role task aggregate from;
Package rsl.rslkernel.attributes;
VertexClass Attribute: sclkernel.SCLElement { data: String };
VertexClass AttributeDefinition: sclkernel.SCLElement { name: String,  type: String };
VertexClass AttributeSet: sclkernel.SCLElement;
EdgeClass AttributeLinksToAttributeDefinition from Attribute (0,*) to AttributeDefinition (1,1);
AggregationClass AttributeSetContainsDefinition from AttributeSet (1,1) to AttributeDefinition (0,*) role definition aggregate from;
AggregationClass RepresentableElementContainsAttribute from rsl.rslkernel.elements.RepresentableElement (1,1) to Attribute (0,*) role attribute aggregate from;
EdgeClass RepresentableElementLinksToAttributeSet from rsl.rslkernel.elements.RepresentableElement (0,*) to AttributeSet (1,*) role attributeSet;
Package rsl.rslkernel.elements;
abstract VertexClass ElementRepresentation: sclkernel.SCLElement;
abstract VertexClass Hyperlink: sclkernel.SCLRelationship;
abstract VertexClass HyperlinkedSentence: SentenceOrPhrase { sentenceText: String };
abstract VertexClass RepresentableElement: sclkernel.SCLElement;
abstract VertexClass RepresentableElementRelationship: sclkernel.SCLRelationship;
abstract VertexClass RepresentableElementsPackage: sclkernel.SCLElementsPackage;
abstract VertexClass SentenceOrPhrase: sclkernel.SCLElement;
abstract VertexClass TermOrPhrase: sclkernel.SCLElement;
abstract AggregationClass ElementContainsRepresentation from RepresentableElement (1,1) role element to ElementRepresentation (1,*) role representation aggregate from;
abstract AggregationClass ElementRepresentationContainsSentence from ElementRepresentation (0,1) to HyperlinkedSentence (0,*) role sentence aggregate from;
abstract EdgeClass HyperlinkLinksToSource: sclkernel.SCLRelationshipLinksToSource from Hyperlink (0,*) role hyperlink to SentenceOrPhrase (1,1) role source;
abstract EdgeClass HyperlinkLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from Hyperlink (0,*) to TermOrPhrase (1,1) role target;
abstract AggregationClass NestingPackageContainsNestedPackage: sclkernel.SCLElementsPackageContainsNestedPackage from RepresentableElementsPackage (1,1) role nestingPackage to RepresentableElementsPackage (0,*) role nestedPackage aggregate from;
EdgeClass RelatedUIPresentationLinksToRequirementSentence from rsl.rsldomainelements.uielements.UIPresentationUnit (0,1) role relatedUIPresentation to HyperlinkedSentence (0,*) role requirementSentence;
abstract AggregationClass RepresentableElementContainsName from RepresentableElement (0,1) role representableElement to sclkernel.SCLElement (1,1) role name aggregate from;
abstract AggregationClass RepresentableElementsPackageContainsElement: sclkernel.SCLElementsPackageContainsElement from RepresentableElementsPackage (1,1) to RepresentableElement (0,*) role element aggregate from;
abstract EdgeClass ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.ScenarioMessage (0,*) to SentenceOrPhrase (1,1) role messageText;
AggregationClass SentenceListContainsSentence: ElementRepresentationContainsSentence from rsl.rslrequirementrepresentations.descriptiverequirementrepresentations.SentenceList (0,1) role sentenceList to HyperlinkedSentence (1,*) role sentence aggregate from;
abstract EdgeClass TermHyperlinkLinksToSource: HyperlinkLinksToSource from rsl.rsldomainelements.terms.TermHyperlink (0,*) to SentenceOrPhrase (1,1) role source;
EdgeClass UserActionOfAnnotationLinksToAnnotation from rsl.rslrequirementrepresentations.uibehaviourrepresentations.UserAction (0,1) role userActionOfAnnotation to HyperlinkedSentence (0,*) role annotation;
EdgeClass UserActionOfConditionLinksToCondition from rsl.rslrequirementrepresentations.uibehaviourrepresentations.UserAction (0,1) role userActionOfCondition to HyperlinkedSentence (0,*) role condition;
Package rsl.rslrequirementrepresentations.activityrepresentations;
VertexClass ActivityScenario: rsl.rslrequirementrepresentations.requirementrepresentations.ModelBasedRequirementRepresentation;
AggregationClass ScenarioContainsEdge from ActivityScenario (1,1) role scenario to rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityEdge (0,*) role edge aggregate from;
AggregationClass ScenarioContainsNode from ActivityScenario (1,1) role scenario to rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityNode (0,*) role node aggregate from;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
VertexClass AchievesRelationship: rsl.rslgoal.goalrelationships.GoalRelationship;
VertexClass ConstrainedLanguageScenario: rsl.rslrequirementrepresentations.requirementrepresentations.DescriptiveRequirementRepresentation;
VertexClass SentenceList: rsl.rslrequirementrepresentations.requirementrepresentations.DescriptiveRequirementRepresentation, rsl.rslgoal.basicrepresentations.TaskRepresentation, rsl.rslgoal.goalrepresentations.GoalRepresentation;
EdgeClass AchievedFromLinksToTarget from ConstrainedLanguageScenario (1,*) role achievedFrom to AchievesRelationship (0,1) role target;
AggregationClass ScenarioContainsScenarioStep from ConstrainedLanguageScenario (0,1) role scenario to rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence (0,*) role scenarioStep aggregate from;
AggregationClass ScenarioContainsUiStoryboard from ConstrainedLanguageScenario (0,1) role scenario to rsl.rslrequirementrepresentations.uibehaviourrepresentations.UIStoryboard (0,1) role uiStoryboard aggregate from;
AggregationClass SentenceListContainsUiStoryboard from SentenceList (0,1) role sentenceList to rsl.rslrequirementrepresentations.uibehaviourrepresentations.UIStoryboard (0,1) role uiStoryboard aggregate from;
CompositionClass TextualSentencesIsPartOfSentenceList from rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,*) role textualSentences to SentenceList (1,1) aggregate to;
Package rsl.rslrequirementrepresentations.interactionrepresentations;
VertexClass InteractionScenario: rsl.rslrequirementrepresentations.requirementrepresentations.ModelBasedRequirementRepresentation;
AggregationClass InteractionScenarioContainsLifeline from InteractionScenario (1,1) to rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.InteractionRepresentationLifeline (0,*) role lifeline aggregate from;
AggregationClass InteractionScenarioContainsMessage from InteractionScenario (1,1) to rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.ScenarioMessage (0,*) role message aggregate from;
Package rsl.rslrequirementrepresentations.requirementrepresentations;
abstract VertexClass DescriptiveRequirementRepresentation: RequirementRepresentation;
abstract VertexClass ModelBasedRequirementRepresentation: RequirementRepresentation;
abstract VertexClass RequirementRepresentation: rsl.rslkernel.elements.ElementRepresentation { name: String };
Package rsl.rslrequirementrepresentations.uibehaviourrepresentations;
VertexClass UIStoryboard: rsl.rslkernel.elements.RepresentableElement { name: String };
VertexClass UIStoryboardRepresentation: rsl.rslkernel.elements.ElementRepresentation;
VertexClass UserAction: rsl.rslkernel.elements.RepresentableElement { name: String };
VertexClass UserActionRepresentation: rsl.rslkernel.elements.ElementRepresentation;
EdgeClass IncomingEventLinksToEventListener from UserAction (0,*) role incomingEvent to rsl.rsldomainelements.uielements.UIElement (0,*) role eventListener;
EdgeClass IncommingActionLinksToSuccessor: IncomingEventLinksToEventListener from UserAction (0,*) role incommingAction redefines incomingEvent to rsl.rsldomainelements.uielements.UIPresentationUnit (0,*) role successor;
EdgeClass OutgoingActionLinksToPredecessor: OutgoingEventLinksToEventSource from UserAction (0,*) role outgoingAction redefines outgoingEvent to rsl.rsldomainelements.uielements.UIPresentationUnit (1,*) role predecessor;
EdgeClass OutgoingEventLinksToEventSource from UserAction (0,*) role outgoingEvent to rsl.rsldomainelements.uielements.UIElement (1,*) role eventSource;
CompositionClass SceneIsPartOfUiStoryboard from rsl.rsldomainelements.uielements.UIPresentationUnit (1,*) role scene to UIStoryboard (0,*) role uiStoryboard aggregate to;
CompositionClass StoryboardContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from UIStoryboard (1,1) role storyboard redefines element to UIStoryboardRepresentation (1,*) role representation redefines representation aggregate from;
CompositionClass UiStoryboardContainsSentence: rsl.rslkernel.elements.ElementRepresentationContainsSentence from UIStoryboardRepresentation (0,1) role uiStoryboard to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (0,*) role sentence redefines sentence aggregate from;
AggregationClass UserActionContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation, rsl.rslkernel.elements.RepresentableElementContainsName from UserAction (1,1) role userAction redefines representableElement to UserActionRepresentation (1,1) role representation redefines representation aggregate from;
CompositionClass UserActionContainsSentence: rsl.rslkernel.elements.ElementRepresentationContainsSentence from UserActionRepresentation (0,1) role userAction to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (0,*) role sentence redefines sentence aggregate from;
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
VertexClass RSLActivityEdge: sclkernel.SCLElement;
VertexClass RSLActivityNode: sclkernel.SCLElement;
EdgeClass IncomingControlFlowLinksToTargetNode from RSLActivityEdge (0,*) role incomingControlFlow to RSLActivityNode (1,1) role targetNode;
EdgeClass OutgoingControlFlowLinksToSourceNode from RSLActivityEdge (0,*) role outgoingControlFlow to RSLActivityNode (1,1) role sourceNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
abstract VertexClass ConstrainedLanguageSentence: rsl.rslkernel.elements.HyperlinkedSentence;
VertexClass RejoinSentence: ConstrainedLanguageSentence;
AggregationClass EdgeContainsRejoin from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityEdge (0,1) role edge to RejoinSentence (0,1) role rejoin aggregate from;
AggregationClass NodeContainsContainedSentence from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityNode (0,1) role node to ConstrainedLanguageSentence (1,1) role containedSentence aggregate from;
AggregationClass RejoinMessageContainsRejoinSentence from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.RejoinMessage (0,1) to RejoinSentence (1,1) role rejoinSentence aggregate from;
EdgeClass RejoinedSentenceLinksToRejoin from ConstrainedLanguageSentence (1,1) role rejoinedSentence to RejoinSentence (0,*) role rejoin;
Package rsl.rslrequirementrepresentationsentences.controlsentences;
EnumDomain InclusionType ( INSERT, REQUEST );
VertexClass ConditionSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
abstract VertexClass ControlSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
VertexClass InvocationSentence: ControlSentence { inclusionType: InclusionType };
VertexClass PostconditionSentence: ControlSentence { isSuccess: Boolean };
VertexClass PreconditionSentence: ControlSentence { inclusionType: InclusionType };
AggregationClass EdgeContainsCondition from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityEdge (0,1) role edge to ConditionSentence (0,1) role condition aggregate from;
AggregationClass InvokeMessageContainsMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.InvokeMessage (0,1) to InvocationSentence (1,1) role messageText aggregate from;
AggregationClass PostconditionMessageContainsMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.PostconditionMessage (0,1) to PostconditionSentence (1,1) role messageText aggregate from;
AggregationClass PreconditionMessageContainsMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.PreconditionMessage (0,1) to PreconditionSentence (1,1) role messageText aggregate from;
Package rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs;
VertexClass ActorLifeline: NounPhraseLifeline;
VertexClass ActorMessageEnd: ScenarioMessageEnd;
abstract VertexClass InteractionRepresentationLifeline: rsl.rslkernel.elements.ElementRepresentation;
VertexClass InvokeLifeline: InteractionRepresentationLifeline;
VertexClass InvokeMessage: ScenarioMessage;
VertexClass InvokeMessageEnd: ScenarioMessageEnd;
abstract VertexClass NounPhraseLifeline: InteractionRepresentationLifeline, rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation;
VertexClass PostconditionMessage: ScenarioMessage;
VertexClass PreconditionMessage: ScenarioMessage;
VertexClass PredicateMessage: ScenarioMessage;
VertexClass RejoinMessage: ScenarioMessage;
abstract VertexClass ScenarioMessage: sclkernel.SCLElement;
VertexClass ScenarioMessageEnd;
VertexClass SystemElementLifeline: NounPhraseLifeline;
VertexClass SystemElementMessageEnd: ScenarioMessageEnd;
CompositionClass ActorContainsLifelineRepresentation from rsl.rsldomainelements.actors.Actor (1,1) to ActorLifeline (0,*) role lifelineRepresentation aggregate from;
CompositionClass ActorMessageEndIsPartOfCovered from ActorMessageEnd (0,*) role actorMessageEnd to ActorLifeline (1,1) role covered aggregate to;
CompositionClass CoveredContainsSystemElementMessageEnd from SystemElementLifeline (1,1) role covered to SystemElementMessageEnd (0,*) role systemElementMessageEnd aggregate from;
CompositionClass InvokeMessageEndIsPartOfCovered from InvokeMessageEnd (1,1) role invokeMessageEnd to InvokeLifeline (1,1) role covered aggregate to;
EdgeClass InvokeMessageLinksToReceiveEvent from InvokeMessage (1,1) to InvokeMessageEnd (1,1) role receiveEvent;
EdgeClass InvokeMessageLinksToSendEvent from InvokeMessage (0,1) to SystemElementMessageEnd (1,1) role sendEvent;
AggregationClass NounPhraseLifelineContainsName from NounPhraseLifeline (1,1) to rsl.rsldomainelements.phrases.NounPhrase (0,1) role name aggregate from;
EdgeClass PostconditionMessageLinksToSendEvent from PostconditionMessage (0,1) to ActorMessageEnd (1,1) role sendEvent;
EdgeClass PreconditionMessageLinksToRecieveEvent from PreconditionMessage (0,1) to ActorMessageEnd (1,1) role recieveEvent;
EdgeClass PredicateMessageLinksToRecieveEventActor from PredicateMessage (0,1) to ActorMessageEnd (0,1) role recieveEventActor;
EdgeClass PredicateMessageLinksToRecieveEventSystem from PredicateMessage (0,1) to SystemElementMessageEnd (0,1) role recieveEventSystem;
EdgeClass PredicateMessageLinksToSendEventActor from PredicateMessage (0,1) to ActorMessageEnd (0,1) role sendEventActor;
EdgeClass PredicateMessageLinksToSendEventSystem from PredicateMessage (0,1) to SystemElementMessageEnd (0,1) role sendEventSystem;
EdgeClass RejoinMessageLinksToRecieveEventActor from RejoinMessage (0,*) to ActorMessageEnd (0,1) role recieveEventActor;
EdgeClass RejoinMessageLinksToRecieveEventSystem from RejoinMessage (0,*) to SystemElementMessageEnd (0,1) role recieveEventSystem;
EdgeClass RejoinMessageLinksToSendEventActor from RejoinMessage (0,*) to ActorMessageEnd (0,1) role sendEventActor;
EdgeClass RejoinMessageLinksToSendEventSystem from RejoinMessage (0,*) to SystemElementMessageEnd (0,1) role sendEventSystem;
EdgeClass SourceLinksToMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from PredicateMessage (0,*) role source to rsl.rsldomainelements.phrases.VerbPhrase (1,1) role messageText;
CompositionClass SystemElementContainsLifelineRepresentation from rsl.rsldomainelements.systemelements.SystemElement (1,1) to SystemElementLifeline (0,*) role lifelineRepresentation aggregate from;
Package rsl.rslrequirementrepresentationsentences.representationsentences;
VertexClass NaturalLanguageHypertextSentence: rsl.rslkernel.elements.HyperlinkedSentence;
CompositionClass InteractionStyleContainsStyleDescription: rsl.rslkernel.elements.ElementRepresentationContainsSentence from rsl.rsldomainelements.uielements.InputOutputStyleRepresentation (0,1) role interactionStyle to NaturalLanguageHypertextSentence (1,*) role styleDescription redefines sentence aggregate from;
AggregationClass RepresentationContainsSentence: rsl.rslkernel.elements.ElementRepresentationContainsSentence from rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (0,1) role representation to NaturalLanguageHypertextSentence (0,*) role sentence aggregate from;
Package rsl.rslrequirementrepresentationsentences.svosentences;
VertexClass ConditionalConjunctionLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass ConditionalSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
VertexClass ModalSVOSentence: SVOSentence;
VertexClass ModalVerbLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass Predicate: rsl.rsldomainelements.phrases.PhraseHyperlink;
VertexClass SVOSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
VertexClass Subject: rsl.rsldomainelements.phrases.PhraseHyperlink;
CompositionClass ConditionalConjunctionIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from ConditionalConjunctionLink (0,1) role conditionalConjunction to ConditionalSentence (1,1) role source aggregate to;
CompositionClass ConditionalSentenceContainsConditionalClause from ConditionalSentence (1,1) role conditionalSentence to SVOSentence (0,1) role conditionalClause aggregate from;
CompositionClass ConjunctionLinkContainsTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from ConditionalConjunctionLink (0,*) role conjunctionLink to rsl.rsldomainelements.terms.ConditionalConjunction (1,1) role target aggregate from;
EdgeClass LinkingPredicateLinksToDomainStatement from Predicate (0,*) role linkingPredicate to rsl.rsldomainelements.notions.DomainStatement (0,1) role domainStatement;
EdgeClass LinkingSubjectLinksToDomainElement from Subject (0,*) role linkingSubject to rsl.rsldomainelements.domainelements.DomainElement (0,1) role domainElement;
AggregationClass ModalVerbIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from ModalVerbLink (1,1) role modalVerb to ModalSVOSentence (1,1) role source aggregate to;
EdgeClass ModalVerbLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from ModalVerbLink (0,*) role modalVerbLink to rsl.rsldomainelements.terms.ModalVerb (1,1) role target;
EdgeClass NodeLinksToPartition from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityNode (0,1) role node to Subject (0,1) role partition;
CompositionClass OwnedSentenceContainsMainClause from ConditionalSentence (0,1) role ownedSentence to ModalSVOSentence (1,1) role mainClause aggregate from;
AggregationClass PredicateContainsTarget: rsl.rsldomainelements.phrases.PhraseHyperlinkLinksToTarget from Predicate (0,*) role predicate to rsl.rsldomainelements.phrases.VerbPhrase (1,1) role target aggregate from;
CompositionClass PredicateIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from Predicate (1,1) role predicate to SVOSentence (1,1) role source aggregate to;
EdgeClass SentenceLinksToRecipient from SVOSentence (1,1) role sentence to rsl.rsldomainelements.domainelements.ActorOrSystemElement (0,1) role recipient;
AggregationClass SubjectContainsTarget: rsl.rsldomainelements.phrases.PhraseHyperlinkLinksToTarget from Subject (0,*) role subject to rsl.rsldomainelements.phrases.NounPhrase (1,1) role target aggregate from;
CompositionClass SubjectIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from Subject (1,1) role subject to SVOSentence (1,1) role source aggregate to;
Package rsl.rslrequirements.requirementrelationships;
VertexClass ConflictsWith: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass Constrains: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass DependsOn: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass DerivesFrom: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass Elaborates: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass Fulfils: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass IsSimilarTo: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass MakesPossible: NonInvocationRelationship, sclkernel.TraceabilityLink;
abstract VertexClass NonInvocationRelationship: RequirementRelationship;
VertexClass Operationalizes: NonInvocationRelationship, sclkernel.TraceabilityLink;
abstract VertexClass RequirementRelationship: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass RequirementVocabularyRelationship: rsl.rslkernel.elements.RepresentableElementRelationship;
EdgeClass RequirementVocabularyLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from RequirementVocabularyRelationship (0,*) role requirementVocabulary to rsl.rsldomainelements.notions.Notion (1,1) role target;
EdgeClass VocabularyLinksToTarget from RequirementVocabularyRelationship (0,*) role voc2 to rsl.rsldomainelements.notions.Notion (0,*) role tar2;
Package rsl.rslrequirements.requirementsspecifications;
VertexClass ConstraintOnProcess: Requirement;
VertexClass ConstraintOnSystem: Requirement;
VertexClass FunctionalRequirementOnComposite: Requirement;
VertexClass FunctionalRequirementOnSystem: Requirement;
VertexClass RSLUseCase: Requirement;
VertexClass Requirement: rsl.rslkernel.elements.RepresentableElement { requirementId: String };
VertexClass RequirementsPackage: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass RequirementsSpecification: sclkernel.SoftwareArtifact;
VertexClass SatisficesRelationship: rsl.rslgoal.goalrelationships.GoalRelationship;
EdgeClass FromLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.requirementrelationships.NonInvocationRelationship (0,*) role from to Requirement (1,1) role source;
EdgeClass InvokeLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.usecaserelationships.InvocationRelationship (0,*) role invoke to RSLUseCase (1,1) role source;
EdgeClass InvokedLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.usecaserelationships.InvocationRelationship (0,*) role invoked to RSLUseCase (1,1) role target;
AggregationClass NestingPackageContainsNestedPackage: rsl.rslkernel.elements.NestingPackageContainsNestedPackage from RequirementsPackage (1,1) role nestingPackage to RequirementsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsRequirement: rsl.rslkernel.elements.RepresentableElementsPackageContainsElement from RequirementsPackage (1,1) role package to Requirement (0,*) role requirement aggregate from;
EdgeClass ParticipationLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.usecaserelationships.Participation (0,*) role participation to RSLUseCase (1,1) role target;
AggregationClass RSLUseCaseContainsLifelineRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from RSLUseCase (1,1) to rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.InvokeLifeline (1,*) role lifelineRepresentation aggregate from;
AggregationClass RequirementContainsInteraction: RequirementContainsRepresentation from RSLUseCase (1,1) role requirement to rsl.rslrequirementrepresentations.interactionrepresentations.InteractionScenario (1,*) role interaction aggregate from;
AggregationClass RequirementContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from Requirement (0,1) role requirement to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,1) role name aggregate from;
AggregationClass RequirementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from Requirement (1,1) role requirement to rsl.rslrequirementrepresentations.requirementrepresentations.RequirementRepresentation (1,*) role representation aggregate from;
AggregationClass RequirementsSpecificationContainsRequirementsPackage: sclkernel.SCLElementsPackageContainsElement from RequirementsSpecification (1,1) role requirementsSpecification to RequirementsPackage (0,*) role requirementsPackage aggregate from;
EdgeClass RequirementsSpecificationLinksToDomainSpecification from RequirementsSpecification (1,1) role requirementsSpecification to rsl.rsldomainelements.domainelements.DomainSpecification (1,1) role domainSpecification;
AggregationClass RslUseCaseContainsActivity: RequirementContainsRepresentation from RSLUseCase (1,1) role rslUseCase to rsl.rslrequirementrepresentations.activityrepresentations.ActivityScenario (1,1) role activity aggregate from;
EdgeClass SatisfiesLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from SatisficesRelationship (0,*) role satisfies to ConstraintOnSystem (1,1) role target;
EdgeClass ToLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.requirementrelationships.NonInvocationRelationship (0,*) role to to Requirement (1,1) role target;
EdgeClass UsageLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.usecaserelationships.Usage (1,1) role usage to RSLUseCase (1,1) role target;
EdgeClass VocabularyLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.requirementrelationships.RequirementVocabularyRelationship (0,*) role vocabulary to Requirement (1,1) role source;
Package rsl.rslrequirements.usecaserelationships;
VertexClass InvocationRelationship: rsl.rslrequirements.requirementrelationships.RequirementRelationship;
VertexClass Participation: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass Usage: rsl.rslkernel.elements.RepresentableElementRelationship;
EdgeClass InvocationLinksToInvokeDescription from InvocationRelationship (1,1) role invocation to rsl.rslrequirementrepresentationsentences.controlsentences.InvocationSentence (1,1) role invokeDescription;
EdgeClass SourceParticipationLinksToSource: sclkernel.SCLRelationshipLinksToSource from Participation (1,1) role sourceParticipation to rsl.rsldomainelements.actors.Actor (1,1) role source;
EdgeClass UsageLinksToSource: sclkernel.SCLRelationshipLinksToSource from Usage (0,*) role usage to rsl.rsldomainelements.actors.Actor (1,1) role source;
Package uml.action.basicactions;
abstract VertexClass Action: uml.activities.basicactivities.ActivityNode;
abstract VertexClass CallAction: InvocationAction { isSynchronous: Boolean };
VertexClass CallBehaviorAction: CallAction;
abstract VertexClass InvocationAction: Action;
VertexClass OpaqueAction: Action { body: String,  language: String };
EdgeClass BehaviorLinksToCallAction from uml.commonbehaviors.basicbehaviors.Behavior (1,1) role behavior to CallBehaviorAction (0,*) role callAction;
Package uml.activities.basicactivities;
VertexClass Activity: uml.commonbehaviors.basicbehaviors.Behavior { isReadOnly: Boolean };
abstract VertexClass ActivityEdge: uml.classes.kernel.RedefinableElement;
VertexClass ActivityFinalNode: ControlNode;
abstract VertexClass ActivityGroup: uml.classes.kernel.Element;
abstract VertexClass ActivityNode: uml.classes.kernel.RedefinableElement;
VertexClass ControlFlow: ActivityEdge;
abstract VertexClass ControlNode: ActivityNode;
VertexClass InitialNode: ControlNode;
CompositionClass ActivityContainsNode from Activity (0,1) role activity to ActivityNode (0,*) role node aggregate from;
CompositionClass ActivityEdgeContainsGuard from ActivityEdge (0,1) role activityEdge to uml.classes.kernel.ValueSpecification (1,1) role guard aggregate from;
CompositionClass EdgeIsPartOfActivity from ActivityEdge (0,*) role edge to Activity (0,1) role activity aggregate to;
EdgeClass EdgeLinksToInPartition from ActivityEdge (0,*) role edge to uml.activities.intermediateactivities.ActivityPartition (0,*) role inPartition;
CompositionClass GroupIsPartOfInActivity from ActivityGroup (0,*) role group to Activity (0,1) role inActivity aggregate to;
EdgeClass InPartitionLinksToNode from uml.activities.intermediateactivities.ActivityPartition (0,*) role inPartition to ActivityNode (0,*) role node;
EdgeClass SourceLinksToOutgoing from ActivityNode (1,1) role source to ActivityEdge (0,*) role outgoing;
EdgeClass TargetLinksToIncoming from ActivityNode (1,1) role target to ActivityEdge (0,*) role incoming;
Package uml.activities.intermediateactivities;
VertexClass ActivityPartition: uml.activities.basicactivities.ActivityGroup, uml.classes.kernel.NamedElement { isDimension: Boolean,  isExternal: Boolean };
EdgeClass RepresentedByLinksToRepresents from ActivityPartition (0,*) role representedBy to uml.classes.kernel.Element (0,1) role represents;
CompositionClass SubpartitionIsPartOfSuperPartition from ActivityPartition (0,*) role subpartition to ActivityPartition (0,1) role superPartition aggregate to;
Package uml.auxiliaryconstructs.models;
VertexClass Model: uml.classes.kernel.Package { viewpoint: String };
Package uml.classes.dependencies;
VertexClass Abstraction: Dependency;
VertexClass Dependency: uml.classes.kernel.PackagableElement, uml.classes.kernel.DirectedRelationship;
VertexClass Realization: Abstraction;
VertexClass Usage: Dependency;
EdgeClass ClientDependencyLinksToClient from Dependency (0,*) role clientDependency to uml.classes.kernel.NamedElement (1,*) role client;
EdgeClass SupplierDependencyLinksToSupplier from Dependency (0,*) role supplierDependency to uml.classes.kernel.NamedElement (1,*) role supplier;
Package uml.classes.interfaces;
VertexClass Interface: uml.classes.kernel.Classifier;
VertexClass InterfaceRealization: uml.classes.dependencies.Realization;
EdgeClass BaseInterfaceLinksToRedefinedInterface from Interface (0,*) role baseInterface to Interface (0,*) role redefinedInterface;
EdgeClass ContractLinksToInterfaceRealization from Interface (1,1) role contract to InterfaceRealization (0,*) role interfaceRealization;
CompositionClass InterfaceRealizationIsPartOfImplementingClassifier from InterfaceRealization (0,*) role interfaceRealization to uml.commonbehaviors.basicbehaviors.BehavioredClassifier (1,1) role implementingClassifier aggregate to;
CompositionClass OwnedOperationIsPartOfInterface from uml.classes.kernel.Operation (0,*) role ownedOperation to Interface (0,1) role interface aggregate to;
AggregationClass OwningInterfaceContainsOwnedAttribute from Interface (0,1) role owningInterface to uml.classes.kernel.Property (0,*) role ownedAttribute aggregate from;
Package uml.classes.kernel;
EnumDomain AggregationKind ( NONE, SHARED, COMPOSITE );
EnumDomain ParameterDirectionKind ( IN, INOUT, OUT, RETURN );
EnumDomain VisibilityKind ( PUBLIC, PRIVATE, PROTECTED, PACKAGE );
VertexClass Association: Relationship, Classifier { isDerived: Boolean };
abstract VertexClass BehavioralFeature: Feature, Namespace;
VertexClass Class: uml.compositestructures.ports.EncapsulatedClassifier, Classifier, uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
abstract VertexClass Classifier: RedefinableElement, Namespace, Type { isAbstract: Boolean };
VertexClass Comment: Element { body: String };
VertexClass Constraint: PackagableElement;
VertexClass DataType: Classifier;
abstract VertexClass DirectedRelationship: Relationship;
abstract VertexClass Element: sclkernel.SCLElement;
VertexClass ElementImport: DirectedRelationship { alias: String,  visibility: VisibilityKind };
VertexClass Enumeration: DataType;
VertexClass EnumerationLiteral: InstanceSpecification;
VertexClass Expression: ValueSpecification { symbol: String };
abstract VertexClass Feature: RedefinableElement { isStatic: Boolean };
VertexClass Generalization: DirectedRelationship { isSubstitutable: Boolean };
VertexClass InstanceSpecification: PackagableElement;
VertexClass InstanceValue: ValueSpecification;
VertexClass LiteralBoolean: LiteralSpecification { value: Boolean };
VertexClass LiteralInteger: LiteralSpecification { value: Integer };
VertexClass LiteralNull: LiteralSpecification;
abstract VertexClass LiteralSpecification: ValueSpecification;
VertexClass LiteralString: LiteralSpecification { value: String };
VertexClass LiteralUnlimitedNatural: LiteralSpecification { value: String };
abstract VertexClass MultiplicityElement: Element { isOrdered: Boolean,  isUnique: Boolean };
abstract VertexClass NamedElement: Element { name: String,  visibility: VisibilityKind };
abstract VertexClass Namespace: NamedElement;
VertexClass OpaqueExpression: ValueSpecification { body: String,  language: String };
VertexClass Operation: BehavioralFeature { isQuery: Boolean };
abstract VertexClass PackagableElement: NamedElement;
VertexClass Package: Namespace, PackagableElement;
VertexClass PackageImport: DirectedRelationship { visibility: VisibilityKind };
VertexClass Parameter: TypedElement, MultiplicityElement { direction: ParameterDirectionKind };
VertexClass PrimitiveType: DataType;
VertexClass Property: StructuralFeature, uml.compositestructures.internalstructures.ConnectableElement { aggregation: AggregationKind,  isDerived: Boolean,  isDerivedUnion: Boolean };
abstract VertexClass RedefinableElement: NamedElement { isLeaf: Boolean };
abstract VertexClass Relationship: Element;
VertexClass Stereotype: Element, sclkernel.Stereotype { keywords: String };
abstract VertexClass StructuralFeature: Feature, TypedElement, MultiplicityElement { isReadOnly: Boolean };
abstract VertexClass Type: PackagableElement;
abstract VertexClass TypedElement: NamedElement;
abstract VertexClass ValueSpecification: PackagableElement, TypedElement;
EdgeClass AnnotationLinksToAnnotatedElement from Comment (0,*) role annotation to Element (0,*) role annotatedElement;
EdgeClass BaseClassifierLinksToRedefinedClassifier from Classifier (0,*) role baseClassifier to Classifier (0,*) role redefinedClassifier;
EdgeClass BaseOperationLinksToRedefinedOperation from Operation (0,*) role baseOperation to Operation (0,*) role redefinedOperation;
EdgeClass BasePropertyLinksToRedefinedProperty from Property (0,*) role baseProperty to Property (0,*) role redefinedProperty;
CompositionClass ClassContainsOwnedAttribute from uml.compositestructures.internalstructures.StructuredClassifier (0,1) role class to Property (0,*) role ownedAttribute aggregate from;
EdgeClass ComponentRealizationLinksToRealizingClassifier from uml.components.basiccomponents.ComponentRealization (0,*) role componentRealization to Classifier (1,1) role realizingClassifier;
CompositionClass DefaultValueIsPartOfOwningParameter from ValueSpecification (0,1) role defaultValue to Parameter (0,1) role owningParameter aggregate to;
EdgeClass ElementImportLinksToImportingNamespace from ElementImport (0,*) role elementImport to Namespace (1,1) role importingNamespace;
EdgeClass ElementLinksToStereotype: sclkernel.ElementLinksToStereotype from Element (0,*) role umlElement2 to Stereotype (0,*) role umlStereotype2;
EdgeClass ExpressionLinksToOperand from Expression (0,*) role expression to ValueSpecification (0,*) role operand;
EdgeClass GeneralLinksToSpecialization from Classifier (1,1) role general to Generalization (0,*) role specialization;
CompositionClass GeneralizationIsPartOfSpecific from Generalization (0,*) role generalization to Classifier (1,1) role specific aggregate to;
EdgeClass ImportLinksToImportedElement from ElementImport (1,1) role import to PackagableElement (1,1) role importedElement;
EdgeClass ImportingLinksToImportedPackage from PackageImport (0,*) role importing to Package (1,1) role importedPackage;
CompositionClass LowerValueIsPartOfOwningLower from ValueSpecification (0,1) role lowerValue to MultiplicityElement (0,1) role owningLower aggregate to;
CompositionClass MaxintIsPartOfMaxInteractionConstraint from ValueSpecification (0,1) role maxint to uml.interactions.fragments.InteractionConstraint (0,1) role maxInteractionConstraint aggregate to;
EdgeClass MemberEndLinksToAssociation from Property (2,*) role memberEnd to Association (0,1) role association;
EdgeClass MessageLinksToGuard from uml.interactions.basicinteractions.Message (0,1) role message to ValueSpecification (0,1) role guard;
CompositionClass MinintIsPartOfMinInteractionConstraint from ValueSpecification (0,1) role minint to uml.interactions.fragments.InteractionConstraint (0,1) role minInteractionConstraint aggregate to;
CompositionClass OwnedAttributeIsPartOfDataType from Property (0,*) role ownedAttribute to DataType (0,1) role dataType aggregate to;
CompositionClass OwnedCommentIsPartOfOwningElement from Comment (0,*) role ownedComment to Element (0,1) role owningElement aggregate to;
CompositionClass OwnedEndIsPartOfOwningAssociation from Property (0,*) role ownedEnd to Association (0,1) role owningAssociation aggregate to;
CompositionClass OwnedLiteralIsPartOfEnumeration from EnumerationLiteral (0,*) role ownedLiteral to Enumeration (0,1) role enumeration aggregate to;
CompositionClass OwnedOperationIsPartOfClass from Operation (0,*) role ownedOperation to Class (0,1) role class aggregate to;
CompositionClass OwnedOperationIsPartOfDataType from Operation (0,*) role ownedOperation to DataType (0,1) role dataType aggregate to;
CompositionClass OwnedParameterIsPartOfOperation from Parameter (0,*) role ownedParameter to Operation (0,1) role operation aggregate to;
CompositionClass OwnedUseCaseIsPartOfOwningClassifier from uml.usecases.UseCase (0,*) role ownedUseCase to Classifier (0,1) role owningClassifier aggregate to;
CompositionClass OwnerContainsArgument from uml.interactions.basicinteractions.Message (0,1) role owner to ValueSpecification (0,*) role argument aggregate from;
CompositionClass OwningConstraintContainsSpecification from Constraint (0,1) role owningConstraint to ValueSpecification (1,1) role specification aggregate from;
EdgeClass OwningPropertyLinksToDefaultValue from Property (0,1) role owningProperty to ValueSpecification (0,1) role defaultValue;
EdgeClass PackageImportLinksToImportingNamespace from PackageImport (0,*) role packageImport to Namespace (1,1) role importingNamespace;
CompositionClass PackagedElementIsPartOfOwningPackage from PackagableElement (0,*) role packagedElement to Package (0,1) role owningPackage aggregate to;
EdgeClass RaisedExceptionLinksToOperation from Type (0,*) role raisedException to Operation (0,*) role operation;
EdgeClass ReceiveOperationEventLinksToOperation from uml.interactions.basicinteractions.ReceiveOperationEvent (0,*) role receiveOperationEvent to Operation (1,1) role operation;
CompositionClass SelectorIsPartOfLifeline from ValueSpecification (0,1) role selector to uml.interactions.basicinteractions.Lifeline (0,1) role lifeline aggregate to;
EdgeClass SendOperationEventLinksToOperation from uml.interactions.basicinteractions.SendOperationEvent (0,*) role sendOperationEvent to Operation (1,1) role operation;
CompositionClass SpecificationIsPartOfOwningInstanceSpec from ValueSpecification (0,1) role specification to InstanceSpecification (0,1) role owningInstanceSpec aggregate to;
EdgeClass SuperPropertyLinksToSubsettedProperty from Property (0,*) role superProperty to Property (0,*) role subsettedProperty;
EdgeClass TypeLinksToTyped from Type (0,1) role type to TypedElement (0,*) role typed;
EdgeClass UmlStereotypeLinksToUmlElement: sclkernel.StereotypeLinksToElement from Stereotype (0,*) role umlStereotype to Element (0,*) role umlElement;
CompositionClass UpperValueIsPartOfOwningUpper from ValueSpecification (0,1) role upperValue to MultiplicityElement (0,1) role owningUpper aggregate to;
EdgeClass UseCaseLinksToSubject from uml.usecases.UseCase (0,*) role useCase to Classifier (0,*) role subject;
EdgeClass ValueLinksToInstance from InstanceValue (0,*) role value to InstanceSpecification (1,1) role instance;
Package uml.commonbehaviors.basicbehaviors;
abstract VertexClass Behavior: uml.classes.kernel.Class { isReentrant: Boolean };
abstract VertexClass BehavioredClassifier: uml.classes.kernel.Classifier;
EdgeClass BehaviorExecutionLinksToBehavior from uml.interactions.basicinteractions.BehaviorExecutionSpecification (0,*) role behaviorExecution to Behavior (0,1) role behavior;
EdgeClass BehavioredClassifierLinksToClassifierBehavior from BehavioredClassifier (0,1) role behavioredClassifier to Behavior (0,1) role classifierBehavior;
CompositionClass OwningClassifierContainsOwnedBehavior from BehavioredClassifier (0,1) role owningClassifier to Behavior (0,*) role ownedBehavior aggregate from;
Package uml.commonbehaviors.communications;
abstract VertexClass Event: uml.classes.kernel.PackagableElement;
abstract VertexClass MessageEvent: Event;
EdgeClass OccuranceSpecificationLinksToEvent from uml.interactions.basicinteractions.OccurrenceSpecification (0,*) role occuranceSpecification to Event (1,1) role event;
Package uml.components.basiccomponents;
EnumDomain ConnectorKind ( ASSEMBLY, DELEGATION );
VertexClass Component: uml.classes.kernel.Class { isIndirectlyInstantiated: Boolean };
VertexClass ComponentRealization: uml.classes.dependencies.Realization;
CompositionClass RealizationIsPartOfAbstraction from ComponentRealization (0,*) role realization to Component (0,1) role abstraction aggregate to;
Package uml.compositestructures.collaborations;
VertexClass Collaboration: uml.compositestructures.internalstructures.StructuredClassifier, uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
EdgeClass CollaborationLinksToCollaborationRole from Collaboration (0,*) role collaboration to uml.compositestructures.internalstructures.ConnectableElement (0,*) role collaborationRole;
Package uml.compositestructures.internalstructures;
abstract VertexClass ConnectableElement: uml.classes.kernel.TypedElement;
VertexClass Connector: uml.classes.kernel.Feature { kind: uml.components.basiccomponents.ConnectorKind };
VertexClass ConnectorEnd: uml.classes.kernel.MultiplicityElement;
abstract VertexClass StructuredClassifier: uml.classes.kernel.Classifier;
CompositionClass EndIsPartOfConnector from ConnectorEnd (2,*) role end to Connector (1,1) role connector aggregate to;
EdgeClass EndLinksToRole from ConnectorEnd (0,*) role end to ConnectableElement (1,1) role role;
EdgeClass LifelineLinksToRepresents from uml.interactions.basicinteractions.Lifeline (0,*) role lifeline to ConnectableElement (0,1) role represents;
EdgeClass MessageLinksToConnector from uml.interactions.basicinteractions.Message (0,*) role message to Connector (0,1) role connector;
CompositionClass OwnedConnectorIsPartOfStructuredClassifier from Connector (0,*) role ownedConnector to StructuredClassifier (0,1) role structuredClassifier aggregate to;
Package uml.compositestructures.ports;
abstract VertexClass EncapsulatedClassifier: uml.compositestructures.internalstructures.StructuredClassifier;
Package uml.interactions.basicinteractions;
EnumDomain MessageSort ( ASYNCHCALL, SYNCHCALL, ASYNCHSIGNAL, CREATEMESSAGE, DELETEMESSAGE, REPLY );
VertexClass BehaviorExecutionSpecification: ExecutionSpecification;
VertexClass CreationEvent: uml.commonbehaviors.communications.Event;
VertexClass DestructionEvent: uml.commonbehaviors.communications.Event;
abstract VertexClass ExecutionSpecification: InteractionFragment;
VertexClass Interaction: uml.commonbehaviors.basicbehaviors.Behavior, InteractionFragment;
abstract VertexClass InteractionFragment: uml.classes.kernel.NamedElement;
VertexClass Lifeline: uml.classes.kernel.NamedElement;
VertexClass Message: uml.classes.kernel.NamedElement { messageSort: MessageSort };
abstract VertexClass MessageEnd: uml.classes.kernel.NamedElement;
VertexClass MessageOccurrenceSpecification: OccurrenceSpecification, MessageEnd;
VertexClass OccurrenceSpecification: InteractionFragment;
VertexClass ReceiveOperationEvent: uml.commonbehaviors.communications.MessageEvent;
VertexClass SendOperationEvent: uml.commonbehaviors.communications.MessageEvent;
EdgeClass CoveredLinksToCoveredBy from Lifeline (0,*) role covered to InteractionFragment (0,*) role coveredBy;
CompositionClass EnclosingInteractionContainsFragment from Interaction (0,1) role enclosingInteraction to InteractionFragment (0,*) role fragment aggregate from;
CompositionClass EnclosingOperandContainsFragment from uml.interactions.fragments.InteractionOperand (0,1) role enclosingOperand to InteractionFragment (0,*) role fragment aggregate from;
EdgeClass EndedExecutionLinksToFinish from ExecutionSpecification (0,*) role endedExecution to OccurrenceSpecification (1,1) role finish;
CompositionClass LifelineIsPartOfInteraction from Lifeline (0,*) role lifeline to Interaction (1,1) role interaction aggregate to;
EdgeClass MessageEndLinksToMessage from MessageEnd (0,1) role messageEnd to Message (0,1) role message;
CompositionClass MessageIsPartOfInteraction from Message (0,*) role message to Interaction (1,1) role interaction aggregate to;
EdgeClass ReceiveMessageLinksToReceiveEvent from Message (0,1) role receiveMessage to MessageEnd (0,1) role receiveEvent;
EdgeClass SendMessageLinksToSendEvent from Message (0,1) role sendMessage to MessageEnd (0,1) role sendEvent;
EdgeClass StartedExecutionLinksToStart from ExecutionSpecification (0,*) role startedExecution to OccurrenceSpecification (1,1) role start;
Package uml.interactions.fragments;
VertexClass CombinedFragment: uml.interactions.basicinteractions.InteractionFragment;
VertexClass InteractionConstraint: uml.classes.kernel.Constraint;
VertexClass InteractionOperand: uml.classes.kernel.Namespace, uml.interactions.basicinteractions.InteractionFragment;
CompositionClass CombinedFragmentContainsOperand from CombinedFragment (0,1) role combinedFragment to InteractionOperand (1,*) role operand aggregate from;
AggregationClass InteractionOperandContainsGuard from InteractionOperand (1,1) role interactionOperand to InteractionConstraint (0,1) role guard aggregate from;
Package rsl.rsldomainelements.uielements.guirepresentation;
VertexClass Button: GUIElement;
VertexClass CheckOption: GUIElement;
VertexClass CheckOptionList: Selection;
VertexClass Container: GUIElement;
VertexClass Dialog: Container;
VertexClass DropDownList: Selection;
abstract VertexClass GUIElement: rsl.rsldomainelements.uielements.UIElementRepresentation { caption: String };
VertexClass Label: GUIElement;
VertexClass OpenList: Selection;
VertexClass Organisation;
VertexClass RadioOption: GUIElement;
VertexClass RadioOptionList: Selection;
abstract VertexClass Selection: GUIElement { maxmumSelectableOptions: Integer,  sortCriterion: String,  sortOrder: String };
VertexClass TextField: GUIElement;
VertexClass ToggleButton: GUIElement;
VertexClass Window: Container;
AggregationClass ExclusiveOptionIsPartOfRadioList from RadioOption (0,*) role exclusiveOption to RadioOptionList (0,1) role radioList aggregate to;
AggregationClass InclusiveOptionIsPartOfCheckList from CheckOption (0,*) role inclusiveOption to CheckOptionList (0,1) role checkList aggregate to;
CompositionClass MemberIsPartOfGroup from GUIElement (0,*) role member to Container (0,1) role group aggregate to;

Graph "6691434f-780791c9-fb3d52a6-7d304380_5512" SCLGraph (10000 20000 180 224) "8457258407670829137--2915349070093387339--225990601419229440-8810347652981318146";
Package sclkernel;
1 SoftwareCase <1 7 8 9> \null "1578189886985621299-1342877712301860075--6440676604966150338--1265416555388238883";
Package rsl.rsldomainelements.terms;
2 Terminology <> \null "-7013261100904880190--2019802224935752781--353683204693247328-302763676144288688";
Package rsl.rslrequirements.requirementsspecifications;
3 RequirementsSpecification <-1 3 24 2 13 16 22 89> "RequirementsSpecification" "-6712824406897300344--3472696449866806611--8846414379376965019-1675411318655223632";
Package rsl.rsldomainelements.domainelements;
5 DomainSpecification <-3 4 5 6> "DomainSpecification" "-5844631073348461593--6765572345665892916-7163282034078549256-8205635789437339974";
Package rsl.rsldomainelements.notions;
6 NotionsPackage <-4 251 294 -12> "Notions" "5155316075495327605-1299186260936234459-8126111283255695521-7744362307480244273";
Package rsl.rsldomainelements.actors;
7 ActorsPackage <-5 29> "Actors" "7878262857805338252--100121545828563006--1056130950599459388--5410854278791888398";
Package rsl.rsldomainelements.systemelements;
8 SystemElementsPackage <-6 271> "SystemElements" "-3453782026829626142-2692420612443577494-959916472819576688--762647500229359273";
Package sclkernel;
9 ArchitecturalModel <-7> \null "8429743056570733152-6895933590038891457-4352698907932013709--5584533457673405866";
10 DetailedDesignModel <-8> \null "7014934232621573938-3726368112260635670-8683702473472500868-3633666494199879235";
11 SourceCode <-9> \null "243623538999498725-4476058978049361274--7503355182241417878--2956177754316837455";
Package rsl.rslrequirements.requirementsspecifications;
21 RequirementsPackage <-24 40> "Profile and Tweet View" "5771340268289109784-2833752988914461364-6099825671405609469--5881486658736439792";
Package rsl.rsldomainelements.actors;
22 Actor <-29 28 32 -352 -354 -59> "3419819473035675609-3692746138665446522-7661029174029082976-379556521355972083";
Package sclkernel;
25 Stereotype <> "DuplicatedUseCaseStructureForUseRelationship" "-5122289887889301413-708130724612592402-8707849756741488680--1852695171788482213";
Package rsl.rsldomainelements.terms;
31 Noun <-205 -213 -218> "" "non authenticated user" 6320716366540337558 "-4053054251770588337--5808241721213389901-1887691430342214302-6281487237744172196";
Package rsl.rslrequirements.requirementsspecifications;
26 RSLUseCase <36 39 -40 198 197 -56> \null "7136164389943625600--565718111001231530-4917799699142836463-191187497689250802";
Package sclkernel;
33 Stereotype <> "DuplicatedUseCaseStructureForUseRelationship" "7232145613237943440-2808954664924781427--2131080256538281205--356903988576495414";
Package rsl.rslrequirementrepresentationsentences.representationsentences;
34 NaturalLanguageHypertextSentence <-36> "See the profile page of an authenticated user" "-6851453641688030995-7630369949557498574--6024590440322683770--2328562274194133207";
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
36 ConstrainedLanguageScenario <38 -39 199 200 201 348> "See the profile page of an authenticated user" "8714705127498519525-5223344157351264512--5205548629211158007--4084097308443307430";
Package rsl.rslrequirementrepresentationsentences.controlsentences;
37 PreconditionSentence <-38 -272> \null "User is not authenticated" "6519182138985678342-8832026853614438970--4209390008136024715-6935910093531514559";
Package sclkernel;
73 Stereotype <> "DuplicatedUseCaseStructureForUseRelationship" "-3454440718216468008-7813425048258530356--6793753977373929324-5113931868596930439";
76 Stereotype <> "DuplicatedUseCaseStructureForUseRelationship" "7328506894252956764--146264318130071261--8675186720242613491-6615279826417488693";
Package rsl.rslrequirementrepresentationsentences.svosentences;
141 SVOSentence <-199 -216 -219 352 -274> "" "-6533395446506617585--1417208868204456495--3515415906403267849--80479650114727225";
142 SVOSentence <-200 -235 -239 -312 353 -279> "" "-4274137520290869654--661517942432993177--1277816921672003786--5161473203305238431";
143 SVOSentence <-201 -203 -207 354 -284> "" "1361117493945456602-1823329301871537929--2827738350626044967-6470119123572993498";
Package rsl.rsldomainelements.phrases;
144 NounPhrase <-202 -204> "4059478763185228688--3356134250093497442-471512691593615788--8842337554707763343";
Package rsl.rslrequirementrepresentationsentences.svosentences;
145 Subject <202 203> "72358575996892157--1917905578716713027--7708174089420800875--5904533173257545200";
Package rsl.rsldomainelements.phrases;
146 NounLink <204 205> "6189967988060762538--1624148172175090849--5775117365251772651-4443462258326050983" "Non authenticated user";
147 SimpleVerbPhrase <-206 -209 210> "-220547506133587884-9152010665522455948-6018297990502003004-324682021585810925";
Package rsl.rslrequirementrepresentationsentences.svosentences;
148 Predicate <206 207> "-706306512978094803--8570559037265165243--3321127599121031599-412649347818323295";
Package rsl.rsldomainelements.terms;
149 Verb <-208> "" "sees" -9078693894528402039 "7220212352629682608-2034539811697774297--3147138431539581243--678754471936219394";
Package rsl.rsldomainelements.phrases;
150 PhraseVerbLink <208 209> "-7602153699853257672--3703909759418137582-171045833313294130-1532150102160670572" "sees";
151 NounPhrase <-210 -211> "-6914299296966075885-6893778890035141675--4359120722019903590--2942306357786416130";
152 NounLink <211 212> "-5508811766176716715--5989450668104567206-2592782415156449060-4207860837547428992" "profile page";
Package rsl.rsldomainelements.terms;
153 Noun <-212 -233 -225 -298 -246 -252 -259 -260 -237> "" "profile page" 8659542532932168779 "-6143751303235186174-7315303901420250323-608972779779649107--576058389965422924";
Package rsl.rsldomainelements.phrases;
139 NounPhrase <-214 -28> "7112425187661620326-1004140925800693610--2305722891230933731--3806525094736748917";
154 NounLink <213 214> "4098994610803114213-3031781677976127820-6630236564599134042-1454174226091251381" "non authenticated user";
Package rsl.rsldomainelements.domainelementrepresentations;
30 DomainElementRepresentation <-32 33> "-8464271952882429936--1089129032907248382-1967351970110904399--9052217717269892022";
Package rsl.rslrequirementrepresentationsentences.representationsentences;
32 NaturalLanguageHypertextSentence <-33> "A person with no twitter account or not logged in at the moment." "-4767787778422015987--4043184069249641544-869720838819166024-6136506339647169671";
Package rsl.rsldomainelements.phrases;
155 NounPhrase <-215 -217> "-4512052938860298908--995439980802124168-1512639031409073465-6747885460514818735";
Package rsl.rslrequirementrepresentationsentences.svosentences;
156 Subject <215 216> "1793218818749771864-5077379926733925270-5849920677627639402--2687682431524959253";
Package rsl.rsldomainelements.phrases;
157 NounLink <217 218> "-5532547719201107438-2039757763652509891-2624059372621955184-3771078757323271496" "Non authenticated user";
174 NounPhrase <-234 -236> "6534870642587119942-5990890816038855309-7368917891976081610--5638263209458754733";
Package rsl.rslrequirementrepresentationsentences.svosentences;
175 Subject <234 235> "-2070568232848147626--8564817526512825356--825260504114691664--1177437656687110614";
Package rsl.rsldomainelements.phrases;
176 NounLink <236 232> "7072726226468382810-2164767537847702801--5972510681995991787--1447089614384930894" "System";
Package rsl.rsldomainelements.terms;
177 Noun <-232 -268> "" "system" -9078975369502864927 "9171233191511451908--3469268193029541012-4428997350869235410-2820297772935997624";
Package rsl.rsldomainelements.phrases;
178 SimpleVerbPhrase <-238 -241 242> "533910113520633373--2671780353003064757-7965574915661993921--5778085627254559234";
Package rsl.rslrequirementrepresentationsentences.svosentences;
179 Predicate <238 239> "-3172881900643240656-2460615396365453651--3479604493356846670-8757290861255587495";
Package rsl.rsldomainelements.terms;
180 Verb <-240> "show" "shows" -9078693894528382540 "-4158529737382958787-7885909088223859764--6792572625591652563--1345081120052717901";
Package rsl.rsldomainelements.phrases;
181 PhraseVerbLink <240 241> "2578361181868614794--7593149574029207716--5596852145607152119--5700967233205491533" "shows";
182 NounPhrase <-242 -243> "-8734105014354904418-176009558604709709--7356756565705605002-4528451098169119221";
183 NounLink <243 233> "5165001314272495485--6762870366340124546--4463433037884371583-5621121670442577063" "profile page";
158 SimpleVerbPhrase <-222 223 -226> "8841939892657166215--4481998089170260666-2248360419077348522-2516088979677570568";
Package rsl.rsldomainelements.terms;
160 Verb <-221> "" "wants to see" 7965108670046257490 "-1263632429568979409--4097624694494735701--5139845708547090047--2407870675879400697";
Package rsl.rsldomainelements.phrases;
161 PhraseVerbLink <221 222> "-9179091489385870487--2544784895035905064--8111475690364910947-7780323270004878091" "wants to see";
162 NounPhrase <-223 -224> "465341099536876585-4977831258991059419--3376901647892340769--2906984954257894210";
163 NounLink <224 225> "9201682396647353073--5145117906928624232--5262368606205312446-8738265494558825832" "profile page";
165 ComplexVerbPhrase <226 -227 -228 229> "-7936496214146415126-299382796209309899--7272658731661541814--998505282608049331";
Package rsl.rslrequirementrepresentationsentences.svosentences;
166 Predicate <227 219> "260257435620782301-2566081930439257102-6036706989871273081-3010201164515692300";
Package rsl.rsldomainelements.terms;
159 Preposition <-220> \null "of an" 2866207176234161898 "2510789268002249540-921030874092841726-3663298430628273757-7044331056019436164";
Package rsl.rsldomainelements.phrases;
167 PhrasePrepositionLink <220 228> "1779579390864853852--6966523707118109313--2628061420453290441--4797930720967711842" "of an";
168 NounPhrase <-229 -230> "-7539316311375649921--4898038801774872505--163404342545693955--7201833119730232452";
169 NounLink <230 231> "2447232825232283482-5600423437817314525--3796322603877863979-549422618366066988" "authenticated user";
Package rsl.rsldomainelements.terms;
170 Noun <-231 -286 -289 -295> "" "authenticated user" 4041292478519009027 "8489427982457520597-8969608901100905193--4033880037382738800-1978210111142935420";
Package rsl.rsldomainelements.notions;
171 Notion <245 249 -251 258 267 -314 321 -309 261 -17> \null f "-8643884435341820301-6733876419023313487-3751593237109783606-4056229164947203569";
Package rsl.rsldomainelements.phrases;
172 NounPhrase <-244 -245> "1094323070063723748--7593924160621007222-3148765941259166824-2569224575027980434";
173 NounLink <244 237> "2494315956046353708-3131803581813670890--8927912262525400450--2207862844131371690" "profile page";
Package rsl.rsldomainelements.notions;
184 DomainStatement <248 -249> "2199552229690111502--6796870780991135532-7925130239041975629--6065204857132812812";
Package rsl.rsldomainelements.phrases;
185 NounPhrase <-247 -248> "-5579854973518045224--7839264829615522859-6037531492348811114-6056487940422121956";
186 NounLink <247 246> "-2281113453018905165--5634464712961171601--37072616505949609-9086810620012538143" "profile page";
188 SimpleVerbPhrase <254 -256 -257> "5636630650840479130--3764756555421225429--7989654035651644565-488052502314812812";
189 NounPhrase <-253 -254> "4757077201508876198--8006039928079437891--2248287044509756313--1963691058590507737";
190 NounLink <253 252> "-55968542334315030-8676268618034708885-7583544024689102647--5127793520523962282" "profile page";
Package rsl.rsldomainelements.terms;
191 Verb <-255> "show" "show" -9078693894528382540 "-6451335522068214475--1587411799315941143-5422396808851929353-8720700475699270027";
Package rsl.rsldomainelements.phrases;
192 PhraseVerbLink <255 256> "-6930019710670026857--4508269042184678195--2046643265670285640--1427342441459597791" "show";
Package rsl.rsldomainelements.notions;
193 DomainStatement <257 -258 -311> "130763553397673069-6281369622494919852-3904132228210199707-8369177102831860522";
Package rsl.rsldomainelements.phrases;
195 SimpleVerbPhrase <263 -265 -266> "-1639479645429739943--7304649713812073692-796235028306518768--8681519577047131125";
196 NounPhrase <-262 -263> "-8407192735182162991--7480947083828072986-2075851814999878736--8146108547883619179";
197 NounLink <262 259> "-6476714729749877260-6715986962957383692--1633879372712512201-6766871954427240555" "profile page";
Package rsl.rsldomainelements.terms;
198 Verb <-264> "" "see" -9078693894528402039 "6557013794141516812-9172873398677849881--1580920581438909803--8968594602666643070";
Package rsl.rsldomainelements.phrases;
199 PhraseVerbLink <264 265> "729511438585381615--3010029744608914667--305318333912295820-1331107408174661769" "see";
Package rsl.rsldomainelements.notions;
200 DomainStatement <266 -267> "6844974453657230635--1999166729445519444-5880070906197534461-450600129141676924";
Package rsl.rsldomainelements.systemelements;
201 SystemElement <270 -271 -353> "-8080821527392929438-8931289158295852025-9048268575916450762--7819917642620809097";
Package rsl.rsldomainelements.phrases;
202 NounPhrase <-269 -270> "3014927325207079542--2794154821608506625--5367619390153630404--2150297886075069370";
203 NounLink <268 269> "-6438576200521252230--7798809416077334255--878301336854471706--2617913941526922590" "system";
Package rsl.rsldomainelements.notions;
216 Notion <288 292 -294 307 -308 -293 -313 -23> \null f "7210382256806942019--6430937745826317710--8805434891391116281--3818186807684406572";
Package rsl.rsldomainelements.phrases;
217 NounPhrase <-287 -288> "6694380662324026919--7504846682617510322--2575558859096077799--5137244354396722915";
218 NounLink <286 287> "-5383846974023168095--4128459523057973184--7747991752063197255-3470151951890252060" "authenticated user";
Package rsl.rsldomainelements.notions;
219 DomainStatement <291 -292> "-1500599246863999810-8788822429858031688--7318781341665814908-5776132789836115119";
Package rsl.rsldomainelements.phrases;
220 NounPhrase <-290 -291> "4621866270120814701-1778844607855053196-1225391520896164503-6841513058827708102";
221 NounLink <290 289> "-6727211415109865159--6408094594777343663-3398611258008930506-1541911877727450947" "authenticated user";
223 ComplexVerbPhrase <297 303 -305 -306> "1660700628431454680--6602411603712100614--554771478782592272--7200932842184779663";
224 NounPhrase <-296 -297> "-6616096781325599547--468154727239736454-1249038867608048421-607943056374697783";
225 NounLink <295 296> "6334349078703019842-1493409306358123445--8110678609955757240-9166199596586403546" "authenticated user";
226 SimpleVerbPhrase <300 -302 -303> "-8718970787540369269--4632486504008860273--8148200487495806100--3531731856871954148";
227 NounPhrase <-299 -300> "-1067615653408079150-6224108150759795457-5910130446513908491--4511913752799600535";
228 NounLink <299 298> "1784589531878766327-1107695254450327662-1082104885712743245--4546056536092073040" "profile page";
Package rsl.rsldomainelements.terms;
229 Verb <-301> "" "wants to see" 7965108670046257490 "-545160181436494481-421608396134223994-6550218785709324372--1252675306468830237";
Package rsl.rsldomainelements.phrases;
230 PhraseVerbLink <301 302> "75437127528645573--5579701216052325226-8880217831079337507-7055504311356960572" "wants to see";
Package rsl.rsldomainelements.terms;
231 Preposition <-304> \null "of an" 2866207176234161898 "-9201977729720769499--5919502961120508006--7452550575320401147-6310271406871555064";
Package rsl.rsldomainelements.phrases;
232 PhrasePrepositionLink <304 305> "3603739851212388992-1492828318336774504--1598820963832490822-8974763967619429334" "of an";
Package rsl.rsldomainelements.notions;
233 DomainStatement <306 -307 -310> "7358257088354970550-5652121460978125025-7542260658181237639-996934984123577538";
Package rsl.rsldomainelements.domainelements;
234 DomainElementRelationship <308 309> f "1" "1" "-3720311736830246012--8869820821941529824-8929554157994475789-4758414250503132987";
Package sclkernel;
209 Stereotype <> "tagTrigger" "-5096393470216315607--1792469526296224878-109236716328841570--148121956832900882";
222 Stereotype <293> "tagTrigger" "9222934395539662083-3551745503553720841--1621615843591017315-4799485417496602481";
235 Stereotype <310> "actionselect" "-3992070346594478314--1488361647859902735-5379168629113216138--2136031473986632852";
236 Stereotype <311 312> "crudread" "1859309334749584057-176488905332367907-732264254910616917-9147120247363318500";
Package rsl.rsldomainelements.domainelements;
237 DomainElementRelationship <313 314> t "1" "1" "1617724297887948661--1273377932011757731--2529490050447660121--2204104542174133636";
Package rsl.rsldomainelements.phrases;
164 SimpleVerbPhrase <317 -319 -320> "8603990108601855264-6929273193479296936--8050033506828638838--7169124634437660290";
238 NounPhrase <-316 -317> "6063758909772239274--3810201482797350412--605271841023270160--2600990685889984540";
239 NounLink <316 260> "-6977301257851147108-2958024080697393448-2741785320725066176--2638964427761629835" "profile page";
Package rsl.rsldomainelements.terms;
240 Verb <-318> "" "wants to see" 7965108670046257490 "6966652516698113228--8638447204094615065-6002591190251604495-8451961150309894748";
Package rsl.rsldomainelements.phrases;
241 PhraseVerbLink <318 319> "6077489234197111482-4706101793099393588--8459444057966619713-3239667033351325803" "wants to see";
Package rsl.rsldomainelements.notions;
242 DomainStatement <320 -321> "1942061337864384381--1320793294597805664--2972812908925115105--2457669194903341090";
Package rsl.rslrequirementrepresentationsentences.controlsentences;
267 PostconditionSentence <-348 -324> t "User is not authenticated\r\n" "6359266990139337110-5159934324184943599--3540917287048955388--4632286761529662641";
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
140 SentenceList <-198> \null "-1817442191545820997--7192914227720651669--4823528900966094461--3080411452533549791";
Package rsl.rsldomainelements.domainelementrepresentations;
194 DomainElementRepresentation <-261> "3385213831730392022-4627514438514008171-8647838436814197347--9098072311318550692";
Package rsl.rslrequirementrepresentations.activityrepresentations;
138 ActivityScenario <-197 250 273 277 278 282 283 322 323 327> "See the profile page of an authenticated user" "-3974580473638827507--2262000856683010984-8085128546156067024--1423319192213124527";
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
187 RSLActivityNode <-250 272 -275> "-4676440826227864349-3272282196161296769-6195942662566912928-761230831419975338";
204 RSLActivityNode <-273 274 -276 -280> "2328725056119223588-1642716082055444250--2100718617968134085--2431165603388748276";
205 RSLActivityEdge <275 276 -277> "8027550348435305723-4993357509821247100--1587656077209930662-4821835699713979340";
206 RSLActivityNode <-278 279 -281 -285> "-1631563256178762254-293433408055740555-5637430909929011489-4485133515403580158";
207 RSLActivityEdge <280 281 -282> "-4662619253282882551-4298344792853957793--3447570326689073707--5654296217425384059";
208 RSLActivityNode <-283 284 -315 -325> "-8971443410774085853-3818773963055223692--2480017202070521718-7472657153205972947";
210 RSLActivityEdge <285 315 -322> "8421043875722829418-7933104965481462500--1921760690514640667-2115769191484096422";
211 RSLActivityNode <-323 324 -326> "-402446869892866224--2613665484768988796-6872588842956974083-7746108034039844205";
212 RSLActivityEdge <325 326 -327> "1152881972261196422--7163045153364248075-8960241357905423729-381676537659389452";
Package sclkernel;
291 Stereotype <> "DuplicatedUseCaseStructureForUseRelationship" "-2276269156671773625--9076697716617803960-6419473978371995673--708950430126500666";
294 Stereotype <> "DuplicatedUseCaseStructureForUseRelationship" "-8073149805568454044--3850950171771499229-311260899666741737-7068380712805436366";
Package uml.auxiliaryconstructs.models;
4 Model <-2 -10 -21 -64> "Analysis" "3267505696662408179-1861291025553199295--1063398124442269686--4930348271590818911" \null \null;
Package uml.classes.kernel;
12 Package <10 -11 -14 -19 -67 -68> "Domain objects" "1206519094622808552-7759724663831657422-8669614909820919324-3672174308103659387" \null;
Package sclkernel;
13 IsAllocatedTo <11 12 -13> f "-2287417644680513340--6615237203227726806--984135196076381532-3205408273661791066";
Package uml.classes.kernel;
20 Class <14 -15 -18 31 47 -70> f f "ProfilePage" "6314049489875298518-3280599058775262802--8424299742736249373--5814378935175901712" \null;
Package sclkernel;
23 IsAllocatedTo <15 -16 17> f "6741615446492446053-2234312563883009828--7651309620473847767--5220615283905683219";
Package uml.classes.kernel;
24 Stereotype <18 25> "@Entity" \null "-4831061064805240521--8546102109214970773--6825181867508607445-1953555946047134488";
27 Class <19 -20 -25 -26 34 48 50 -72> f f "AuthenticatedUser" "639119342541840086-3870340785423777687-2211392449931738621-5141741481535453711" \null;
Package sclkernel;
28 IsAllocatedTo <20 -22 23> f "8720872409490274616--1406658198700246817-5850924532398148707-4214160005866124910";
Package uml.classes.kernel;
29 Stereotype <26> "tagTrigger" \null "5119962756375529800--3309130542838882168-5573266371785610557--6324046191565366913";
35 Property <> \null f f f f f f f \null "1389715423964539988-5808020791515197369--7514794599992002527-3755097941399191386" \null;
38 Property <30 -31 37 -43 -44> NONE f f f f f f f "profilepage" "-5174215758396335172-5483196563165896499-7192808765943786323-2242430632264632295" PUBLIC;
39 Property <27 -34 35 -41 -42> \null f f f f f f f "authenticateduser" "9037403864654237924--2390544843725080998-3459292532281696060--1370429920319953440" PUBLIC;
40 Association <-27 -30 -35 -37 -77> f f f \null "5867797117554386660-7244772787049678487--6887235230547198624-3062442139266296860" \null;
41 LiteralInteger <41> \null "8329979800737210533--2535170257950479180--475611291354844354--485214845361365236" 1 \null;
42 LiteralInteger <42> \null "6161292229828021730-2596100850008183023-5142722096384270648-4265829819243816942" 1 \null;
43 LiteralInteger <43> \null "6659329575721203793-7856217363002865457--356995481534909557-2493700371952410500" 1 \null;
44 LiteralInteger <44> \null "-3577329388464820452-5229289382087011798-3292749900134500774-6223951533494070243" 1 \null;
45 Stereotype <> "list" \null "-7298232644523353558--8961888592171225744--4181030784356472089--753829494435031537";
46 Property <> \null f f f f f f f \null "-5386496187292119554--4459958847317135988-3373400332455585707--7279787101027960797" \null;
47 Property <46 -47 -50 -53 -54> NONE f f f f f f f "profilepage" "-1177602482492204466-8356260011969487357-3510547482123143759--5896218371992646722" PUBLIC;
48 Property <45 -48 49 -51 -52> \null f f f f f f f "authenticateduser" "8160355254530654812--6953533469852877505--4123251788306709795-2082998380885007382" PUBLIC;
49 Association <-45 -46 -49 -82> f f f \null "-250568232994768843--5830572245849344248-3230810979013993857--5532599920038277660" \null;
50 LiteralInteger <51> \null "-6815546858974720298-4282765526488037984--3415747669349428383--1358785580050670115" 1 \null;
51 LiteralInteger <52> \null "-1349323807879456815-4051013826010400933-2465973157990323477--8469851971767959363" 1 \null;
52 LiteralInteger <53> \null "-7235592811172679864--3639794805405878227--6848926225409037127-7083527488491660437" 1 \null;
53 LiteralInteger <54> \null "4768459656602658688--8967837345515194508-7424712461515433985-732098507134250657" 1 \null;
Package uml.usecases;
55 UseCase <-57 -62> f f \null "-6896778432818525938--7465979543634433108-4323439437567985437--1328622801600243870" \null;
Package sclkernel;
56 IsAllocatedTo <56 57 -58> f "-4723614003475513880-9080135436401759151-7692690395399657737--2049594990445539487";
57 Stereotype <58> "DuplicatedUseCaseStructureForUseRelationship" "-3313840471998765670--6201692516380881647-8402587597722227557--5831501219467842430";
Package uml.usecases;
58 Actor <-60 -63> f f \null "5609539311280309634-2943752974218437117--8875310301325584889--5717910764755100426" \null;
Package sclkernel;
59 IsAllocatedTo <59 60 -61> f "3104602826636125692-5253847781388844936--5517969301708766563--4333696496958377109";
60 Stereotype <61> "DuplicatedUseCaseStructureForUseRelationship" "762121675055571102-867759311332693984-2751735780322919289-2069720105888931526";
Package uml.classes.dependencies;
61 Dependency <62 63> \null "8420483710659950561-1853409412581564464--8742442145484466210-1472959411278963530" \null;
Package ea;
14 Model <21 -55 -65> \null "Analysis";
15 Element <55 64 -83> \null \null f f "Analysis" \null 0 \null "Package" \null;
16 Package <65 -66 68 -69 -71> \null "Domain objects";
17 Element <66 67 -84> \null \null f f "Domain objects" \null 0 \null "Package" \null;
18 Element <69 70 74 79 -85> \null \null f f "ProfilePage" "@Entity" 0 \null "Class" \null;
19 Element <71 72 73 78 -86> \null \null f f "AuthenticatedUser" "@Entity" 0 \null "Class" \null;
54 Connector <-73 -74 -75 76 77 -87> "unspecified" \null \null 0 \null \null \null "Association";
62 ConnectorEnd <75> 0 \null "1" \null f f \null f f "authenticateduser" "Unspecified" 0 \null \null \null \null "PUBLIC";
63 ConnectorEnd <-76> 0 \null "1" \null f f \null f f "profilepage" "Unspecified" 0 \null \null \null \null "PUBLIC";
64 Connector <-78 -79 -80 81 82 -88> "source->destination" \null \null 0 \null \null \null "Association";
65 ConnectorEnd <80> 0 \null "1" \null f f \null f f "authenticateduser" "Unspecified" 0 \null \null \null \null "PUBLIC";
66 ConnectorEnd <-81> 0 \null "1" \null f f \null f t "profilepage" "Navigable" 0 \null \null \null \null "PUBLIC";
67 TaggedValue <83> \null "redseeds_uid" "3267505696662408179-1861291025553199295--1063398124442269686--4930348271590818911";
68 TaggedValue <84> \null "redseeds_uid" "1206519094622808552-7759724663831657422-8669614909820919324-3672174308103659387";
69 TaggedValue <85> \null "redseeds_uid" "6314049489875298518-3280599058775262802--8424299742736249373--5814378935175901712";
70 TaggedValue <86> \null "redseeds_uid" "639119342541840086-3870340785423777687-2211392449931738621-5141741481535453711";
71 TaggedValue <87> \null "redseeds_uid" "5867797117554386660-7244772787049678487--6887235230547198624-3062442139266296860";
72 TaggedValue <88> \null "redseeds_uid" "-250568232994768843--5830572245849344248-3230810979013993857--5532599920038277660";
Package rsl.rslrequirements.requirementsspecifications;
74 RequirementsPackage <-89> "RecoveredScenarios" "-3162932578987745840--2630882630858664436-8931469743014591826--6566498173641021537";
Package sclkernel;
1 SoftwareCaseContainsArtifact;
Package rsl.rslrequirements.requirementsspecifications;
3 RequirementsSpecificationLinksToDomainSpecification;
Package rsl.rsldomainelements.domainelements;
4 DomainSpecificationContainsDomainElementsPackage;
5 DomainSpecificationContainsDomainElementsPackage;
6 DomainSpecificationContainsDomainElementsPackage;
Package sclkernel;
7 SoftwareCaseContainsArtifact;
8 SoftwareCaseContainsArtifact;
9 SoftwareCaseContainsArtifact;
Package rsl.rslrequirements.requirementsspecifications;
24 RequirementsSpecificationContainsRequirementsPackage;
Package rsl.rsldomainelements.actors;
29 PackageContainsActor;
Package rsl.rslrequirements.requirementsspecifications;
36 RequirementContainsName;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
38 ScenarioContainsScenarioStep;
Package rsl.rslrequirements.requirementsspecifications;
39 RequirementContainsRepresentation;
40 PackageContainsRequirement;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
199 ScenarioContainsScenarioStep;
200 ScenarioContainsScenarioStep;
201 ScenarioContainsScenarioStep;
Package rsl.rslrequirementrepresentationsentences.svosentences;
202 SubjectContainsTarget;
203 SubjectIsPartOfSource;
Package rsl.rsldomainelements.phrases;
204 NounIsPartOfSource;
205 NounLinkLinksToTarget;
Package rsl.rslrequirementrepresentationsentences.svosentences;
206 PredicateContainsTarget;
207 PredicateIsPartOfSource;
Package rsl.rsldomainelements.phrases;
208 VerbLinkLinksToTarget;
209 VerbIsPartOfSource;
210 VerbPhraseContainsObject;
211 NounIsPartOfSource;
213 NounLinkLinksToTarget;
214 NounIsPartOfSource;
Package rsl.rsldomainelements.domainelements;
28 ElementContainsName;
32 ElementContainsRepresentation;
Package rsl.rslrequirementrepresentationsentences.representationsentences;
33 RepresentationContainsSentence;
Package rsl.rslrequirementrepresentationsentences.svosentences;
215 SubjectContainsTarget;
216 SubjectIsPartOfSource;
Package rsl.rsldomainelements.phrases;
217 NounIsPartOfSource;
218 NounLinkLinksToTarget;
Package rsl.rslrequirementrepresentationsentences.svosentences;
234 SubjectContainsTarget;
235 SubjectIsPartOfSource;
Package rsl.rsldomainelements.phrases;
236 NounIsPartOfSource;
Package rsl.rslrequirementrepresentationsentences.svosentences;
238 PredicateContainsTarget;
239 PredicateIsPartOfSource;
Package rsl.rsldomainelements.phrases;
240 VerbLinkLinksToTarget;
241 VerbIsPartOfSource;
242 VerbPhraseContainsObject;
243 NounIsPartOfSource;
221 VerbLinkLinksToTarget;
222 VerbIsPartOfSource;
223 VerbPhraseContainsObject;
224 NounIsPartOfSource;
226 ComplexVerbPhraseContainsSimpleVerbPhrase;
Package rsl.rslrequirementrepresentationsentences.svosentences;
227 PredicateContainsTarget;
219 PredicateIsPartOfSource;
Package rsl.rsldomainelements.phrases;
220 PrepositionLinkLinksToTarget;
228 PrepositionIsPartOfSource;
229 VerbPhraseContainsObject;
230 NounIsPartOfSource;
232 NounLinkLinksToTarget;
244 NounIsPartOfSource;
Package rsl.rsldomainelements.notions;
245 NotionContainsName;
Package rsl.rsldomainelements.phrases;
247 NounIsPartOfSource;
Package rsl.rsldomainelements.notions;
248 StatementContainsName;
Package rsl.rsldomainelements.domainelements;
249 DomainElementContainsStatement;
Package rsl.rsldomainelements.notions;
251 PackageContainsNotion;
Package rsl.rsldomainelements.phrases;
253 NounIsPartOfSource;
254 VerbPhraseContainsObject;
255 VerbLinkLinksToTarget;
256 VerbIsPartOfSource;
Package rsl.rsldomainelements.notions;
257 StatementContainsName;
Package rsl.rsldomainelements.domainelements;
258 DomainElementContainsStatement;
Package rsl.rsldomainelements.phrases;
262 NounIsPartOfSource;
263 VerbPhraseContainsObject;
264 VerbLinkLinksToTarget;
265 VerbIsPartOfSource;
Package rsl.rsldomainelements.notions;
266 StatementContainsName;
Package rsl.rsldomainelements.domainelements;
267 DomainElementContainsStatement;
Package rsl.rsldomainelements.phrases;
268 NounLinkLinksToTarget;
269 NounIsPartOfSource;
Package rsl.rsldomainelements.domainelements;
270 ElementContainsName;
Package rsl.rsldomainelements.systemelements;
271 PackageContainsSystemElement;
Package rsl.rsldomainelements.phrases;
231 NounLinkLinksToTarget;
286 NounLinkLinksToTarget;
287 NounIsPartOfSource;
Package rsl.rsldomainelements.notions;
288 NotionContainsName;
Package rsl.rsldomainelements.phrases;
290 NounIsPartOfSource;
Package rsl.rsldomainelements.notions;
291 StatementContainsName;
Package rsl.rsldomainelements.domainelements;
292 DomainElementContainsStatement;
Package rsl.rsldomainelements.phrases;
289 NounLinkLinksToTarget;
Package rsl.rsldomainelements.notions;
294 PackageContainsNotion;
Package rsl.rsldomainelements.phrases;
295 NounLinkLinksToTarget;
296 NounIsPartOfSource;
297 VerbPhraseContainsObject;
299 NounIsPartOfSource;
300 VerbPhraseContainsObject;
301 VerbLinkLinksToTarget;
302 VerbIsPartOfSource;
303 ComplexVerbPhraseContainsSimpleVerbPhrase;
304 PrepositionLinkLinksToTarget;
305 PrepositionIsPartOfSource;
Package rsl.rsldomainelements.notions;
306 StatementContainsName;
Package rsl.rsldomainelements.domainelements;
307 DomainElementContainsStatement;
308 ToTargetLinksToSource;
Package sclkernel;
293 StereotypeLinksToElement;
310 StereotypeLinksToElement;
311 StereotypeLinksToElement;
312 StereotypeLinksToElement;
Package rsl.rslrequirementrepresentationsentences.svosentences;
352 SentenceLinksToRecipient;
353 SentenceLinksToRecipient;
354 SentenceLinksToRecipient;
Package rsl.rsldomainelements.domainelements;
313 ToTargetLinksToSource;
314 ToSourceLinksToTarget;
Package rsl.rsldomainelements.phrases;
212 NounLinkLinksToTarget;
233 NounLinkLinksToTarget;
225 NounLinkLinksToTarget;
298 NounLinkLinksToTarget;
316 NounIsPartOfSource;
317 VerbPhraseContainsObject;
318 VerbLinkLinksToTarget;
319 VerbIsPartOfSource;
Package rsl.rsldomainelements.notions;
320 StatementContainsName;
Package rsl.rsldomainelements.domainelements;
321 DomainElementContainsStatement;
309 ToSourceLinksToTarget;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
348 ScenarioContainsScenarioStep;
Package rsl.rslrequirements.requirementsspecifications;
198 RequirementContainsRepresentation;
Package rsl.rsldomainelements.phrases;
246 NounLinkLinksToTarget;
252 NounLinkLinksToTarget;
259 NounLinkLinksToTarget;
260 NounLinkLinksToTarget;
237 NounLinkLinksToTarget;
Package rsl.rsldomainelements.domainelements;
261 ElementContainsRepresentation;
Package rsl.rslrequirements.requirementsspecifications;
197 RequirementContainsRepresentation;
Package rsl.rslrequirementrepresentations.activityrepresentations;
250 ScenarioContainsNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
272 NodeContainsContainedSentence;
Package rsl.rslrequirementrepresentations.activityrepresentations;
273 ScenarioContainsNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
274 NodeContainsContainedSentence;
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
275 OutgoingControlFlowLinksToSourceNode;
276 IncomingControlFlowLinksToTargetNode;
Package rsl.rslrequirementrepresentations.activityrepresentations;
277 ScenarioContainsEdge;
278 ScenarioContainsNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
279 NodeContainsContainedSentence;
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
280 OutgoingControlFlowLinksToSourceNode;
281 IncomingControlFlowLinksToTargetNode;
Package rsl.rslrequirementrepresentations.activityrepresentations;
282 ScenarioContainsEdge;
283 ScenarioContainsNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
284 NodeContainsContainedSentence;
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
285 OutgoingControlFlowLinksToSourceNode;
315 IncomingControlFlowLinksToTargetNode;
Package rsl.rslrequirementrepresentations.activityrepresentations;
322 ScenarioContainsEdge;
323 ScenarioContainsNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
324 NodeContainsContainedSentence;
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
325 OutgoingControlFlowLinksToSourceNode;
326 IncomingControlFlowLinksToTargetNode;
Package rsl.rslrequirementrepresentations.activityrepresentations;
327 ScenarioContainsEdge;
Package sclkernel;
2 ArtifactContainsUmlModel;
Package uml.classes.kernel;
10 PackagedElementIsPartOfOwningPackage;
Package sclkernel;
11 AllocationToRSLLinksToAllocationTarget;
12 AllocationToUMLLinksToAllocationSource;
13 ArtifactContainsOwnedTrace;
Package uml.classes.kernel;
14 PackagedElementIsPartOfOwningPackage;
Package sclkernel;
15 AllocationToRSLLinksToAllocationTarget;
16 ArtifactContainsOwnedTrace;
17 AllocationToUMLLinksToAllocationSource;
18 StereotypeLinksToElement;
Package uml.classes.kernel;
19 PackagedElementIsPartOfOwningPackage;
Package sclkernel;
20 AllocationToRSLLinksToAllocationTarget;
22 ArtifactContainsOwnedTrace;
23 AllocationToUMLLinksToAllocationSource;
25 StereotypeLinksToElement;
26 StereotypeLinksToElement;
Package uml.classes.kernel;
27 MemberEndLinksToAssociation;
30 MemberEndLinksToAssociation;
31 TypeLinksToTyped;
34 TypeLinksToTyped;
35 OwnedEndIsPartOfOwningAssociation;
37 OwnedEndIsPartOfOwningAssociation;
41 LowerValueIsPartOfOwningLower;
42 UpperValueIsPartOfOwningUpper;
43 LowerValueIsPartOfOwningLower;
44 UpperValueIsPartOfOwningUpper;
45 MemberEndLinksToAssociation;
46 MemberEndLinksToAssociation;
47 TypeLinksToTyped;
48 TypeLinksToTyped;
49 OwnedEndIsPartOfOwningAssociation;
50 ClassContainsOwnedAttribute;
51 LowerValueIsPartOfOwningLower;
52 UpperValueIsPartOfOwningUpper;
53 LowerValueIsPartOfOwningLower;
54 UpperValueIsPartOfOwningUpper;
Package sclkernel;
56 AllocationToUMLLinksToAllocationSource;
57 AllocationToRSLLinksToAllocationTarget;
58 StereotypeLinksToRelationship;
59 AllocationToUMLLinksToAllocationSource;
60 AllocationToRSLLinksToAllocationTarget;
61 StereotypeLinksToRelationship;
Package uml.classes.dependencies;
62 SupplierDependencyLinksToSupplier;
63 ClientDependencyLinksToClient;
Package sclkernel;
21 EaObjectLinksToSclElement;
Package ea;
55 ElementsIsPartOfPackage;
Package sclkernel;
64 EaObjectLinksToSclElement;
Package ea;
65 PackagesIsPartOfParent;
66 ElementsIsPartOfPackage;
Package sclkernel;
67 EaObjectLinksToSclElement;
68 EaObjectLinksToSclElement;
Package ea;
69 ElementsIsPartOfPackage;
Package sclkernel;
70 EaObjectLinksToSclElement;
Package ea;
71 ElementsIsPartOfPackage;
Package sclkernel;
72 EaObjectLinksToSclElement;
Package ea;
73 ClientLinksToConn_cl;
74 SupplierLinksToConn_su;
75 ClientEndIsPartOfConn_cl;
76 Conn_suContainsSupplierEnd;
Package sclkernel;
77 EaObjectLinksToSclElement;
Package ea;
78 ClientLinksToConn_cl;
79 SupplierLinksToConn_su;
80 ClientEndIsPartOfConn_cl;
81 Conn_suContainsSupplierEnd;
Package sclkernel;
82 EaObjectLinksToSclElement;
Package ea;
83 TaggedValuesIsPartOfObject;
84 TaggedValuesIsPartOfObject;
85 TaggedValuesIsPartOfObject;
86 TaggedValuesIsPartOfObject;
87 TaggedValuesIsPartOfObject;
88 TaggedValuesIsPartOfObject;
Package rsl.rslrequirements.requirementsspecifications;
89 RequirementsSpecificationContainsRequirementsPackage;
