// JGraLab - The Java graph laboratory
//   Version : Carnotaurus
//   Revision: 1107
//   Build ID: 65

Schema eu.redseeds.scl.SCLSchema;
GraphClass SCLGraph { uid: String };
Package ea;
VertexClass Attribute: ClassifiedObject { allowDuplicates: Boolean,  defaultValue: String,  isConst: Boolean,  isDerived: Boolean,  isOrdered: Boolean,  isStatic: Boolean,  lowerBound: String,  upperBound: String,  visibility: String };
abstract VertexClass ClassifiedObject: TaggedObject;
VertexClass Connector: TaggedObject { direction: String,  sequenceNo: Integer,  subtype: String,  transitionGuard: String };
VertexClass ConnectorEnd: TaggedObject { aggregation: Integer,  allowDuplicates: String,  cardinality: String,  constraint: String,  derived: Boolean,  derivedUnion: Boolean,  isChangable: Boolean,  isNavigable: Boolean,  navigable: String,  ordering: Integer,  qualifier: String,  roleType: String,  visibility: String };
abstract VertexClass EAObject { guid: String,  name: String };
VertexClass Element: ClassifiedObject { genType: String,  isAbstract: Boolean,  isLeaf: Boolean,  subtype: Integer,  tag: String,  visibility: String };
VertexClass Method: ClassifiedObject { code: String,  isAbstract: Boolean,  isStatic: Boolean,  throwsException: String,  visibility: String };
VertexClass Model: Package;
VertexClass Package: EAObject;
VertexClass Parameter: ClassifiedObject { defaultValue: String,  kind: String,  position: Integer };
abstract VertexClass TaggedObject: EAObject { stereotype: String,  type: String };
VertexClass TaggedValue: EAObject { value: String };
CompositionClass AttributesIsPartOfElement from Attribute (0,*) role attributes to Element (1,1) role element aggregate to;
EdgeClass ClassifierLinksToClassifiedObject from Element (0,1) role classifier to ClassifiedObject (0,*) role classifiedObject;
CompositionClass ClientEndIsPartOfConn_cl from ConnectorEnd (1,1) role clientEnd to Connector (0,1) role conn_cl aggregate to;
EdgeClass ClientLinksToConn_cl from Element (1,1) role client to Connector (0,*) role conn_cl;
CompositionClass Conn_suContainsSupplierEnd from Connector (0,1) role conn_su to ConnectorEnd (1,1) role supplierEnd aggregate from;
CompositionClass ConnectorsIsPartOfPackage from Connector (0,*) role connectors to Package (0,1) role package aggregate to;
CompositionClass ElementsIsPartOfPackage from Element (0,*) role elements to Package (0,1) role package aggregate to;
CompositionClass MethodsIsPartOfElement from Method (0,*) role methods to Element (1,1) role element aggregate to;
CompositionClass PackagesIsPartOfParent from Package (0,*) role packages to Package (0,1) role parent aggregate to;
CompositionClass ParametersIsPartOfMethod from Parameter (0,*) role parameters to Method (1,1) role method aggregate to;
CompositionClass ParentContainsElements from Element (0,1) role parent to Element (0,*) role elements aggregate from;
EdgeClass ReferenceLinksToReferencedObj from TaggedValue (0,*) role reference to TaggedObject (0,1) role referencedObj;
EdgeClass SupplierLinksToConn_su from Element (1,1) role supplier to Connector (0,*) role conn_su;
CompositionClass TaggedValuesIsPartOfObject from TaggedValue (0,*) role taggedValues to TaggedObject (1,1) role object aggregate to;
Package java5;
Package rsl;
Package sclkernel;
VertexClass ArchitecturalModel: SoftwareArtifact;
VertexClass Clipboard: SoftwareCase;
VertexClass DetailedDesignModel: SoftwareArtifact;
VertexClass GoalsSpecification: SoftwareArtifact;
VertexClass Implements: TraceabilityLink;
VertexClass IsAllocatedTo: TraceabilityLink;
VertexClass IsDependentOn: TraceabilityLink;
abstract VertexClass SCLElement { uid: String };
abstract VertexClass SCLElementsPackage: SCLElement { name: String };
abstract VertexClass SCLRelationship { uid: String };
VertexClass Satisfies: TraceabilityLink;
abstract VertexClass SoftwareArtifact: SCLElementsPackage;
VertexClass SoftwareCase: SCLElementsPackage;
VertexClass SourceCode: SoftwareArtifact;
VertexClass Stereotype: SCLElement { name: String };
VertexClass TraceabilityLink: SCLRelationship { isGenerated: Boolean };
VertexClass Transformations: SoftwareArtifact;
EdgeClass AllocationToRSLLinksToAllocationTarget: SCLRelationshipLinksToTarget from IsAllocatedTo (0,*) role allocationToRSL to uml.classes.kernel.NamedElement (1,1) role allocationTarget;
EdgeClass AllocationToUMLLinksToAllocationSource: SCLRelationshipLinksToSource from IsAllocatedTo (0,*) role allocationToUML to SCLElement (1,1) role allocationSource;
AggregationClass ArtifactContainsOwnedTrace from SoftwareArtifact (1,1) role artifact to TraceabilityLink (0,*) role ownedTrace aggregate from;
AggregationClass ArtifactContainsUmlModel from SoftwareArtifact (0,1) role artifact to uml.auxiliaryconstructs.models.Model (0,*) role umlModel aggregate from;
EdgeClass ClientDependentOnLinksToDependencySource: SCLRelationshipLinksToSource from IsDependentOn (0,*) role clientDependentOn to uml.classes.kernel.NamedElement (1,1) role dependencySource;
CompositionClass ContainedClipboardIsPartOfParentSoftwareCase from Clipboard (0,*) role containedClipboard to SoftwareCase (1,1) role parentSoftwareCase aggregate to;
EdgeClass EaObjectLinksToSclElement from ea.EAObject (0,*) role eaObject to SCLElement (0,*) role sclElement;
EdgeClass ElementLinksToStereotype from SCLElement (0,*) role element2 to Stereotype (0,*) role stereotype2;
EdgeClass ImplementsLinksToImplementationSource: SCLRelationshipLinksToSource from Implements (0,*) to SCLElement (1,1) role implementationSource;
EdgeClass ImplementsLinksToImplementationTarget: SCLRelationshipLinksToTarget from Implements (0,*) to SCLElement (1,1) role implementationTarget;
abstract AggregationClass SCLElementsPackageContainsElement from SCLElementsPackage (1,1) to SCLElement (0,*) role element aggregate from;
abstract AggregationClass SCLElementsPackageContainsNestedPackage: SCLElementsPackageContainsElement from SCLElementsPackage (1,1) to SCLElementsPackage (0,*) role nestedPackage aggregate from;
AggregationClass SCLElementsPackageContainsRelation from SCLElementsPackage (1,1) to SCLRelationship (0,*) role relation aggregate from;
abstract EdgeClass SCLRelationshipLinksToSource from SCLRelationship (0,*) to SCLElement (1,1) role source;
abstract EdgeClass SCLRelationshipLinksToTarget from SCLRelationship (0,*) to SCLElement (1,1) role target;
EdgeClass SatisfiesLinksToSatisfactionSource: SCLRelationshipLinksToSource from Satisfies (0,*) to uml.classes.kernel.NamedElement (1,1) role satisfactionSource;
EdgeClass SatisfiesLinksToSatisfactionTarget: SCLRelationshipLinksToTarget from Satisfies (0,*) to SCLElement (1,1) role satisfactionTarget;
AggregationClass SoftwareCaseContainsArtifact: SCLElementsPackageContainsElement from SoftwareCase (1,1) to SoftwareArtifact (0,*) role artifact aggregate from;
AggregationClass SoftwareCaseContainsTrace from SoftwareCase (1,1) to TraceabilityLink (0,*) role trace aggregate from;
EdgeClass StereotypeLinksToElement from Stereotype (0,*) role stereotype to SCLElement (0,*) role element;
EdgeClass StereotypeLinksToRelationship from Stereotype (0,*) role stereotype to SCLRelationship (0,*) role relationship;
EdgeClass SupplierDependentOnLinksToDependencyTarget: SCLRelationshipLinksToTarget from IsDependentOn (0,*) role supplierDependentOn to uml.classes.kernel.NamedElement (1,1) role dependencyTarget;
Package uml;
Package java5.annotations;
VertexClass Annotation: sclkernel.SCLElement { name: String };
EdgeClass IsAnnotationArgumentOf from java5.expressions.Expression (0,*) to Annotation (1,1) role fullannotation;
EdgeClass IsAnnotationNameOf from java5.basiclanguageelements.Identifier (1,1) to Annotation (1,1) role annotation;
EdgeClass IsAnnotationOfEnumConstant from Annotation (1,1) to java5.members.EnumConstant (1,1) role enumconstant;
EdgeClass IsAnnotationOfMember from Annotation (0,*) to java5.members.Member (1,1) role member;
EdgeClass IsAnnotationOfPackage from Annotation (0,*) to java5.programs.JavaPackage (1,1) role package;
EdgeClass IsAnnotationOfType from Annotation (0,*) to java5.types.Type (1,1) role type;
EdgeClass IsAnnotationOfVariable from Annotation (0,*) to java5.statements.Declaration (1,1) role declaration;
EdgeClass IsMetaAnnotationOf from Annotation (0,*) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
Package java5.basiclanguageelements;
VertexClass Block: sclkernel.SCLElement;
VertexClass Identifier: sclkernel.SCLElement { name: String };
VertexClass JavaModifier: sclkernel.SCLElement { type: Integer };
VertexClass ParameterDeclaration: sclkernel.SCLElement;
VertexClass QualifiedName: QualifiedType;
VertexClass QualifiedType: java5.typespecifications.TypeSpecification;
VertexClass VariableLengthDeclaration: ParameterDeclaration;
EdgeClass IsAnnotationBlockOf from Block (1,1) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
EdgeClass IsAnnotationDefinitionNameOf from Identifier (1,1) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
EdgeClass IsBreakTargetOf from Identifier (0,1) to java5.statements.Break (1,1) role breakstatement;
EdgeClass IsCaughtExceptionOf from ParameterDeclaration (1,1) to java5.statements.Catch (1,1) role catchstatement;
EdgeClass IsClassBlockOf from Block (1,1) to java5.types.ClassDefinition (1,1) role classdefinition;
EdgeClass IsClassNameOf from Identifier (1,1) to java5.types.ClassDefinition (1,1) role classdefinition;
EdgeClass IsContinueTargetOf from Identifier (0,1) to java5.statements.Continue (1,1) role continuestatement;
EdgeClass IsEnumBlockOf from Block (1,1) to java5.types.EnumDefinition (1,1) role enumdefinition;
EdgeClass IsEnumConstantBlockOf from Block (1,1) to java5.members.EnumConstant (0,*);
EdgeClass IsEnumConstantNameOf from Identifier (1,1) to java5.members.EnumConstant (1,1) role enumconstant;
EdgeClass IsEnumNameOf from Identifier (1,1) to java5.types.EnumDefinition (1,1) role enumdefinition;
EdgeClass IsFieldNameOf from Identifier (1,1) to java5.expressions.FieldAccess (1,1) role fieldaccess;
EdgeClass IsImportDefinitionOf from QualifiedName (1,1) to java5.programs.Import (1,1) role translationunit;
EdgeClass IsInterfaceBlockOf from Block (1,1) to java5.types.InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsInterfaceNameOf from Identifier (1,1) to java5.types.InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsLabelNameOf from Identifier (1,1) to java5.statements.Label (1,1) role labelattachedstatement;
EdgeClass IsMemberOf from java5.members.Member (0,*) to Block (1,1);
EdgeClass IsModifierOfAnnotation from JavaModifier (0,*) to java5.types.AnnotationDefinition (1,1) role annotationdefinition;
EdgeClass IsModifierOfClass from JavaModifier (0,*) to java5.types.ClassDefinition (1,1) role classdefinition;
EdgeClass IsModifierOfConstructor from JavaModifier (0,*) to java5.members.ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsModifierOfEnum from JavaModifier (0,*) to java5.types.EnumDefinition (1,1) role enumdefinition;
EdgeClass IsModifierOfInterface from JavaModifier (0,2) to java5.types.InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsModifierOfMethod from JavaModifier (0,*) to java5.members.MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsModifierOfParameter from JavaModifier (0,1) to ParameterDeclaration (1,1);
EdgeClass IsModifierOfVariable from JavaModifier (0,*) to java5.statements.Declaration (1,1) role declaration;
EdgeClass IsNameOfConstructor from Identifier (1,1) to java5.members.ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsNameOfInvocatedMethod from Identifier (1,1) to java5.expressions.MethodInvocation (1,1) role methodinvocation;
EdgeClass IsNameOfMethod from Identifier (1,1) to java5.members.MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsParameterNameOf from Identifier (1,1) to ParameterDeclaration (1,1);
EdgeClass IsParameterOfConstructor from ParameterDeclaration (0,*) to java5.members.ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsParameterOfForEachClause from ParameterDeclaration (1,1) to java5.statements.ForEachClause (1,1) role foreachclause;
EdgeClass IsParameterOfMethod from ParameterDeclaration (0,*) to java5.members.MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsQualifiedTypeOf from QualifiedType (0,1) to QualifiedType (1,1);
EdgeClass IsTypeNameOf from Identifier (1,1) to QualifiedType (1,1);
EdgeClass IsTypeOfParameter from java5.typespecifications.TypeSpecification (1,1) to ParameterDeclaration (1,1) role parameterdeclaration;
EdgeClass IsTypeParameterDeclarationNameOf from Identifier (1,1) to java5.typespecifications.TypeParameterDeclaration (1,1);
EdgeClass IsTypeParameterUsageNameOf from Identifier (1,1) to java5.typespecifications.TypeParameterUsage (1,1);
EdgeClass IsVariableNameOf from Identifier (1,*) to java5.statements.Declaration (1,1) role declaration;
Package java5.comments;
abstract VertexClass Comment: sclkernel.SCLElement;
VertexClass JavaDocComment: Comment;
VertexClass MultiLineComment: Comment;
VertexClass SingleLineComment: Comment;
EdgeClass IsCommentIn from Comment (0,*) to java5.programs.SourceFile (1,1);
Package java5.constants;
EnumDomain BuiltInTypes ( BOOLEAN, CHAR, BYTE, SHORT, INT, LONG, FLOAT, DOUBLE );
EnumDomain InfixOperators ( ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, MUL_ASSIGN, MOD_ASSIGN, B_AND_ASSIGN, B_OR_ASSIGN, B_XOR_ASSIGN, B_NOT_ASSIGN, SHL_ASSIGN, SHR_ASSIGN, UNSIGNED_SHR_ASSIGN, PLUS, MINUS, MUL, DIV, MOD, B_AND, B_OR, B_XOR, L_AND, L_OR, EQ, NEQ, GT, GEQ, LT, LEQ, SHL, SHR, UNSIGNED_SHR, INSTANCEOF );
EnumDomain MethodInvocationTypes ( METHOD, SUPERMETHOD, CONSTRUCTOR, SUPERCONSTRUCTOR, EXPLICITCONSTRUCTOR );
EnumDomain PostfixOperators ( INCR, DECR );
EnumDomain PrefixOperators ( MINUS, PLUS, INCR, DECR, L_NOT, B_NOT );
Package java5.expressions;
VertexClass ArrayCreation: Expression;
VertexClass ArrayInitializer: Expression;
VertexClass BooleanConstant: Constant { value: Boolean };
VertexClass BuiltInCast: Expression;
VertexClass CharConstant: Constant { value: String };
VertexClass ClassCast: Expression;
VertexClass ClassInstanceCreation: Expression;
VertexClass ConditionalExpression: Expression;
abstract VertexClass Constant: Expression { literal: String };
VertexClass DoubleConstant: Constant { value: Double };
abstract VertexClass Expression: java5.statements.Statement;
VertexClass FieldAccess: Expression;
VertexClass FloatConstant: Constant { value: Double };
VertexClass InfixExpression: Expression { operator: java5.constants.InfixOperators };
VertexClass IntegerConstant: Constant { value: Integer };
VertexClass LongConstant: Constant { value: Long };
VertexClass MethodInvocation: Expression { methodInvocationType: java5.constants.MethodInvocationTypes };
VertexClass NullExpression: Expression;
VertexClass PostfixExpression: Expression { operator: java5.constants.PostfixOperators };
VertexClass PrefixExpression: Expression { operator: java5.constants.PrefixOperators };
VertexClass StringConstant: Constant;
VertexClass VariableInitializer: Expression;
EdgeClass IsArgumentOfEnumConstant from Expression (0,*) to java5.members.EnumConstant (1,1) role enumconstant;
EdgeClass IsArgumentOfMethodInvocation from Expression (0,*) to MethodInvocation (1,1);
EdgeClass IsArrayElementIndexOf from Expression (0,*) to FieldAccess (1,1);
EdgeClass IsCaseConditionOf from Expression (1,1) to java5.statements.Case (1,1) role casestatement;
EdgeClass IsCastedBuiltInTypeOf from java5.typespecifications.BuiltInType (1,1) to BuiltInCast (1,1) role builtincast;
EdgeClass IsCastedObjectOf from Expression (1,1) to ClassCast (1,1);
EdgeClass IsCastedTypeOf from java5.typespecifications.TypeSpecification (1,1) to ClassCast (1,1) role classcast;
EdgeClass IsCastedValueOf from Expression (1,1) to BuiltInCast (1,1);
EdgeClass IsConditionOfAssert from Expression (1,1) to java5.statements.Assert (1,1) role assert;
EdgeClass IsConditionOfDoWhile from Expression (1,1) to java5.statements.DoWhile (1,1) role dowhilestatement;
EdgeClass IsConditionOfExpression from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsConditionOfIf from Expression (1,1) to java5.statements.If (1,1) role ifstatement;
EdgeClass IsConditionOfWhile from Expression (1,1) to java5.statements.While (1,1) role whilestatement;
EdgeClass IsConstructorInvocationOf from MethodInvocation (1,1) to ClassInstanceCreation (1,1);
EdgeClass IsContentOf from Expression (0,*) to ArrayInitializer (1,1) role arrayinitializer2;
EdgeClass IsDimensionInitializerOf from ArrayInitializer (1,*) to ArrayCreation (1,1);
EdgeClass IsEnumeratableOf from Expression (1,1) to java5.statements.ForEachClause (1,1) role foreachclause;
EdgeClass IsFieldContainerOf from Expression (0,1) to FieldAccess (1,1);
EdgeClass IsForConditionOf from Expression (0,1) to java5.statements.TraditionalForClause (1,1) role traditionalforclause;
EdgeClass IsInitializerOf from Expression (1,1) to VariableInitializer (1,1);
EdgeClass IsInitializerOfVariable from Expression (0,1) to java5.statements.Declaration (1,1) role declaration;
EdgeClass IsIteratorOf from Expression (0,*) to java5.statements.TraditionalForClause (1,1) role traditionalforclause2;
EdgeClass IsLeftHandSideOfInfixExpression from Expression (1,1) to InfixExpression (1,1);
EdgeClass IsLeftHandSideOfPostFixExpression from Expression (1,1) to PostfixExpression (1,1);
EdgeClass IsMatchOf from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsMessageOf from Expression (0,1) to java5.statements.Assert (1,1) role assert2;
EdgeClass IsMethodContainerOf from Expression (0,1) to MethodInvocation (1,1);
EdgeClass IsMismatchOf from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsMonitorOf from Expression (1,1) to java5.statements.Synchronized (1,1) role synchronizestatement;
EdgeClass IsReturnedBy from Expression (0,1) to java5.statements.Return (1,1) role returnstatement;
EdgeClass IsRightHandSideOfInfixExpression from Expression (1,1) to InfixExpression (1,1);
EdgeClass IsRightHandSideOfPrefixExpression from Expression (1,1) to PrefixExpression (1,1);
EdgeClass IsSizeOf from Expression (0,0) to ArrayInitializer (1,1) role arrayinitializer;
EdgeClass IsSwitchArgumentOf from Expression (1,1) to java5.statements.Switch (1,1) role switchcasestatement;
EdgeClass IsThrownExceptionOf from Expression (1,1) to java5.statements.Throw (1,1) role throwstatement;
EdgeClass IsTypeArgumentOfArrayCreation from java5.typespecifications.TypeArgument (0,1) to ArrayCreation (1,1) role argumentArraycreation;
EdgeClass IsTypeArgumentOfMethodInvocation from java5.typespecifications.TypeArgument (0,1) to MethodInvocation (1,1) role classinstancecreation;
EdgeClass IsTypeOfCreatedArray from java5.typespecifications.TypeSpecification (0,1) to ArrayCreation (1,1) role arraycreation;
Package java5.members;
VertexClass ConstructorDefinition: Member;
VertexClass EnumConstant: Member;
VertexClass Field: Member;
abstract VertexClass Member: sclkernel.SCLElement;
VertexClass MethodDeclaration: Member;
VertexClass MethodDefinition: MethodDeclaration;
VertexClass StaticConstructor: Member;
VertexClass StaticInitializer: Member;
EdgeClass IsBodyOfConstructor from java5.statements.Compound (1,1) to ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsBodyOfMethod from java5.statements.Compound (1,1) to MethodDefinition (1,1) role methoddeclaration;
EdgeClass IsBodyOfStaticConstructor from java5.statements.Compound (1,1) to StaticConstructor (1,1) role staticconstructor;
EdgeClass IsBodyOfStaticInitializer from java5.statements.Compound (1,1) to StaticInitializer (1,1) role classinitializer;
EdgeClass IsExceptionThrownByConstructor from java5.typespecifications.TypeSpecification (0,*) to ConstructorDefinition (1,1) role constructordeclaration;
EdgeClass IsExceptionThrownByMethod from java5.typespecifications.TypeSpecification (0,*) to MethodDeclaration (1,1) role throwsclause;
EdgeClass IsFieldCreationOf from java5.statements.Statement (1,1) to Field (1,1) role field;
EdgeClass IsReturnTypeOf from java5.typespecifications.TypeSpecification (1,1) to MethodDeclaration (1,1) role methoddeclaration;
EdgeClass IsTypeParameterOfConstructor from java5.typespecifications.TypeSpecification (0,*) to ConstructorDefinition (1,1) role constructordefinition;
EdgeClass IsTypeParameterOfMethod from java5.typespecifications.TypeSpecification (0,*) to MethodDeclaration (1,1) role methoddeclaration2;
Package java5.programs;
abstract VertexClass ExternalDeclaration: sclkernel.SCLElement;
VertexClass Import: ExternalDeclaration;
VertexClass JavaPackage: ExternalDeclaration { name: String };
VertexClass Program: sclkernel.SCLElement { name: String };
VertexClass SourceFile: sclkernel.SCLElement { name: String };
VertexClass SourceUsage: sclkernel.SCLElement;
VertexClass TranslationUnit: sclkernel.SCLElement;
EdgeClass IncludesSource from SourceUsage (0,1) to SourceUsage (0,*);
EdgeClass IsExternalDeclarationIn from ExternalDeclaration (0,*) to SourceUsage (1,1);
EdgeClass IsPackageOf from JavaPackage (1,*) to Program (1,*);
EdgeClass IsPartOf from TranslationUnit (1,*) to JavaPackage (1,1);
EdgeClass IsPrimarySourceFor from SourceFile (1,1) to TranslationUnit (1,1);
EdgeClass IsSourceFor from SourceFile (1,1) to SourceUsage (1,*);
EdgeClass IsSourceUsageIn from SourceUsage (0,*) to TranslationUnit (1,1);
EdgeClass IsSubPackageOf from JavaPackage (0,*) to JavaPackage (0,1);
EdgeClass IsTranslationUnitIn from TranslationUnit (1,*) to Program (1,1);
Package java5.statements;
VertexClass Assert: Statement;
VertexClass Break: Statement;
VertexClass Case: sclkernel.SCLElement;
VertexClass Catch: Statement;
VertexClass Compound: Statement;
VertexClass Continue: Statement;
VertexClass Declaration: Statement;
VertexClass Default: sclkernel.SCLElement;
VertexClass DoWhile: Statement;
VertexClass EmptyStatement: Statement;
VertexClass ForEachClause: ForHead;
abstract VertexClass ForHead: sclkernel.SCLElement;
VertexClass ForStatement: Statement;
VertexClass If: Statement;
VertexClass Label: Statement;
VertexClass Return: Statement;
abstract VertexClass Statement: sclkernel.SCLElement;
VertexClass Switch: Statement;
VertexClass Synchronized: Statement;
VertexClass Throw: Statement;
VertexClass TraditionalForClause: ForHead;
VertexClass Try: Statement;
VertexClass While: Statement;
EdgeClass IsAttachedTo from Statement (1,1) to Label (1,1);
EdgeClass IsCaseOf from Case (0,*) to Switch (1,1);
EdgeClass IsCatchBodyOf from Compound (1,1) to Catch (1,1);
EdgeClass IsDefaultCaseOf from Default (0,1) to Switch (1,1);
EdgeClass IsElseOf from Statement (0,1) to If (1,1);
EdgeClass IsFinallyBodyOf from Compound (0,1) to Try (1,1);
EdgeClass IsHandlerOf from Catch (0,*) to Try (1,1);
EdgeClass IsHeadOfFor from ForHead (1,1) to ForStatement (1,1);
EdgeClass IsLoopBodyOfDoWhile from Statement (1,1) to DoWhile (1,1);
EdgeClass IsLoopBodyOfFor from Statement (1,1) to ForStatement (1,1);
EdgeClass IsLoopBodyOfWhile from Statement (1,1) to While (1,1);
EdgeClass IsRunVariableInitializationOf from Statement (0,*) to TraditionalForClause (1,1);
EdgeClass IsStatementOfCase from Statement (0,*) to Case (1,1);
EdgeClass IsStatementOfCompound from Statement (0,*) to Compound (1,1);
EdgeClass IsStatementOfDefaultCase from Statement (0,*) to Default (1,1);
EdgeClass IsSynchronizedBodyOf from Compound (1,1) to Synchronized (1,1);
EdgeClass IsThenOf from Statement (1,1) to If (1,1);
EdgeClass IsTryBodyOf from Compound (1,1) to Try (1,1);
EdgeClass IsTypeArgumentOfVariable from java5.typespecifications.TypeArgument (0,*) to Declaration (1,1) role argumentDeclaration;
EdgeClass IsTypeOfVariable from java5.typespecifications.TypeSpecification (1,1) to Declaration (1,1) role declaration;
Package java5.types;
VertexClass AnnotationDefinition: Type;
VertexClass ClassDefinition: Type;
VertexClass EnumDefinition: Type;
VertexClass InterfaceDefinition: Type;
abstract VertexClass Type: java5.programs.ExternalDeclaration, java5.members.Member { name: String };
EdgeClass IsInterfaceOfClass from java5.typespecifications.TypeSpecification (0,*) role implementedInterface to ClassDefinition (1,1) role classdefinition;
EdgeClass IsInterfaceOfEnum from java5.typespecifications.TypeSpecification (0,*) to EnumDefinition (1,1) role enumdefinition;
EdgeClass IsSuperClassOfClass from java5.typespecifications.TypeSpecification (0,1) role subclass to ClassDefinition (1,1) role superclass;
EdgeClass IsSuperClassOfInterface from java5.typespecifications.TypeSpecification (0,*) to InterfaceDefinition (1,1) role interfacedefinition;
EdgeClass IsTypeParameterOfClass from java5.typespecifications.TypeParameterDeclaration (0,*) to ClassDefinition (1,1) role parameterClassdefinition;
EdgeClass IsTypeParameterOfInterface from java5.typespecifications.TypeParameterDeclaration (0,*) to InterfaceDefinition (1,1) role parameterInterfacedefinition;
Package java5.typespecifications;
VertexClass ArrayType: TypeSpecification { dimensions: Integer };
VertexClass BuiltInType: TypeSpecification { type: java5.constants.BuiltInTypes };
VertexClass SimpleArgument: sclkernel.SCLElement;
VertexClass TypeArgument: TypeSpecification;
VertexClass TypeParameterDeclaration: TypeSpecification;
VertexClass TypeParameterUsage: TypeSpecification;
abstract VertexClass TypeSpecification: sclkernel.SCLElement;
VertexClass WildcardArgument: sclkernel.SCLElement;
EdgeClass IsElementTypeOf from TypeSpecification (1,1) to ArrayType (1,1);
EdgeClass IsLowerBoundOfWildCardArgument from TypeSpecification (1,1) to WildcardArgument (1,1);
EdgeClass IsSimpleArgumentOf from SimpleArgument (0,*) to TypeArgument (1,1);
EdgeClass IsTypeArgumentOfTypeSpecification from TypeArgument (0,*) to TypeSpecification (1,1);
EdgeClass IsTypeOfSimpleArgument from TypeSpecification (1,1) to SimpleArgument (1,1);
EdgeClass IsUpperBoundOfTypeParameter from TypeSpecification (0,*) to TypeParameterDeclaration (1,1);
EdgeClass IsWildcardArgumentOf from WildcardArgument (0,*) to TypeArgument (1,1);
EdgeClass TypeSpecificationLinksToWildcardArgument from TypeSpecification (1,1) to WildcardArgument (1,1);
Package rsl.rsldomainelements;
Package rsl.rslgoal;
Package rsl.rslkernel;
Package rsl.rslrequirementrepresentations;
Package rsl.rslrequirementrepresentationsentences;
Package rsl.rslrequirements;
Package uml.action;
Package uml.activities;
Package uml.auxiliaryconstructs;
Package uml.classes;
Package uml.commonbehaviors;
Package uml.components;
Package uml.compositestructures;
Package uml.interactions;
Package uml.usecases;
VertexClass Actor: uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
VertexClass Extend: uml.classes.kernel.DirectedRelationship, uml.classes.kernel.NamedElement;
VertexClass ExtensionPoint: uml.classes.kernel.RedefinableElement;
VertexClass Include: uml.classes.kernel.DirectedRelationship, uml.classes.kernel.NamedElement;
VertexClass UseCase: uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
CompositionClass ExtendIsPartOfExtension from Extend (0,*) role extend to UseCase (1,1) role extension aggregate to;
EdgeClass ExtenderLinksToExtendedCase from Extend (0,*) role extender to UseCase (1,1) role extendedCase;
EdgeClass ExtensionLinksToExtensionLocation from Extend (0,*) role extension to ExtensionPoint (1,*) role extensionLocation;
CompositionClass ExtensionPointIsPartOfUseCase from ExtensionPoint (0,*) role extensionPoint to UseCase (1,1) role useCase aggregate to;
CompositionClass IncludeIsPartOfIncludingCase from Include (0,*) role include to UseCase (1,1) role includingCase aggregate to;
EdgeClass IncluderLinksToAddition from Include (0,*) role includer to UseCase (1,1) role addition;
Package rsl.rsldomainelements.actors;
VertexClass Actor: rsl.rsldomainelements.domainelements.ActorOrSystemElement;
VertexClass ActorsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
AggregationClass NestingPackageContainsNestedPackage: rsl.rsldomainelements.domainelements.NestingPackageContainsNestedPackage from ActorsPackage (1,1) role nestingPackage to ActorsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsActor: rsl.rsldomainelements.domainelements.PackageContainsDomainElement from ActorsPackage (1,1) role package to Actor (0,*) role actor aggregate from;
Package rsl.rsldomainelements.domainelementrepresentations;
VertexClass DomainElementRepresentation: rsl.rslkernel.elements.ElementRepresentation;
Package rsl.rsldomainelements.domainelements;
abstract VertexClass ActorOrSystemElement: DomainElement;
abstract VertexClass DomainElement: rsl.rslkernel.elements.RepresentableElement;
VertexClass DomainElementRelationship: rsl.rslkernel.elements.RepresentableElementRelationship { directed: Boolean,  sourceMultiplicity: String,  targetMultiplicity: String };
abstract VertexClass DomainElementsPackage: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass DomainSpecification: rsl.rslkernel.elements.RepresentableElementsPackage;
AggregationClass DomainElementContainsStatement from DomainElement (1,1) role domainElement to rsl.rsldomainelements.notions.DomainStatement (0,*) role statement aggregate from;
AggregationClass DomainSpecificationContainsDomainElementsPackage: sclkernel.SCLElementsPackageContainsElement from DomainSpecification (1,1) role domainSpecification to DomainElementsPackage (0,*) role domainElementsPackage aggregate from;
AggregationClass ElementContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from ActorOrSystemElement (0,1) role element to rsl.rsldomainelements.phrases.NounPhrase (1,1) role name aggregate from;
AggregationClass ElementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from DomainElement (1,1) role element to rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (1,*) role representation aggregate from;
abstract AggregationClass NestingPackageContainsNestedPackage: rsl.rslkernel.elements.NestingPackageContainsNestedPackage from DomainElementsPackage (1,1) role nestingPackage to DomainElementsPackage (0,*) role nestedPackage aggregate from;
abstract AggregationClass PackageContainsDomainElement: rsl.rslkernel.elements.RepresentableElementsPackageContainsElement from DomainElementsPackage (1,1) role package to DomainElement (0,*) role domainElement aggregate from;
CompositionClass SpecificationContainsSystemUnderDevelopment from DomainSpecification (0,1) role specification to rsl.rsldomainelements.systemelements.SystemElement (1,1) role systemUnderDevelopment aggregate from;
EdgeClass ToSourceLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from DomainElementRelationship (0,*) role toSource to DomainElement (1,1) role target;
EdgeClass ToTargetLinksToSource: sclkernel.SCLRelationshipLinksToSource from DomainElementRelationship (0,*) role toTarget to DomainElement (1,1) role source;
Package rsl.rsldomainelements.notions;
EnumDomain AttributeDataTypes ( STRING, INTEGER, BOOLEAN, DATE, TIME, FLOAT );
EnumDomain NotionAggregationKind ( SOURCE_SHARED, TARGET_SHARED, NONE, SOURCE_COMPOSITE, TARGET_COMPOSITE );
abstract VertexClass AttributeDataType: rsl.rsldomainelements.domainelements.DomainElement;
VertexClass DomainStatement: rsl.rslkernel.elements.RepresentableElement;
VertexClass Enumeration: AttributeDataType { name: String };
VertexClass EnumerationLiteral: sclkernel.SCLElement { value: String };
VertexClass Notion: rsl.rsldomainelements.domainelements.DomainElement { defaultValue: String,  isPersistent: Boolean };
VertexClass NotionAttribute: rsl.rslkernel.attributes.Attribute;
VertexClass NotionRelationship: rsl.rsldomainelements.domainelements.DomainElementRelationship { aggregation: uml.classes.kernel.AggregationKind,  isPersistent: Boolean,  sourceRole: String,  targetRole: String };
VertexClass NotionSpecialisation: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass NotionsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
VertexClass PrimitiveDataType: AttributeDataType { typeName: AttributeDataTypes };
EdgeClass DataPresenterLinksToDataProvider from rsl.rsldomainelements.uielements.UIElement (0,1) role dataPresenter to Notion (0,1) role dataProvider;
EdgeClass ElementLinksToElementNameModifier from rsl.rsldomainelements.uielements.UIElement (0,1) role element to Notion (0,1) role elementNameModifier;
EdgeClass GeneralLinksToSource: sclkernel.SCLRelationshipLinksToSource from NotionSpecialisation (0,*) role general to Notion (1,1) role source;
CompositionClass LiteralIsPartOfEnumeration from EnumerationLiteral (0,*) role literal to Enumeration (1,1) role enumeration aggregate to;
AggregationClass NestingPackageContainsNestedPackage: rsl.rsldomainelements.domainelements.NestingPackageContainsNestedPackage from NotionsPackage (1,1) role nestingPackage to NotionsPackage (0,*) role nestedPackage aggregate from;
AggregationClass NotionAttributeContainsDescription from NotionAttribute (0,1) role notionAttribute to rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (0,1) role description aggregate from;
CompositionClass NotionAttributeIsPartOfParentNotion from Notion (0,*) role notionAttribute to Notion (0,1) role parentNotion aggregate to;
AggregationClass NotionContainsAttribute: rsl.rslkernel.attributes.RepresentableElementContainsAttribute from Notion (1,1) role notion to NotionAttribute (0,*) role attribute aggregate from;
AggregationClass NotionContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from Notion (0,1) role notion to rsl.rsldomainelements.phrases.NounPhrase (1,1) role name aggregate from;
EdgeClass NotionLinksToDataType from Notion (0,*) role notion to AttributeDataType (0,1) role dataType;
AggregationClass PackageContainsNotion: rsl.rsldomainelements.domainelements.PackageContainsDomainElement from NotionsPackage (1,1) role package to Notion (0,*) role notion aggregate from;
EdgeClass SpecialLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from NotionSpecialisation (0,*) role special to Notion (1,1) role target redefines target;
AggregationClass StatementContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from DomainStatement (1,1) role statement to rsl.rsldomainelements.phrases.Phrase (1,1) role name aggregate from;
AggregationClass StatementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from DomainStatement (1,1) role statement to rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (1,*) role representation aggregate from;
EdgeClass UiElementLinksToElementTypeIndicator from rsl.rsldomainelements.uielements.UIElement (0,1) role uiElement to Notion (0,1) role elementTypeIndicator;
Package rsl.rsldomainelements.phrases;
VertexClass ComplexVerbPhrase: VerbPhrase;
VertexClass DeterminerLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass ModifierLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass NounLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass NounPhrase: Phrase;
VertexClass Phrase: rsl.rslkernel.elements.TermOrPhrase, rsl.rslkernel.elements.SentenceOrPhrase;
VertexClass PhraseHyperlink: rsl.rslkernel.elements.Hyperlink;
VertexClass PhrasePrepositionLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass PhraseVerbLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass SimpleVerbPhrase: VerbPhrase;
abstract VertexClass VerbPhrase: Phrase;
AggregationClass ComplexVerbPhraseContainsSimpleVerbPhrase from ComplexVerbPhrase (0,1) role complexVerbPhrase to SimpleVerbPhrase (1,1) role simpleVerbPhrase aggregate from;
CompositionClass DeterminerIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from DeterminerLink (0,1) role determiner to NounPhrase (1,1) role source aggregate to;
EdgeClass DeterminerLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from DeterminerLink (0,*) role determinerLink to rsl.rsldomainelements.terms.Determiner (1,1) role target;
CompositionClass ModifierIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from ModifierLink (0,1) role modifier to NounPhrase (1,1) role source aggregate to;
EdgeClass ModifierLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from ModifierLink (0,*) role modifierLink to rsl.rsldomainelements.terms.Modifier (1,1) role target;
CompositionClass NounIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from NounLink (1,1) role noun to NounPhrase (1,1) role source aggregate to;
EdgeClass NounLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from NounLink (0,*) role nounLink to rsl.rsldomainelements.terms.Noun (1,1) role target;
abstract EdgeClass PhraseHyperlinkLinksToTarget: rsl.rslkernel.elements.HyperlinkLinksToTarget from PhraseHyperlink (0,*) to Phrase (1,1) role target;
CompositionClass PrepositionIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from PhrasePrepositionLink (0,1) role preposition to VerbPhrase (1,1) role source aggregate to;
EdgeClass PrepositionLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from PhrasePrepositionLink (0,*) role prepositionLink to rsl.rsldomainelements.terms.Preposition (1,1) role target;
CompositionClass VerbIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from PhraseVerbLink (1,1) role verb to SimpleVerbPhrase (1,1) role source aggregate to;
EdgeClass VerbLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from PhraseVerbLink (0,*) role verbLink to rsl.rsldomainelements.terms.Verb (1,1) role target;
AggregationClass VerbPhraseContainsObject from VerbPhrase (0,1) role verbPhrase to NounPhrase (0,1) role object aggregate from;
Package rsl.rsldomainelements.systemelements;
VertexClass SystemElement: rsl.rsldomainelements.domainelements.ActorOrSystemElement;
VertexClass SystemElementsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
AggregationClass NestingPackageContainsNestedPackage: rsl.rsldomainelements.domainelements.NestingPackageContainsNestedPackage from SystemElementsPackage (1,1) role nestingPackage to SystemElementsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsSystemElement: rsl.rsldomainelements.domainelements.PackageContainsDomainElement from SystemElementsPackage (1,1) role package to SystemElement (0,*) role systemElement aggregate from;
Package rsl.rsldomainelements.terms;
VertexClass Article: Determiner;
VertexClass ConditionalConjunction: Term;
VertexClass Determiner: Term;
VertexClass Lemma: sclkernel.SCLElement;
VertexClass Lexeme: sclkernel.SCLElement { language: String };
VertexClass ModalVerb: Term;
VertexClass Modifier: Term;
VertexClass Noun: Term;
VertexClass Preposition: Term;
VertexClass Quantifier: Determiner;
abstract VertexClass Term: rsl.rslkernel.elements.TermOrPhrase { keyword: String,  name: String,  synonymUid: Long };
abstract VertexClass TermHyperlink: rsl.rslkernel.elements.Hyperlink { value: String };
VertexClass Terminology: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass Verb: Term;
CompositionClass LemmaIsPartOfLexeme from Lemma (1,1) role lemma to Lexeme (1,1) aggregate to;
CompositionClass LexemeIsPartOfTerm from Lexeme (1,*) role lexeme to Term (1,1) aggregate to;
abstract EdgeClass TermHyperlinkLinksToTarget: rsl.rslkernel.elements.HyperlinkLinksToTarget from TermHyperlink (0,*) to Term (1,1) role target;
AggregationClass TerminologyContainsTerm: sclkernel.SCLElementsPackageContainsElement from Terminology (1,1) role terminology to Term (0,*) role term aggregate from;
Package rsl.rsldomainelements.uielements;
VertexClass InputOutputDevice: rsl.rsldomainelements.systemelements.SystemElement { deviceName: String };
VertexClass InputOutputStyle: rsl.rslkernel.elements.RepresentableElement { styleName: String };
VertexClass InputOutputStyleRepresentation: rsl.rslkernel.elements.ElementRepresentation;
VertexClass InputUIElement: UIElement { dataValidation: String };
VertexClass OptionUIElement: UIElement { isReSelectable: Boolean };
VertexClass SelectionUIElement: UIElement { maximumSelectableOptions: Integer,  sortCriterion: String,  sortOrder: String };
VertexClass TriggerUIElement: UIElement { executionTime: Integer,  isStatelessTrigger: Boolean };
VertexClass UIContainer: UIElement;
VertexClass UIElement: rsl.rslkernel.elements.RepresentableElement { hasAutoContent: Boolean,  isInteractionCritical: Boolean,  isMandatory: Boolean,  name: String };
abstract VertexClass UIElementRepresentation: rsl.rslkernel.elements.ElementRepresentation { implementationPlatform: String,  modality: String };
VertexClass UIElementsPackage: rsl.rsldomainelements.domainelements.DomainElementsPackage;
VertexClass UIPresentationUnit: UIContainer;
EdgeClass ButtonElementLinksToButtonWidget from TriggerUIElement (0,1) role buttonElement to rsl.rsldomainelements.uielements.guirepresentation.Button (0,*) role buttonWidget;
EdgeClass CheckOptionElementLinksToCheckOptionWidget from OptionUIElement (0,1) role checkOptionElement to rsl.rsldomainelements.uielements.guirepresentation.CheckOption (0,*) role checkOptionWidget;
EdgeClass CheckOptionListWidgetLinksToCheckOptionListSpecification from rsl.rsldomainelements.uielements.guirepresentation.CheckOptionList (0,*) role checkOptionListWidget to SelectionUIElement (0,1) role checkOptionListSpecification;
AggregationClass ContainerContainsContent from UIContainer (0,1) role container to UIElement (0,*) role content aggregate from;
EdgeClass ContainerElementLinksToContainerWidget from UIContainer (0,1) role containerElement to rsl.rsldomainelements.uielements.guirepresentation.Container (0,*) role containerWidget;
EdgeClass DialogElementLinksToDialogWidget from UIPresentationUnit (0,1) role dialogElement to rsl.rsldomainelements.uielements.guirepresentation.Dialog (0,*) role dialogWidget;
EdgeClass DropDownListElementLinksToDropDownListWidget from SelectionUIElement (0,1) role dropDownListElement to rsl.rsldomainelements.uielements.guirepresentation.DropDownList (0,*) role dropDownListWidget;
CompositionClass InputoutputstyleContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from InputOutputStyle (1,1) role inputoutputstyle redefines element to InputOutputStyleRepresentation (1,*) role representation redefines representation aggregate from;
EdgeClass InteractionDeviceLinksToSupportedInteractionStyle from InputOutputDevice (0,*) role interactionDevice to InputOutputStyle (0,*) role supportedInteractionStyle;
EdgeClass LabelElementLinksToLabelWidget from InputUIElement (0,1) role labelElement to rsl.rsldomainelements.uielements.guirepresentation.Label (0,*) role labelWidget;
EdgeClass OpenListElementLinksToOpenListWidget from SelectionUIElement (0,1) role openListElement to rsl.rsldomainelements.uielements.guirepresentation.OpenList (0,*) role openListWidget;
EdgeClass RadioOptionElementLinksToRadioOptionWidget from OptionUIElement (0,1) role radioOptionElement to rsl.rsldomainelements.uielements.guirepresentation.RadioOption (0,*) role radioOptionWidget;
EdgeClass RadioOptionListWidgetLinksToRadioOptionListSpecification from rsl.rsldomainelements.uielements.guirepresentation.RadioOptionList (0,*) role radioOptionListWidget to SelectionUIElement (0,1) role radioOptionListSpecification;
AggregationClass SelectionUIElementContainsOption from SelectionUIElement (1,1) to OptionUIElement (0,*) role option aggregate from;
EdgeClass TextFieldElementLinksToTextFieldWidget from InputUIElement (0,1) role textFieldElement to rsl.rsldomainelements.uielements.guirepresentation.TextField (0,*) role textFieldWidget;
EdgeClass ToggeButtonElementLinksToToggeButtonWidget from TriggerUIElement (0,1) role toggeButtonElement to rsl.rsldomainelements.uielements.guirepresentation.ToggleButton (0,*) role toggeButtonWidget;
EdgeClass UiElementLinksToRecommendedInteractionDevice from UIElement (0,*) role uiElement to InputOutputDevice (0,*) role recommendedInteractionDevice;
CompositionClass UielementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from UIElement (1,1) role uielement redefines element to UIElementRepresentation (1,*) role representation redefines representation aggregate from;
EdgeClass WindowElementLinksToWindowWidget from UIPresentationUnit (0,1) role windowElement to rsl.rsldomainelements.uielements.guirepresentation.Window (0,*) role windowWidget;
Package rsl.rslgoal.basicrepresentations;
abstract VertexClass TaskRepresentation: rsl.rslkernel.elements.ElementRepresentation { name: String };
Package rsl.rslgoal.goalrelationships;
VertexClass And: AndOrRelationship;
abstract VertexClass AndOrRelationship: GoalRelationship;
VertexClass Break: NegativeContributionTo;
abstract VertexClass GoalRelationship: sclkernel.TraceabilityLink, rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass GoalVocabularyRelationship: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass Help: PositiveContributionTo;
VertexClass Hurt: NegativeContributionTo;
VertexClass Make: PositiveContributionTo;
VertexClass NegativeContributionTo: SoftGoalRelationship;
VertexClass Or: AndOrRelationship;
VertexClass PositiveContributionTo: SoftGoalRelationship;
abstract VertexClass SoftGoalRelationship: GoalRelationship;
VertexClass SomeNegative: NegativeContributionTo;
VertexClass SomePositive: PositiveContributionTo;
VertexClass SubGoalOfRelationship: GoalRelationship;
EdgeClass GoalVocabularyLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from GoalVocabularyRelationship (0,*) role goalVocabulary to rsl.rsldomainelements.notions.Notion (1,1) role target redefines target;
Package rsl.rslgoal.goalrepresentations;
abstract VertexClass GoalRepresentation: rsl.rslkernel.elements.ElementRepresentation { name: String };
Package rsl.rslgoal.goalsspecifications;
VertexClass AchievementGoal: HardGoal;
VertexClass CompositeHardGoal: HardGoal;
VertexClass GoalSpecification: rsl.rslkernel.elements.RepresentableElement { goalID: String };
VertexClass GoalsPackage: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass GoalsSpecification: sclkernel.SoftwareArtifact;
abstract VertexClass HardGoal: GoalSpecification;
VertexClass SoftGoal: GoalSpecification;
EdgeClass AccomplishedByLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.taskspecifications.TaskHardGoalRelationship (0,*) role accomplishedBy to HardGoal (1,1) role source;
AggregationClass GoalContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from GoalSpecification (0,1) role goal to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,1) role name aggregate from;
AggregationClass GoalContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from GoalSpecification (1,1) role goal to rsl.rslgoal.goalrepresentations.GoalRepresentation (1,*) role representation aggregate from;
EdgeClass GoalSpecificationLinksToDomainSpecification from GoalsSpecification (1,1) role goalSpecification to rsl.rsldomainelements.domainelements.DomainSpecification (1,1) role domainSpecification;
AggregationClass GoalsSpecificationContainsGoalsPackage: sclkernel.SCLElementsPackageContainsNestedPackage from GoalsSpecification (1,1) role goalsSpecification to GoalsPackage (0,*) role goalsPackage aggregate from;
AggregationClass NestingPackageContainsNestedPackage: rsl.rslkernel.elements.NestingPackageContainsNestedPackage from GoalsPackage (1,1) role nestingPackage to GoalsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsGoal from GoalsPackage (1,1) role package to GoalSpecification (0,*) role goal aggregate from;
EdgeClass PartRelationLinksToWhole: sclkernel.SCLRelationshipLinksToTarget from rsl.rslgoal.goalrelationships.SubGoalOfRelationship (0,*) role partRelation to CompositeHardGoal (1,1) role whole;
EdgeClass SatisfiedByLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.requirementsspecifications.SatisficesRelationship (0,*) role satisfiedBy to SoftGoal (1,1) role source;
EdgeClass SoftGoalNegativeInfluenceLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.taskspecifications.InfluencesNegatively (0,*) role softGoalNegativeInfluence to SoftGoal (1,1) role source;
EdgeClass SoftGoalPositiveInfluenceLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.taskspecifications.InfluencesPositively (0,*) role softGoalPositiveInfluence to SoftGoal (1,1) role source;
EdgeClass SourceAndOrRelationshipLinksToComposesGoal: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.AndOrRelationship (1,1) role sourceAndOrRelationship to GoalSpecification (1,1) role composesGoal;
EdgeClass SourceLinksToAchieves from rsl.rslrequirementrepresentations.descriptiverequirementrepresentations.AchievesRelationship (1,*) role source to AchievementGoal (0,1) role achieves;
EdgeClass SourceSoftGoalRelationshipLinksToComposesSoftGoal: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.SoftGoalRelationship (1,1) role sourceSoftGoalRelationship to SoftGoal (1,1) role composesSoftGoal;
EdgeClass TargetAndOrRelationshipLinksToComposedGoal: sclkernel.SCLRelationshipLinksToTarget from rsl.rslgoal.goalrelationships.AndOrRelationship (1,1) role targetAndOrRelationship to GoalSpecification (1,1) role composedGoal;
EdgeClass TargetSoftGoalRelationshipLinksToComposedSoftGoal: sclkernel.SCLRelationshipLinksToTarget from rsl.rslgoal.goalrelationships.SoftGoalRelationship (1,1) role targetSoftGoalRelationship to SoftGoal (1,1) role composedSoftGoal;
EdgeClass VocabularyLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.GoalVocabularyRelationship (0,*) role vocabulary to GoalSpecification (1,1) role source;
EdgeClass WholeRelationLinksToPart: sclkernel.SCLRelationshipLinksToSource from rsl.rslgoal.goalrelationships.SubGoalOfRelationship (1,1) role wholeRelation to HardGoal (1,1) role part;
Package rsl.rslgoal.taskspecifications;
VertexClass CompositeTask: Task;
VertexClass CompositeTaskRelationship: TaskRelationship;
VertexClass InfluencesNegatively: TaskRelationship;
VertexClass InfluencesPositively: TaskRelationship;
VertexClass Task: rsl.rslkernel.elements.RepresentableElementsPackage, rsl.rslkernel.elements.RepresentableElement { taskID: String };
VertexClass TaskHardGoalRelationship: TaskRelationship;
abstract VertexClass TaskRelationship: sclkernel.TraceabilityLink, rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass TaskSpecification: sclkernel.SoftwareArtifact;
EdgeClass AccomplishesGoalLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from TaskHardGoalRelationship (0,*) role accomplishesGoal to Task (1,1) role target;
EdgeClass ContainedTaskLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from CompositeTaskRelationship (0,*) role containedTask to CompositeTask (1,1) role target;
EdgeClass ContainingTaskLinksToSource: sclkernel.SCLRelationshipLinksToSource from CompositeTaskRelationship (0,*) role containingTask to Task (1,1) role source;
CompositionClass RepresentingScenarioIsPartOfRepresentedTask from rsl.rslrequirementrepresentations.descriptiverequirementrepresentations.ConstrainedLanguageScenario (0,1) role representingScenario to Task (0,1) role representedTask aggregate to;
AggregationClass TaskContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from Task (0,1) role task to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,1) role name aggregate from;
AggregationClass TaskContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from Task (1,1) role task to rsl.rslgoal.basicrepresentations.TaskRepresentation (1,*) role representation aggregate from;
EdgeClass TaskNegativeInfluenceLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from InfluencesNegatively (0,*) role taskNegativeInfluence to Task (1,1) role target;
EdgeClass TaskPositiveInfluenceLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from InfluencesPositively (0,*) role taskPositiveInfluence to Task (1,1) role target;
AggregationClass TaskSpecificationContainsTask: sclkernel.SCLElementsPackageContainsElement from TaskSpecification (1,1) role taskSpecification to Task (0,*) role task aggregate from;
Package rsl.rslkernel.attributes;
VertexClass Attribute: sclkernel.SCLElement { data: String };
VertexClass AttributeDefinition: sclkernel.SCLElement { name: String,  type: String };
VertexClass AttributeSet: sclkernel.SCLElement;
EdgeClass AttributeLinksToAttributeDefinition from Attribute (0,*) to AttributeDefinition (1,1);
AggregationClass AttributeSetContainsDefinition from AttributeSet (1,1) to AttributeDefinition (0,*) role definition aggregate from;
AggregationClass RepresentableElementContainsAttribute from rsl.rslkernel.elements.RepresentableElement (1,1) to Attribute (0,*) role attribute aggregate from;
EdgeClass RepresentableElementLinksToAttributeSet from rsl.rslkernel.elements.RepresentableElement (0,*) to AttributeSet (1,*) role attributeSet;
Package rsl.rslkernel.elements;
abstract VertexClass ElementRepresentation: sclkernel.SCLElement;
abstract VertexClass Hyperlink: sclkernel.SCLRelationship;
abstract VertexClass HyperlinkedSentence: SentenceOrPhrase { sentenceText: String };
abstract VertexClass RepresentableElement: sclkernel.SCLElement;
abstract VertexClass RepresentableElementRelationship: sclkernel.SCLRelationship;
abstract VertexClass RepresentableElementsPackage: sclkernel.SCLElementsPackage;
abstract VertexClass SentenceOrPhrase: sclkernel.SCLElement;
abstract VertexClass TermOrPhrase: sclkernel.SCLElement;
abstract AggregationClass ElementContainsRepresentation from RepresentableElement (1,1) role element to ElementRepresentation (1,*) role representation aggregate from;
abstract AggregationClass ElementRepresentationContainsSentence from ElementRepresentation (0,1) to HyperlinkedSentence (0,*) role sentence aggregate from;
abstract EdgeClass HyperlinkLinksToSource: sclkernel.SCLRelationshipLinksToSource from Hyperlink (0,*) role hyperlink to SentenceOrPhrase (1,1) role source;
abstract EdgeClass HyperlinkLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from Hyperlink (0,*) to TermOrPhrase (1,1) role target;
abstract AggregationClass NestingPackageContainsNestedPackage: sclkernel.SCLElementsPackageContainsNestedPackage from RepresentableElementsPackage (1,1) role nestingPackage to RepresentableElementsPackage (0,*) role nestedPackage aggregate from;
EdgeClass RelatedUIPresentationLinksToRequirementSentence from rsl.rsldomainelements.uielements.UIPresentationUnit (0,1) role relatedUIPresentation to HyperlinkedSentence (0,*) role requirementSentence;
abstract AggregationClass RepresentableElementContainsName from RepresentableElement (0,1) role representableElement to sclkernel.SCLElement (1,1) role name aggregate from;
abstract AggregationClass RepresentableElementsPackageContainsElement: sclkernel.SCLElementsPackageContainsElement from RepresentableElementsPackage (1,1) to RepresentableElement (0,*) role element aggregate from;
abstract EdgeClass ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.ScenarioMessage (0,*) to SentenceOrPhrase (1,1) role messageText;
AggregationClass SentenceListContainsSentence: ElementRepresentationContainsSentence from rsl.rslrequirementrepresentations.descriptiverequirementrepresentations.SentenceList (0,1) role sentenceList to HyperlinkedSentence (1,*) role sentence aggregate from;
abstract EdgeClass TermHyperlinkLinksToSource: HyperlinkLinksToSource from rsl.rsldomainelements.terms.TermHyperlink (0,*) to SentenceOrPhrase (1,1) role source;
EdgeClass UserActionOfAnnotationLinksToAnnotation from rsl.rslrequirementrepresentations.uibehaviourrepresentations.UserAction (0,1) role userActionOfAnnotation to HyperlinkedSentence (0,*) role annotation;
EdgeClass UserActionOfConditionLinksToCondition from rsl.rslrequirementrepresentations.uibehaviourrepresentations.UserAction (0,1) role userActionOfCondition to HyperlinkedSentence (0,*) role condition;
Package rsl.rslrequirementrepresentations.activityrepresentations;
VertexClass ActivityScenario: rsl.rslrequirementrepresentations.requirementrepresentations.ModelBasedRequirementRepresentation;
AggregationClass ScenarioContainsEdge from ActivityScenario (1,1) role scenario to rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityEdge (0,*) role edge aggregate from;
AggregationClass ScenarioContainsNode from ActivityScenario (1,1) role scenario to rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityNode (0,*) role node aggregate from;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
VertexClass AchievesRelationship: rsl.rslgoal.goalrelationships.GoalRelationship;
VertexClass ConstrainedLanguageScenario: rsl.rslrequirementrepresentations.requirementrepresentations.DescriptiveRequirementRepresentation;
VertexClass SentenceList: rsl.rslrequirementrepresentations.requirementrepresentations.DescriptiveRequirementRepresentation, rsl.rslgoal.basicrepresentations.TaskRepresentation, rsl.rslgoal.goalrepresentations.GoalRepresentation;
EdgeClass AchievedFromLinksToTarget from ConstrainedLanguageScenario (1,*) role achievedFrom to AchievesRelationship (0,1) role target;
AggregationClass ScenarioContainsScenarioStep from ConstrainedLanguageScenario (0,1) role scenario to rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence (0,*) role scenarioStep aggregate from;
AggregationClass ScenarioContainsUiStoryboard from ConstrainedLanguageScenario (0,1) role scenario to rsl.rslrequirementrepresentations.uibehaviourrepresentations.UIStoryboard (0,1) role uiStoryboard aggregate from;
AggregationClass SentenceListContainsUiStoryboard from SentenceList (0,1) role sentenceList to rsl.rslrequirementrepresentations.uibehaviourrepresentations.UIStoryboard (0,1) role uiStoryboard aggregate from;
CompositionClass TextualSentencesIsPartOfSentenceList from rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,*) role textualSentences to SentenceList (1,1) aggregate to;
Package rsl.rslrequirementrepresentations.interactionrepresentations;
VertexClass InteractionScenario: rsl.rslrequirementrepresentations.requirementrepresentations.ModelBasedRequirementRepresentation;
AggregationClass InteractionScenarioContainsLifeline from InteractionScenario (1,1) to rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.InteractionRepresentationLifeline (0,*) role lifeline aggregate from;
AggregationClass InteractionScenarioContainsMessage from InteractionScenario (1,1) to rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.ScenarioMessage (0,*) role message aggregate from;
Package rsl.rslrequirementrepresentations.requirementrepresentations;
abstract VertexClass DescriptiveRequirementRepresentation: RequirementRepresentation;
abstract VertexClass ModelBasedRequirementRepresentation: RequirementRepresentation;
abstract VertexClass RequirementRepresentation: rsl.rslkernel.elements.ElementRepresentation { name: String };
Package rsl.rslrequirementrepresentations.uibehaviourrepresentations;
VertexClass UIStoryboard: rsl.rslkernel.elements.RepresentableElement { name: String };
VertexClass UIStoryboardRepresentation: rsl.rslkernel.elements.ElementRepresentation;
VertexClass UserAction: rsl.rslkernel.elements.RepresentableElement { name: String };
VertexClass UserActionRepresentation: rsl.rslkernel.elements.ElementRepresentation;
EdgeClass IncomingEventLinksToEventListener from UserAction (0,*) role incomingEvent to rsl.rsldomainelements.uielements.UIElement (0,*) role eventListener;
EdgeClass IncommingActionLinksToSuccessor: IncomingEventLinksToEventListener from UserAction (0,*) role incommingAction redefines incomingEvent to rsl.rsldomainelements.uielements.UIPresentationUnit (0,*) role successor;
EdgeClass OutgoingActionLinksToPredecessor: OutgoingEventLinksToEventSource from UserAction (0,*) role outgoingAction redefines outgoingEvent to rsl.rsldomainelements.uielements.UIPresentationUnit (1,*) role predecessor;
EdgeClass OutgoingEventLinksToEventSource from UserAction (0,*) role outgoingEvent to rsl.rsldomainelements.uielements.UIElement (1,*) role eventSource;
CompositionClass SceneIsPartOfUiStoryboard from rsl.rsldomainelements.uielements.UIPresentationUnit (1,*) role scene to UIStoryboard (0,*) role uiStoryboard aggregate to;
CompositionClass StoryboardContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from UIStoryboard (1,1) role storyboard redefines element to UIStoryboardRepresentation (1,*) role representation redefines representation aggregate from;
CompositionClass UiStoryboardContainsSentence: rsl.rslkernel.elements.ElementRepresentationContainsSentence from UIStoryboardRepresentation (0,1) role uiStoryboard to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (0,*) role sentence redefines sentence aggregate from;
AggregationClass UserActionContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation, rsl.rslkernel.elements.RepresentableElementContainsName from UserAction (1,1) role userAction redefines representableElement to UserActionRepresentation (1,1) role representation redefines representation aggregate from;
CompositionClass UserActionContainsSentence: rsl.rslkernel.elements.ElementRepresentationContainsSentence from UserActionRepresentation (0,1) role userAction to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (0,*) role sentence redefines sentence aggregate from;
Package rsl.rslrequirementrepresentationsentences.activityrepresentation;
VertexClass RSLActivityEdge: sclkernel.SCLElement;
VertexClass RSLActivityNode: sclkernel.SCLElement;
EdgeClass IncomingControlFlowLinksToTargetNode from RSLActivityEdge (0,*) role incomingControlFlow to RSLActivityNode (1,1) role targetNode;
EdgeClass OutgoingControlFlowLinksToSourceNode from RSLActivityEdge (0,*) role outgoingControlFlow to RSLActivityNode (1,1) role sourceNode;
Package rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences;
abstract VertexClass ConstrainedLanguageSentence: rsl.rslkernel.elements.HyperlinkedSentence;
VertexClass RejoinSentence: ConstrainedLanguageSentence;
AggregationClass EdgeContainsRejoin from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityEdge (0,1) role edge to RejoinSentence (0,1) role rejoin aggregate from;
AggregationClass NodeContainsContainedSentence from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityNode (0,1) role node to ConstrainedLanguageSentence (1,1) role containedSentence aggregate from;
AggregationClass RejoinMessageContainsRejoinSentence from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.RejoinMessage (0,1) to RejoinSentence (1,1) role rejoinSentence aggregate from;
EdgeClass RejoinedSentenceLinksToRejoin from ConstrainedLanguageSentence (1,1) role rejoinedSentence to RejoinSentence (0,*) role rejoin;
Package rsl.rslrequirementrepresentationsentences.controlsentences;
EnumDomain InclusionType ( INSERT, REQUEST );
VertexClass ConditionSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
abstract VertexClass ControlSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
VertexClass InvocationSentence: ControlSentence { inclusionType: InclusionType };
VertexClass PostconditionSentence: ControlSentence { isSuccess: Boolean };
VertexClass PreconditionSentence: ControlSentence { inclusionType: InclusionType };
AggregationClass EdgeContainsCondition from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityEdge (0,1) role edge to ConditionSentence (0,1) role condition aggregate from;
AggregationClass InvokeMessageContainsMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.InvokeMessage (0,1) to InvocationSentence (1,1) role messageText aggregate from;
AggregationClass PostconditionMessageContainsMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.PostconditionMessage (0,1) to PostconditionSentence (1,1) role messageText aggregate from;
AggregationClass PreconditionMessageContainsMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.PreconditionMessage (0,1) to PreconditionSentence (1,1) role messageText aggregate from;
Package rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs;
VertexClass ActorLifeline: NounPhraseLifeline;
VertexClass ActorMessageEnd: ScenarioMessageEnd;
abstract VertexClass InteractionRepresentationLifeline: rsl.rslkernel.elements.ElementRepresentation;
VertexClass InvokeLifeline: InteractionRepresentationLifeline;
VertexClass InvokeMessage: ScenarioMessage;
VertexClass InvokeMessageEnd: ScenarioMessageEnd;
abstract VertexClass NounPhraseLifeline: InteractionRepresentationLifeline, rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation;
VertexClass PostconditionMessage: ScenarioMessage;
VertexClass PreconditionMessage: ScenarioMessage;
VertexClass PredicateMessage: ScenarioMessage;
VertexClass RejoinMessage: ScenarioMessage;
abstract VertexClass ScenarioMessage: sclkernel.SCLElement;
VertexClass ScenarioMessageEnd;
VertexClass SystemElementLifeline: NounPhraseLifeline;
VertexClass SystemElementMessageEnd: ScenarioMessageEnd;
CompositionClass ActorContainsLifelineRepresentation from rsl.rsldomainelements.actors.Actor (1,1) to ActorLifeline (0,*) role lifelineRepresentation aggregate from;
CompositionClass ActorMessageEndIsPartOfCovered from ActorMessageEnd (0,*) role actorMessageEnd to ActorLifeline (1,1) role covered aggregate to;
CompositionClass CoveredContainsSystemElementMessageEnd from SystemElementLifeline (1,1) role covered to SystemElementMessageEnd (0,*) role systemElementMessageEnd aggregate from;
CompositionClass InvokeMessageEndIsPartOfCovered from InvokeMessageEnd (1,1) role invokeMessageEnd to InvokeLifeline (1,1) role covered aggregate to;
EdgeClass InvokeMessageLinksToReceiveEvent from InvokeMessage (1,1) to InvokeMessageEnd (1,1) role receiveEvent;
EdgeClass InvokeMessageLinksToSendEvent from InvokeMessage (0,1) to SystemElementMessageEnd (1,1) role sendEvent;
AggregationClass NounPhraseLifelineContainsName from NounPhraseLifeline (1,1) to rsl.rsldomainelements.phrases.NounPhrase (0,1) role name aggregate from;
EdgeClass PostconditionMessageLinksToSendEvent from PostconditionMessage (0,1) to ActorMessageEnd (1,1) role sendEvent;
EdgeClass PreconditionMessageLinksToRecieveEvent from PreconditionMessage (0,1) to ActorMessageEnd (1,1) role recieveEvent;
EdgeClass PredicateMessageLinksToRecieveEventActor from PredicateMessage (0,1) to ActorMessageEnd (0,1) role recieveEventActor;
EdgeClass PredicateMessageLinksToRecieveEventSystem from PredicateMessage (0,1) to SystemElementMessageEnd (0,1) role recieveEventSystem;
EdgeClass PredicateMessageLinksToSendEventActor from PredicateMessage (0,1) to ActorMessageEnd (0,1) role sendEventActor;
EdgeClass PredicateMessageLinksToSendEventSystem from PredicateMessage (0,1) to SystemElementMessageEnd (0,1) role sendEventSystem;
EdgeClass RejoinMessageLinksToRecieveEventActor from RejoinMessage (0,*) to ActorMessageEnd (0,1) role recieveEventActor;
EdgeClass RejoinMessageLinksToRecieveEventSystem from RejoinMessage (0,*) to SystemElementMessageEnd (0,1) role recieveEventSystem;
EdgeClass RejoinMessageLinksToSendEventActor from RejoinMessage (0,*) to ActorMessageEnd (0,1) role sendEventActor;
EdgeClass RejoinMessageLinksToSendEventSystem from RejoinMessage (0,*) to SystemElementMessageEnd (0,1) role sendEventSystem;
EdgeClass SourceLinksToMessageText: rsl.rslkernel.elements.ScenarioMessageLinksToMessageText from PredicateMessage (0,*) role source to rsl.rsldomainelements.phrases.VerbPhrase (1,1) role messageText;
CompositionClass SystemElementContainsLifelineRepresentation from rsl.rsldomainelements.systemelements.SystemElement (1,1) to SystemElementLifeline (0,*) role lifelineRepresentation aggregate from;
Package rsl.rslrequirementrepresentationsentences.representationsentences;
VertexClass NaturalLanguageHypertextSentence: rsl.rslkernel.elements.HyperlinkedSentence;
CompositionClass InteractionStyleContainsStyleDescription: rsl.rslkernel.elements.ElementRepresentationContainsSentence from rsl.rsldomainelements.uielements.InputOutputStyleRepresentation (0,1) role interactionStyle to NaturalLanguageHypertextSentence (1,*) role styleDescription redefines sentence aggregate from;
AggregationClass RepresentationContainsSentence: rsl.rslkernel.elements.ElementRepresentationContainsSentence from rsl.rsldomainelements.domainelementrepresentations.DomainElementRepresentation (0,1) role representation to NaturalLanguageHypertextSentence (0,*) role sentence aggregate from;
Package rsl.rslrequirementrepresentationsentences.svosentences;
VertexClass ConditionalConjunctionLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass ConditionalSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
VertexClass ModalSVOSentence: SVOSentence;
VertexClass ModalVerbLink: rsl.rsldomainelements.terms.TermHyperlink;
VertexClass Predicate: rsl.rsldomainelements.phrases.PhraseHyperlink;
VertexClass SVOSentence: rsl.rslrequirementrepresentationsentences.constrainedlanguagesentences.ConstrainedLanguageSentence;
VertexClass Subject: rsl.rsldomainelements.phrases.PhraseHyperlink;
CompositionClass ConditionalConjunctionIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from ConditionalConjunctionLink (0,1) role conditionalConjunction to ConditionalSentence (1,1) role source aggregate to;
CompositionClass ConditionalSentenceContainsConditionalClause from ConditionalSentence (1,1) role conditionalSentence to SVOSentence (0,1) role conditionalClause aggregate from;
CompositionClass ConjunctionLinkContainsTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from ConditionalConjunctionLink (0,*) role conjunctionLink to rsl.rsldomainelements.terms.ConditionalConjunction (1,1) role target aggregate from;
EdgeClass LinkingPredicateLinksToDomainStatement from Predicate (0,*) role linkingPredicate to rsl.rsldomainelements.notions.DomainStatement (0,1) role domainStatement;
EdgeClass LinkingSubjectLinksToDomainElement from Subject (0,*) role linkingSubject to rsl.rsldomainelements.domainelements.DomainElement (0,1) role domainElement;
AggregationClass ModalVerbIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from ModalVerbLink (1,1) role modalVerb to ModalSVOSentence (1,1) role source aggregate to;
EdgeClass ModalVerbLinkLinksToTarget: rsl.rsldomainelements.terms.TermHyperlinkLinksToTarget from ModalVerbLink (0,*) role modalVerbLink to rsl.rsldomainelements.terms.ModalVerb (1,1) role target;
EdgeClass NodeLinksToPartition from rsl.rslrequirementrepresentationsentences.activityrepresentation.RSLActivityNode (0,1) role node to Subject (0,1) role partition;
CompositionClass OwnedSentenceContainsMainClause from ConditionalSentence (0,1) role ownedSentence to ModalSVOSentence (1,1) role mainClause aggregate from;
AggregationClass PredicateContainsTarget: rsl.rsldomainelements.phrases.PhraseHyperlinkLinksToTarget from Predicate (0,*) role predicate to rsl.rsldomainelements.phrases.VerbPhrase (1,1) role target aggregate from;
CompositionClass PredicateIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from Predicate (1,1) role predicate to SVOSentence (1,1) role source aggregate to;
EdgeClass SentenceLinksToRecipient from SVOSentence (1,1) role sentence to rsl.rsldomainelements.domainelements.ActorOrSystemElement (0,1) role recipient;
AggregationClass SubjectContainsTarget: rsl.rsldomainelements.phrases.PhraseHyperlinkLinksToTarget from Subject (0,*) role subject to rsl.rsldomainelements.phrases.NounPhrase (1,1) role target aggregate from;
CompositionClass SubjectIsPartOfSource: rsl.rslkernel.elements.HyperlinkLinksToSource from Subject (1,1) role subject to SVOSentence (1,1) role source aggregate to;
Package rsl.rslrequirements.requirementrelationships;
VertexClass ConflictsWith: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass Constrains: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass DependsOn: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass DerivesFrom: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass Elaborates: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass Fulfils: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass IsSimilarTo: NonInvocationRelationship, sclkernel.TraceabilityLink;
VertexClass MakesPossible: NonInvocationRelationship, sclkernel.TraceabilityLink;
abstract VertexClass NonInvocationRelationship: RequirementRelationship;
VertexClass Operationalizes: NonInvocationRelationship, sclkernel.TraceabilityLink;
abstract VertexClass RequirementRelationship: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass RequirementVocabularyRelationship: rsl.rslkernel.elements.RepresentableElementRelationship;
EdgeClass RequirementVocabularyLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from RequirementVocabularyRelationship (0,*) role requirementVocabulary to rsl.rsldomainelements.notions.Notion (1,1) role target;
EdgeClass VocabularyLinksToTarget from RequirementVocabularyRelationship (0,*) role voc2 to rsl.rsldomainelements.notions.Notion (0,*) role tar2;
Package rsl.rslrequirements.requirementsspecifications;
VertexClass ConstraintOnProcess: Requirement;
VertexClass ConstraintOnSystem: Requirement;
VertexClass FunctionalRequirementOnComposite: Requirement;
VertexClass FunctionalRequirementOnSystem: Requirement;
VertexClass RSLUseCase: Requirement;
VertexClass Requirement: rsl.rslkernel.elements.RepresentableElement { requirementId: String };
VertexClass RequirementsPackage: rsl.rslkernel.elements.RepresentableElementsPackage;
VertexClass RequirementsSpecification: sclkernel.SoftwareArtifact;
VertexClass SatisficesRelationship: rsl.rslgoal.goalrelationships.GoalRelationship;
EdgeClass FromLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.requirementrelationships.NonInvocationRelationship (0,*) role from to Requirement (1,1) role source;
EdgeClass InvokeLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.usecaserelationships.InvocationRelationship (0,*) role invoke to RSLUseCase (1,1) role source;
EdgeClass InvokedLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.usecaserelationships.InvocationRelationship (0,*) role invoked to RSLUseCase (1,1) role target;
AggregationClass NestingPackageContainsNestedPackage: rsl.rslkernel.elements.NestingPackageContainsNestedPackage from RequirementsPackage (1,1) role nestingPackage to RequirementsPackage (0,*) role nestedPackage aggregate from;
AggregationClass PackageContainsRequirement: rsl.rslkernel.elements.RepresentableElementsPackageContainsElement from RequirementsPackage (1,1) role package to Requirement (0,*) role requirement aggregate from;
EdgeClass ParticipationLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.usecaserelationships.Participation (0,*) role participation to RSLUseCase (1,1) role target;
AggregationClass RSLUseCaseContainsLifelineRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from RSLUseCase (1,1) to rsl.rslrequirementrepresentationsentences.interactionsentenceconstructs.InvokeLifeline (1,*) role lifelineRepresentation aggregate from;
AggregationClass RequirementContainsInteraction: RequirementContainsRepresentation from RSLUseCase (1,1) role requirement to rsl.rslrequirementrepresentations.interactionrepresentations.InteractionScenario (1,*) role interaction aggregate from;
AggregationClass RequirementContainsName: rsl.rslkernel.elements.RepresentableElementContainsName from Requirement (0,1) role requirement to rsl.rslrequirementrepresentationsentences.representationsentences.NaturalLanguageHypertextSentence (1,1) role name aggregate from;
AggregationClass RequirementContainsRepresentation: rsl.rslkernel.elements.ElementContainsRepresentation from Requirement (1,1) role requirement to rsl.rslrequirementrepresentations.requirementrepresentations.RequirementRepresentation (1,*) role representation aggregate from;
AggregationClass RequirementsSpecificationContainsRequirementsPackage: sclkernel.SCLElementsPackageContainsElement from RequirementsSpecification (1,1) role requirementsSpecification to RequirementsPackage (0,*) role requirementsPackage aggregate from;
EdgeClass RequirementsSpecificationLinksToDomainSpecification from RequirementsSpecification (1,1) role requirementsSpecification to rsl.rsldomainelements.domainelements.DomainSpecification (1,1) role domainSpecification;
AggregationClass RslUseCaseContainsActivity: RequirementContainsRepresentation from RSLUseCase (1,1) role rslUseCase to rsl.rslrequirementrepresentations.activityrepresentations.ActivityScenario (1,1) role activity aggregate from;
EdgeClass SatisfiesLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from SatisficesRelationship (0,*) role satisfies to ConstraintOnSystem (1,1) role target;
EdgeClass ToLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.requirementrelationships.NonInvocationRelationship (0,*) role to to Requirement (1,1) role target;
EdgeClass UsageLinksToTarget: sclkernel.SCLRelationshipLinksToTarget from rsl.rslrequirements.usecaserelationships.Usage (1,1) role usage to RSLUseCase (1,1) role target;
EdgeClass VocabularyLinksToSource: sclkernel.SCLRelationshipLinksToSource from rsl.rslrequirements.requirementrelationships.RequirementVocabularyRelationship (0,*) role vocabulary to Requirement (1,1) role source;
Package rsl.rslrequirements.usecaserelationships;
VertexClass InvocationRelationship: rsl.rslrequirements.requirementrelationships.RequirementRelationship;
VertexClass Participation: rsl.rslkernel.elements.RepresentableElementRelationship;
VertexClass Usage: rsl.rslkernel.elements.RepresentableElementRelationship;
EdgeClass InvocationLinksToInvokeDescription from InvocationRelationship (1,1) role invocation to rsl.rslrequirementrepresentationsentences.controlsentences.InvocationSentence (1,1) role invokeDescription;
EdgeClass SourceParticipationLinksToSource: sclkernel.SCLRelationshipLinksToSource from Participation (1,1) role sourceParticipation to rsl.rsldomainelements.actors.Actor (1,1) role source;
EdgeClass UsageLinksToSource: sclkernel.SCLRelationshipLinksToSource from Usage (0,*) role usage to rsl.rsldomainelements.actors.Actor (1,1) role source;
Package uml.action.basicactions;
abstract VertexClass Action: uml.activities.basicactivities.ActivityNode;
abstract VertexClass CallAction: InvocationAction { isSynchronous: Boolean };
VertexClass CallBehaviorAction: CallAction;
abstract VertexClass InvocationAction: Action;
VertexClass OpaqueAction: Action { body: String,  language: String };
EdgeClass BehaviorLinksToCallAction from uml.commonbehaviors.basicbehaviors.Behavior (1,1) role behavior to CallBehaviorAction (0,*) role callAction;
Package uml.activities.basicactivities;
VertexClass Activity: uml.commonbehaviors.basicbehaviors.Behavior { isReadOnly: Boolean };
abstract VertexClass ActivityEdge: uml.classes.kernel.RedefinableElement;
VertexClass ActivityFinalNode: ControlNode;
abstract VertexClass ActivityGroup: uml.classes.kernel.Element;
abstract VertexClass ActivityNode: uml.classes.kernel.RedefinableElement;
VertexClass ControlFlow: ActivityEdge;
abstract VertexClass ControlNode: ActivityNode;
VertexClass InitialNode: ControlNode;
CompositionClass ActivityContainsNode from Activity (0,1) role activity to ActivityNode (0,*) role node aggregate from;
CompositionClass ActivityEdgeContainsGuard from ActivityEdge (0,1) role activityEdge to uml.classes.kernel.ValueSpecification (1,1) role guard aggregate from;
CompositionClass EdgeIsPartOfActivity from ActivityEdge (0,*) role edge to Activity (0,1) role activity aggregate to;
EdgeClass EdgeLinksToInPartition from ActivityEdge (0,*) role edge to uml.activities.intermediateactivities.ActivityPartition (0,*) role inPartition;
CompositionClass GroupIsPartOfInActivity from ActivityGroup (0,*) role group to Activity (0,1) role inActivity aggregate to;
EdgeClass InPartitionLinksToNode from uml.activities.intermediateactivities.ActivityPartition (0,*) role inPartition to ActivityNode (0,*) role node;
EdgeClass SourceLinksToOutgoing from ActivityNode (1,1) role source to ActivityEdge (0,*) role outgoing;
EdgeClass TargetLinksToIncoming from ActivityNode (1,1) role target to ActivityEdge (0,*) role incoming;
Package uml.activities.intermediateactivities;
VertexClass ActivityPartition: uml.activities.basicactivities.ActivityGroup, uml.classes.kernel.NamedElement { isDimension: Boolean,  isExternal: Boolean };
EdgeClass RepresentedByLinksToRepresents from ActivityPartition (0,*) role representedBy to uml.classes.kernel.Element (0,1) role represents;
CompositionClass SubpartitionIsPartOfSuperPartition from ActivityPartition (0,*) role subpartition to ActivityPartition (0,1) role superPartition aggregate to;
Package uml.auxiliaryconstructs.models;
VertexClass Model: uml.classes.kernel.Package { viewpoint: String };
Package uml.classes.dependencies;
VertexClass Abstraction: Dependency;
VertexClass Dependency: uml.classes.kernel.PackagableElement, uml.classes.kernel.DirectedRelationship;
VertexClass Realization: Abstraction;
VertexClass Usage: Dependency;
EdgeClass ClientDependencyLinksToClient from Dependency (0,*) role clientDependency to uml.classes.kernel.NamedElement (1,*) role client;
EdgeClass SupplierDependencyLinksToSupplier from Dependency (0,*) role supplierDependency to uml.classes.kernel.NamedElement (1,*) role supplier;
Package uml.classes.interfaces;
VertexClass Interface: uml.classes.kernel.Classifier;
VertexClass InterfaceRealization: uml.classes.dependencies.Realization;
EdgeClass BaseInterfaceLinksToRedefinedInterface from Interface (0,*) role baseInterface to Interface (0,*) role redefinedInterface;
EdgeClass ContractLinksToInterfaceRealization from Interface (1,1) role contract to InterfaceRealization (0,*) role interfaceRealization;
CompositionClass InterfaceRealizationIsPartOfImplementingClassifier from InterfaceRealization (0,*) role interfaceRealization to uml.commonbehaviors.basicbehaviors.BehavioredClassifier (1,1) role implementingClassifier aggregate to;
CompositionClass OwnedOperationIsPartOfInterface from uml.classes.kernel.Operation (0,*) role ownedOperation to Interface (0,1) role interface aggregate to;
AggregationClass OwningInterfaceContainsOwnedAttribute from Interface (0,1) role owningInterface to uml.classes.kernel.Property (0,*) role ownedAttribute aggregate from;
Package uml.classes.kernel;
EnumDomain AggregationKind ( NONE, SHARED, COMPOSITE );
EnumDomain ParameterDirectionKind ( IN, INOUT, OUT, RETURN );
EnumDomain VisibilityKind ( PUBLIC, PRIVATE, PROTECTED, PACKAGE );
VertexClass Association: Relationship, Classifier { isDerived: Boolean };
abstract VertexClass BehavioralFeature: Feature, Namespace;
VertexClass Class: uml.compositestructures.ports.EncapsulatedClassifier, Classifier, uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
abstract VertexClass Classifier: RedefinableElement, Namespace, Type { isAbstract: Boolean };
VertexClass Comment: Element { body: String };
VertexClass Constraint: PackagableElement;
VertexClass DataType: Classifier;
abstract VertexClass DirectedRelationship: Relationship;
abstract VertexClass Element: sclkernel.SCLElement;
VertexClass ElementImport: DirectedRelationship { alias: String,  visibility: VisibilityKind };
VertexClass Enumeration: DataType;
VertexClass EnumerationLiteral: InstanceSpecification;
VertexClass Expression: ValueSpecification { symbol: String };
abstract VertexClass Feature: RedefinableElement { isStatic: Boolean };
VertexClass Generalization: DirectedRelationship { isSubstitutable: Boolean };
VertexClass InstanceSpecification: PackagableElement;
VertexClass InstanceValue: ValueSpecification;
VertexClass LiteralBoolean: LiteralSpecification { value: Boolean };
VertexClass LiteralInteger: LiteralSpecification { value: Integer };
VertexClass LiteralNull: LiteralSpecification;
abstract VertexClass LiteralSpecification: ValueSpecification;
VertexClass LiteralString: LiteralSpecification { value: String };
VertexClass LiteralUnlimitedNatural: LiteralSpecification { value: String };
abstract VertexClass MultiplicityElement: Element { isOrdered: Boolean,  isUnique: Boolean };
abstract VertexClass NamedElement: Element { name: String,  visibility: VisibilityKind };
abstract VertexClass Namespace: NamedElement;
VertexClass OpaqueExpression: ValueSpecification { body: String,  language: String };
VertexClass Operation: BehavioralFeature { isQuery: Boolean };
abstract VertexClass PackagableElement: NamedElement;
VertexClass Package: Namespace, PackagableElement;
VertexClass PackageImport: DirectedRelationship { visibility: VisibilityKind };
VertexClass Parameter: TypedElement, MultiplicityElement { direction: ParameterDirectionKind };
VertexClass PrimitiveType: DataType;
VertexClass Property: StructuralFeature, uml.compositestructures.internalstructures.ConnectableElement { aggregation: AggregationKind,  isDerived: Boolean,  isDerivedUnion: Boolean };
abstract VertexClass RedefinableElement: NamedElement { isLeaf: Boolean };
abstract VertexClass Relationship: Element;
VertexClass Stereotype: Element, sclkernel.Stereotype { keywords: String };
abstract VertexClass StructuralFeature: Feature, TypedElement, MultiplicityElement { isReadOnly: Boolean };
abstract VertexClass Type: PackagableElement;
abstract VertexClass TypedElement: NamedElement;
abstract VertexClass ValueSpecification: PackagableElement, TypedElement;
EdgeClass AnnotationLinksToAnnotatedElement from Comment (0,*) role annotation to Element (0,*) role annotatedElement;
EdgeClass BaseClassifierLinksToRedefinedClassifier from Classifier (0,*) role baseClassifier to Classifier (0,*) role redefinedClassifier;
EdgeClass BaseOperationLinksToRedefinedOperation from Operation (0,*) role baseOperation to Operation (0,*) role redefinedOperation;
EdgeClass BasePropertyLinksToRedefinedProperty from Property (0,*) role baseProperty to Property (0,*) role redefinedProperty;
CompositionClass ClassContainsOwnedAttribute from uml.compositestructures.internalstructures.StructuredClassifier (0,1) role class to Property (0,*) role ownedAttribute aggregate from;
EdgeClass ComponentRealizationLinksToRealizingClassifier from uml.components.basiccomponents.ComponentRealization (0,*) role componentRealization to Classifier (1,1) role realizingClassifier;
CompositionClass DefaultValueIsPartOfOwningParameter from ValueSpecification (0,1) role defaultValue to Parameter (0,1) role owningParameter aggregate to;
EdgeClass ElementImportLinksToImportingNamespace from ElementImport (0,*) role elementImport to Namespace (1,1) role importingNamespace;
EdgeClass ElementLinksToStereotype: sclkernel.ElementLinksToStereotype from Element (0,*) role umlElement2 to Stereotype (0,*) role umlStereotype2;
EdgeClass ExpressionLinksToOperand from Expression (0,*) role expression to ValueSpecification (0,*) role operand;
EdgeClass GeneralLinksToSpecialization from Classifier (1,1) role general to Generalization (0,*) role specialization;
CompositionClass GeneralizationIsPartOfSpecific from Generalization (0,*) role generalization to Classifier (1,1) role specific aggregate to;
EdgeClass ImportLinksToImportedElement from ElementImport (1,1) role import to PackagableElement (1,1) role importedElement;
EdgeClass ImportingLinksToImportedPackage from PackageImport (0,*) role importing to Package (1,1) role importedPackage;
CompositionClass LowerValueIsPartOfOwningLower from ValueSpecification (0,1) role lowerValue to MultiplicityElement (0,1) role owningLower aggregate to;
CompositionClass MaxintIsPartOfMaxInteractionConstraint from ValueSpecification (0,1) role maxint to uml.interactions.fragments.InteractionConstraint (0,1) role maxInteractionConstraint aggregate to;
EdgeClass MemberEndLinksToAssociation from Property (2,*) role memberEnd to Association (0,1) role association;
EdgeClass MessageLinksToGuard from uml.interactions.basicinteractions.Message (0,1) role message to ValueSpecification (0,1) role guard;
CompositionClass MinintIsPartOfMinInteractionConstraint from ValueSpecification (0,1) role minint to uml.interactions.fragments.InteractionConstraint (0,1) role minInteractionConstraint aggregate to;
CompositionClass OwnedAttributeIsPartOfDataType from Property (0,*) role ownedAttribute to DataType (0,1) role dataType aggregate to;
CompositionClass OwnedCommentIsPartOfOwningElement from Comment (0,*) role ownedComment to Element (0,1) role owningElement aggregate to;
CompositionClass OwnedEndIsPartOfOwningAssociation from Property (0,*) role ownedEnd to Association (0,1) role owningAssociation aggregate to;
CompositionClass OwnedLiteralIsPartOfEnumeration from EnumerationLiteral (0,*) role ownedLiteral to Enumeration (0,1) role enumeration aggregate to;
CompositionClass OwnedOperationIsPartOfClass from Operation (0,*) role ownedOperation to Class (0,1) role class aggregate to;
CompositionClass OwnedOperationIsPartOfDataType from Operation (0,*) role ownedOperation to DataType (0,1) role dataType aggregate to;
CompositionClass OwnedParameterIsPartOfOperation from Parameter (0,*) role ownedParameter to Operation (0,1) role operation aggregate to;
CompositionClass OwnedUseCaseIsPartOfOwningClassifier from uml.usecases.UseCase (0,*) role ownedUseCase to Classifier (0,1) role owningClassifier aggregate to;
CompositionClass OwnerContainsArgument from uml.interactions.basicinteractions.Message (0,1) role owner to ValueSpecification (0,*) role argument aggregate from;
CompositionClass OwningConstraintContainsSpecification from Constraint (0,1) role owningConstraint to ValueSpecification (1,1) role specification aggregate from;
EdgeClass OwningPropertyLinksToDefaultValue from Property (0,1) role owningProperty to ValueSpecification (0,1) role defaultValue;
EdgeClass PackageImportLinksToImportingNamespace from PackageImport (0,*) role packageImport to Namespace (1,1) role importingNamespace;
CompositionClass PackagedElementIsPartOfOwningPackage from PackagableElement (0,*) role packagedElement to Package (0,1) role owningPackage aggregate to;
EdgeClass RaisedExceptionLinksToOperation from Type (0,*) role raisedException to Operation (0,*) role operation;
EdgeClass ReceiveOperationEventLinksToOperation from uml.interactions.basicinteractions.ReceiveOperationEvent (0,*) role receiveOperationEvent to Operation (1,1) role operation;
CompositionClass SelectorIsPartOfLifeline from ValueSpecification (0,1) role selector to uml.interactions.basicinteractions.Lifeline (0,1) role lifeline aggregate to;
EdgeClass SendOperationEventLinksToOperation from uml.interactions.basicinteractions.SendOperationEvent (0,*) role sendOperationEvent to Operation (1,1) role operation;
CompositionClass SpecificationIsPartOfOwningInstanceSpec from ValueSpecification (0,1) role specification to InstanceSpecification (0,1) role owningInstanceSpec aggregate to;
EdgeClass SuperPropertyLinksToSubsettedProperty from Property (0,*) role superProperty to Property (0,*) role subsettedProperty;
EdgeClass TypeLinksToTyped from Type (0,1) role type to TypedElement (0,*) role typed;
EdgeClass UmlStereotypeLinksToUmlElement: sclkernel.StereotypeLinksToElement from Stereotype (0,*) role umlStereotype to Element (0,*) role umlElement;
CompositionClass UpperValueIsPartOfOwningUpper from ValueSpecification (0,1) role upperValue to MultiplicityElement (0,1) role owningUpper aggregate to;
EdgeClass UseCaseLinksToSubject from uml.usecases.UseCase (0,*) role useCase to Classifier (0,*) role subject;
EdgeClass ValueLinksToInstance from InstanceValue (0,*) role value to InstanceSpecification (1,1) role instance;
Package uml.commonbehaviors.basicbehaviors;
abstract VertexClass Behavior: uml.classes.kernel.Class { isReentrant: Boolean };
abstract VertexClass BehavioredClassifier: uml.classes.kernel.Classifier;
EdgeClass BehaviorExecutionLinksToBehavior from uml.interactions.basicinteractions.BehaviorExecutionSpecification (0,*) role behaviorExecution to Behavior (0,1) role behavior;
EdgeClass BehavioredClassifierLinksToClassifierBehavior from BehavioredClassifier (0,1) role behavioredClassifier to Behavior (0,1) role classifierBehavior;
CompositionClass OwningClassifierContainsOwnedBehavior from BehavioredClassifier (0,1) role owningClassifier to Behavior (0,*) role ownedBehavior aggregate from;
Package uml.commonbehaviors.communications;
abstract VertexClass Event: uml.classes.kernel.PackagableElement;
abstract VertexClass MessageEvent: Event;
EdgeClass OccuranceSpecificationLinksToEvent from uml.interactions.basicinteractions.OccurrenceSpecification (0,*) role occuranceSpecification to Event (1,1) role event;
Package uml.components.basiccomponents;
EnumDomain ConnectorKind ( ASSEMBLY, DELEGATION );
VertexClass Component: uml.classes.kernel.Class { isIndirectlyInstantiated: Boolean };
VertexClass ComponentRealization: uml.classes.dependencies.Realization;
CompositionClass RealizationIsPartOfAbstraction from ComponentRealization (0,*) role realization to Component (0,1) role abstraction aggregate to;
Package uml.compositestructures.collaborations;
VertexClass Collaboration: uml.compositestructures.internalstructures.StructuredClassifier, uml.commonbehaviors.basicbehaviors.BehavioredClassifier;
EdgeClass CollaborationLinksToCollaborationRole from Collaboration (0,*) role collaboration to uml.compositestructures.internalstructures.ConnectableElement (0,*) role collaborationRole;
Package uml.compositestructures.internalstructures;
abstract VertexClass ConnectableElement: uml.classes.kernel.TypedElement;
VertexClass Connector: uml.classes.kernel.Feature { kind: uml.components.basiccomponents.ConnectorKind };
VertexClass ConnectorEnd: uml.classes.kernel.MultiplicityElement;
abstract VertexClass StructuredClassifier: uml.classes.kernel.Classifier;
CompositionClass EndIsPartOfConnector from ConnectorEnd (2,*) role end to Connector (1,1) role connector aggregate to;
EdgeClass EndLinksToRole from ConnectorEnd (0,*) role end to ConnectableElement (1,1) role role;
EdgeClass LifelineLinksToRepresents from uml.interactions.basicinteractions.Lifeline (0,*) role lifeline to ConnectableElement (0,1) role represents;
EdgeClass MessageLinksToConnector from uml.interactions.basicinteractions.Message (0,*) role message to Connector (0,1) role connector;
CompositionClass OwnedConnectorIsPartOfStructuredClassifier from Connector (0,*) role ownedConnector to StructuredClassifier (0,1) role structuredClassifier aggregate to;
Package uml.compositestructures.ports;
abstract VertexClass EncapsulatedClassifier: uml.compositestructures.internalstructures.StructuredClassifier;
Package uml.interactions.basicinteractions;
EnumDomain MessageSort ( ASYNCHCALL, SYNCHCALL, ASYNCHSIGNAL, CREATEMESSAGE, DELETEMESSAGE, REPLY );
VertexClass BehaviorExecutionSpecification: ExecutionSpecification;
VertexClass CreationEvent: uml.commonbehaviors.communications.Event;
VertexClass DestructionEvent: uml.commonbehaviors.communications.Event;
abstract VertexClass ExecutionSpecification: InteractionFragment;
VertexClass Interaction: uml.commonbehaviors.basicbehaviors.Behavior, InteractionFragment;
abstract VertexClass InteractionFragment: uml.classes.kernel.NamedElement;
VertexClass Lifeline: uml.classes.kernel.NamedElement;
VertexClass Message: uml.classes.kernel.NamedElement { messageSort: MessageSort };
abstract VertexClass MessageEnd: uml.classes.kernel.NamedElement;
VertexClass MessageOccurrenceSpecification: OccurrenceSpecification, MessageEnd;
VertexClass OccurrenceSpecification: InteractionFragment;
VertexClass ReceiveOperationEvent: uml.commonbehaviors.communications.MessageEvent;
VertexClass SendOperationEvent: uml.commonbehaviors.communications.MessageEvent;
EdgeClass CoveredLinksToCoveredBy from Lifeline (0,*) role covered to InteractionFragment (0,*) role coveredBy;
CompositionClass EnclosingInteractionContainsFragment from Interaction (0,1) role enclosingInteraction to InteractionFragment (0,*) role fragment aggregate from;
CompositionClass EnclosingOperandContainsFragment from uml.interactions.fragments.InteractionOperand (0,1) role enclosingOperand to InteractionFragment (0,*) role fragment aggregate from;
EdgeClass EndedExecutionLinksToFinish from ExecutionSpecification (0,*) role endedExecution to OccurrenceSpecification (1,1) role finish;
CompositionClass LifelineIsPartOfInteraction from Lifeline (0,*) role lifeline to Interaction (1,1) role interaction aggregate to;
EdgeClass MessageEndLinksToMessage from MessageEnd (0,1) role messageEnd to Message (0,1) role message;
CompositionClass MessageIsPartOfInteraction from Message (0,*) role message to Interaction (1,1) role interaction aggregate to;
EdgeClass ReceiveMessageLinksToReceiveEvent from Message (0,1) role receiveMessage to MessageEnd (0,1) role receiveEvent;
EdgeClass SendMessageLinksToSendEvent from Message (0,1) role sendMessage to MessageEnd (0,1) role sendEvent;
EdgeClass StartedExecutionLinksToStart from ExecutionSpecification (0,*) role startedExecution to OccurrenceSpecification (1,1) role start;
Package uml.interactions.fragments;
VertexClass CombinedFragment: uml.interactions.basicinteractions.InteractionFragment;
VertexClass InteractionConstraint: uml.classes.kernel.Constraint;
VertexClass InteractionOperand: uml.classes.kernel.Namespace, uml.interactions.basicinteractions.InteractionFragment;
CompositionClass CombinedFragmentContainsOperand from CombinedFragment (0,1) role combinedFragment to InteractionOperand (1,*) role operand aggregate from;
AggregationClass InteractionOperandContainsGuard from InteractionOperand (1,1) role interactionOperand to InteractionConstraint (0,1) role guard aggregate from;
Package rsl.rsldomainelements.uielements.guirepresentation;
VertexClass Button: GUIElement;
VertexClass CheckOption: GUIElement;
VertexClass CheckOptionList: Selection;
VertexClass Container: GUIElement;
VertexClass Dialog: Container;
VertexClass DropDownList: Selection;
abstract VertexClass GUIElement: rsl.rsldomainelements.uielements.UIElementRepresentation { caption: String };
VertexClass Label: GUIElement;
VertexClass OpenList: Selection;
VertexClass Organisation;
VertexClass RadioOption: GUIElement;
VertexClass RadioOptionList: Selection;
abstract VertexClass Selection: GUIElement { maxmumSelectableOptions: Integer,  sortCriterion: String,  sortOrder: String };
VertexClass TextField: GUIElement;
VertexClass ToggleButton: GUIElement;
VertexClass Window: Container;
AggregationClass ExclusiveOptionIsPartOfRadioList from RadioOption (0,*) role exclusiveOption to RadioOptionList (0,1) role radioList aggregate to;
AggregationClass InclusiveOptionIsPartOfCheckList from CheckOption (0,*) role inclusiveOption to CheckOptionList (0,1) role checkList aggregate to;
CompositionClass MemberIsPartOfGroup from GUIElement (0,*) role member to Container (0,1) role group aggregate to;

Graph "f90b2141-375771d9-70bceeec-86a97bf3_480" SCLGraph (10000 20000 73 73) \null;
Package sclkernel;
1 SoftwareCase <1 7 8 9> \null "3845981438815583446-7906646824584092553--2896811200398952705--548586188750408823";
Package rsl.rsldomainelements.terms;
2 Terminology <> \null "2601767174880357785--7196775375749997947-2344771490953981390--2484093593512691145";
Package rsl.rslrequirements.requirementsspecifications;
3 RequirementsSpecification <-1 2 3 10> "RequirementsSpecification" "-1837597656523165066--764566237405448039--3218193877864330340--4295272071211033238";
4 RequirementsPackage <-2> "RecoveredScenarios" "7705394215069708322--1097523995680186035-2475703843658497749--3571911920357135663";
Package rsl.rsldomainelements.domainelements;
5 DomainSpecification <-3 4 5 6> "DomainSpecification" "3190028724567211401-5213314434078513323--7348599935643763522--1291092147264310642";
Package rsl.rsldomainelements.notions;
6 NotionsPackage <-4> "Notions" "-5070914315038732150--1217035543937259665-2555949685988351466--6661499450105218635";
Package rsl.rsldomainelements.actors;
7 ActorsPackage <-5 62> "Actors" "-3789489969257633723--190262372292140308--6861334661661858384--4042291710638437247";
Package rsl.rsldomainelements.systemelements;
8 SystemElementsPackage <-6> "SystemElements" "3392501730672829423--1192894257479300579--2470682760194475793--7731360694473925797";
Package sclkernel;
9 ArchitecturalModel <-7> \null "7471024397196876334-8139829575179016021--5966125566900099845-572901069406860871";
10 DetailedDesignModel <-8> \null "6991947173074232220-6190626716152467228-846885864537425521--237872933386722585";
11 SourceCode <-9> \null "-3543740067252551469-2869045034482538871-3157220979485741149-7060877496381897968";
Package rsl.rslrequirements.requirementsspecifications;
12 RequirementsPackage <-10 17 73> "Character Limit" "-3896678247230114041--2758118558500110164--7450408366996058259--9171307630432797534";
13 RSLUseCase <-11 15 16 -17 57> \null "2144983774389232473--2509834587450819086-3161382047516308503-6059688143730999484";
Package uml.usecases;
14 UseCase <-12> f f \null "-6623351378748328606--1083905466252481716--4342367823790862563--7081106782443370984" \null;
Package sclkernel;
15 IsAllocatedTo <11 12 -13> f "3235546783893439726-7297321014711393117-8978272616992122084--3450712157593741363";
16 Stereotype <13> "DuplicatedUseCaseStructureForUseRelationship" "-3750902062856952700-2511441063582072487--875673130325687785-2308801153920508743";
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
17 ConstrainedLanguageScenario <14 -16 18 19 42> "Character Limit Use Case" "4246046468217853414--7126747077279641064--5275248248384088679--6911928602510128564";
Package rsl.rslrequirementrepresentationsentences.controlsentences;
18 PreconditionSentence <-14> \null "" "-4716918639389651548--3243857411346662528--7942807711998437675--5729806735620269995";
Package rsl.rslrequirementrepresentationsentences.representationsentences;
19 NaturalLanguageHypertextSentence <-15> "Character Limit Use Case" "3235834876315682628-798614367738873022--8304158612162590186-4937944989362979773";
Package rsl.rslrequirementrepresentationsentences.svosentences;
21 SVOSentence <-18 -21 -25> "" "-6044005012540367523-6199043922648999799--5074981719865897667--7396299212397775076";
22 SVOSentence <-19 -32 -36> "" "-7723641440535336137--7056381491493463313-7909069138245821596--5004211707571663336";
Package rsl.rsldomainelements.phrases;
23 NounPhrase <-20 -22> "4562323759138191832--3070349377095605761-4625593111104756659-7593600384890689703";
Package rsl.rslrequirementrepresentationsentences.svosentences;
24 Subject <20 21> "-6682885514098185034--5285482556930082771--6920095393710706003--1838357256102980241";
Package rsl.rsldomainelements.phrases;
25 NounLink <22 23> "-3432369625436481243-1434444988881335407--7748295308901774780--1276281544731234035" "User";
Package rsl.rsldomainelements.terms;
26 Noun <-23> \null "User" 0 "1292682987217319112-1006304759640700688--4307501845546893601--7498920866170024525";
Package rsl.rsldomainelements.phrases;
27 SimpleVerbPhrase <-24 -27 28> "-6273178414811718544--7729945327049475304-1381851087264140080--5978457726691975885";
Package rsl.rslrequirementrepresentationsentences.svosentences;
28 Predicate <24 25> "8225521324736120205-1285225180857681400-2425878354833183797--7105243247979091842";
Package rsl.rsldomainelements.terms;
29 Verb <-26> \null "writes" 0 "-7751889238462156283-101789828344480067-7953713202129366612--5392130568689186371";
Package rsl.rsldomainelements.phrases;
30 PhraseVerbLink <26 27> "7508979178471990227-7544965915578143880--7164482761572272254--8633174089746630530" "writes";
31 NounPhrase <-28 -29> "1930816210317451515--2950391384447843558--7008580347022879309-6452997989112921589";
32 NounLink <29 30> "31278145043831294--7112717501168115879--3659286460905643500--6984128365088792934" "a new tweet";
Package rsl.rsldomainelements.terms;
33 Noun <-30> \null "a new tweet" 0 "-5201740816426343976--8238016426445710328-136646709593456526-7649878744683485305";
Package rsl.rsldomainelements.phrases;
34 NounPhrase <-31 -33> "-5535159046529939162--630122770406062959-7614794392481283006-2218179030373346110";
Package rsl.rslrequirementrepresentationsentences.svosentences;
35 Subject <31 32> "-3627319631825906712-38400476394781636--8651832049905774393--5508974038868639385";
Package rsl.rsldomainelements.phrases;
36 NounLink <33 34> "-7012084315153554748-4043629728382049134--362455289735709777--8384151036487834619" "System";
Package rsl.rsldomainelements.terms;
37 Noun <-34 -46> \null "System" 0 "-1569108870586515642--1747061894238541498-1099900132701309843-1125835551437159886";
Package rsl.rsldomainelements.phrases;
38 SimpleVerbPhrase <-35 -38 39> "511756170341462917-2390758424787481444--7926084759172000255--4460634385184727055";
Package rsl.rslrequirementrepresentationsentences.svosentences;
39 Predicate <35 36> "7881011399191320186--1659796270513357723-1815538745865709899--3327361862451801802";
Package rsl.rsldomainelements.terms;
40 Verb <-37> \null "checks" 0 "-5287235576951895260--8175454443813690520-6096889058351056781-4704709884483379165";
Package rsl.rsldomainelements.phrases;
41 PhraseVerbLink <37 38> "27062605354904155-7426868118669282267-7430974213022934284--924026325670207039" "checks";
42 NounPhrase <-39 -41> "-8778304493163010922--1961588052943824380--2916573783382691604--8558246793635431190";
Package rsl.rsldomainelements.terms;
43 Modifier <-40> \null "for length" 0 "-6963518287340545429-4456138510701402228-4767572992161283767--3548077786004713136";
Package rsl.rsldomainelements.phrases;
44 ModifierLink <40 41> "-4605415707440555620--1415501286099181444-4605748302250835125-6730462672052648585" \null;
Package rsl.rslrequirementrepresentationsentences.svosentences;
45 SVOSentence <-42 -44 -47> "" "-1369200172374779473--5423271474390675438--2592048255755760813--91614231315368681";
Package rsl.rsldomainelements.phrases;
46 NounPhrase <-43 -45> "372436221439336357-1853263020663138181--8028578486700601647--8296091153737075562";
Package rsl.rslrequirementrepresentationsentences.svosentences;
47 Subject <43 44> "-5818950559193186949--3840331854054499026--1279571783770191006-7458015192936800212";
Package rsl.rsldomainelements.phrases;
48 NounLink <45 46> "-4502204768810326062-2924772334357323559--391047708266863350-4459768015554859947" "System";
49 SimpleVerbPhrase <-50 51 -54> "-7988896887882423428-8647115495227796181--7082396196981729584--1894168250756751530";
Package rsl.rsldomainelements.terms;
51 Verb <-49> \null "accepts" 0 "-1324063467509029979-6346122789762037792-2935461807331974745-1992191456195562558";
Package rsl.rsldomainelements.phrases;
52 PhraseVerbLink <49 50> "4382322643509216352--2892110266728183901-1203812152445970549-6705964329927708150" "accepts";
53 NounPhrase <-51 -52> "5419684909306708867-4164539215648822061-5507787209900354862-8567210495666502821";
54 NounLink <52 53> "-1952402849572669564--8654516048801744097--7853362640242694974--3201661219693327545" "tweet";
Package rsl.rsldomainelements.terms;
55 Noun <-53> \null "tweet" 0 "4391891184878170826-4914286379939210139--6385589191153061386--5486143702919006999";
Package rsl.rsldomainelements.phrases;
56 ComplexVerbPhrase <54 -55 -56> "3561874714073319956-6556904680609885640--3359289590613491924--8785840484017431487";
Package rsl.rslrequirementrepresentationsentences.svosentences;
57 Predicate <55 47> "-2227500702390353009--1734962982683123357-4693089066200059776-4294030477108371396";
Package rsl.rsldomainelements.terms;
50 Preposition <-48> \null "if it is smaller than 140 character" 0 "1320821221764691133-3617309458455724677--5807902848259864665-8745315918680827668";
Package rsl.rsldomainelements.phrases;
58 PhrasePrepositionLink <48 56> "-3102563772160071792--6731298769489023639-8719309952243821203--2673480041035213425" "if it is smaller than 140 character";
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
59 SentenceList <-57> \null "-8305877167429326447-699168456545996257-2948170407880410217-7209481545346156524";
Package rsl.rsldomainelements.actors;
20 Actor <-58 61 -62> "-8365806868100740945--1986300548661625015-2725452363849582215-2294384927738966967";
Package uml.usecases;
60 Actor <-59 -75> f f \null "-2452580973659374039--8271008468672097654--6279943143865847831--4035232153650099442" \null;
Package sclkernel;
61 IsAllocatedTo <58 59 -60> f "5210056333221815756--7414612108303258875-545422360532675308--6223812627669240044";
62 Stereotype <60> "DuplicatedUseCaseStructureForUseRelationship" "5334689668765670978-4611924116027786261--178496720106973821-1287408405795275523";
Package rsl.rsldomainelements.phrases;
67 NounPhrase <-66 -61> "2306783886495725383-5874949217580445673--7307558515276241736--3224930190913531886";
Package rsl.rsldomainelements.terms;
68 Noun <-65> \null "User" 0 "-4882463623511602342--8051983185175987592--9081743151695164040-888868152036770987";
Package rsl.rsldomainelements.phrases;
69 NounLink <65 66> "-8997668343356177639--1844764323717283547--2171354567839348834-2520647914652714570" "actor";
Package rsl.rslrequirements.requirementsspecifications;
63 RSLUseCase <-63 69 72 -73> \null "-8120316128617464942--4124092306165634846--110041977677168416-5324989373914562959";
Package uml.usecases;
64 UseCase <-67 -74> f f \null "-3465974463047866770--6396587899388423614--7397957116165624796--4171196409686706148" \null;
Package sclkernel;
65 IsAllocatedTo <63 67 -68> f "-4991861912960656633-7953906346338803681-5600473511348216442-5503408225982825547";
70 Stereotype <68> "DuplicatedUseCaseStructureForUseRelationship" "-1520840855858462723--1577208078068703312--3274611259180636908-8967348317197865249";
Package rsl.rslrequirementrepresentationsentences.representationsentences;
71 NaturalLanguageHypertextSentence <-69> "Writes Tweet with less than 140 characters" "6312188576323972489-7634535641811368937-7723860100266575252-7059839175893347235";
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
73 ConstrainedLanguageScenario <71 -72> "Writes Tweet with less than 140 characters" "-1317143191636983691--243515922824545467--4744259167290229590-574556467317126132";
Package rsl.rslrequirementrepresentationsentences.controlsentences;
74 PreconditionSentence <-71> \null "" "3792125685681937437--6712413266395638871--5019961281241551362--3971217441925942984";
Package uml.classes.dependencies;
75 Dependency <74 75> \null "5880949359592547558-5688713289458565617--3595816935360711070-7994769331034754445" \null;
Package sclkernel;
1 SoftwareCaseContainsArtifact;
Package rsl.rslrequirements.requirementsspecifications;
2 RequirementsSpecificationContainsRequirementsPackage;
3 RequirementsSpecificationLinksToDomainSpecification;
Package rsl.rsldomainelements.domainelements;
4 DomainSpecificationContainsDomainElementsPackage;
5 DomainSpecificationContainsDomainElementsPackage;
6 DomainSpecificationContainsDomainElementsPackage;
Package sclkernel;
7 SoftwareCaseContainsArtifact;
8 SoftwareCaseContainsArtifact;
9 SoftwareCaseContainsArtifact;
Package rsl.rslrequirements.requirementsspecifications;
10 RequirementsSpecificationContainsRequirementsPackage;
Package sclkernel;
11 AllocationToUMLLinksToAllocationSource;
12 AllocationToRSLLinksToAllocationTarget;
13 StereotypeLinksToRelationship;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
14 ScenarioContainsScenarioStep;
Package rsl.rslrequirements.requirementsspecifications;
15 RequirementContainsName;
16 RequirementContainsRepresentation;
17 PackageContainsRequirement;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
18 ScenarioContainsScenarioStep;
19 ScenarioContainsScenarioStep;
Package rsl.rslrequirementrepresentationsentences.svosentences;
20 SubjectContainsTarget;
21 SubjectIsPartOfSource;
Package rsl.rsldomainelements.phrases;
22 NounIsPartOfSource;
23 NounLinkLinksToTarget;
Package rsl.rslrequirementrepresentationsentences.svosentences;
24 PredicateContainsTarget;
25 PredicateIsPartOfSource;
Package rsl.rsldomainelements.phrases;
26 VerbLinkLinksToTarget;
27 VerbIsPartOfSource;
28 VerbPhraseContainsObject;
29 NounIsPartOfSource;
30 NounLinkLinksToTarget;
Package rsl.rslrequirementrepresentationsentences.svosentences;
31 SubjectContainsTarget;
32 SubjectIsPartOfSource;
Package rsl.rsldomainelements.phrases;
33 NounIsPartOfSource;
34 NounLinkLinksToTarget;
Package rsl.rslrequirementrepresentationsentences.svosentences;
35 PredicateContainsTarget;
36 PredicateIsPartOfSource;
Package rsl.rsldomainelements.phrases;
37 VerbLinkLinksToTarget;
38 VerbIsPartOfSource;
39 VerbPhraseContainsObject;
40 ModifierLinkLinksToTarget;
41 ModifierIsPartOfSource;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
42 ScenarioContainsScenarioStep;
Package rsl.rslrequirementrepresentationsentences.svosentences;
43 SubjectContainsTarget;
44 SubjectIsPartOfSource;
Package rsl.rsldomainelements.phrases;
45 NounIsPartOfSource;
46 NounLinkLinksToTarget;
49 VerbLinkLinksToTarget;
50 VerbIsPartOfSource;
51 VerbPhraseContainsObject;
52 NounIsPartOfSource;
53 NounLinkLinksToTarget;
54 ComplexVerbPhraseContainsSimpleVerbPhrase;
Package rsl.rslrequirementrepresentationsentences.svosentences;
55 PredicateContainsTarget;
47 PredicateIsPartOfSource;
Package rsl.rsldomainelements.phrases;
48 PrepositionLinkLinksToTarget;
56 PrepositionIsPartOfSource;
Package rsl.rslrequirements.requirementsspecifications;
57 RequirementContainsRepresentation;
Package sclkernel;
58 AllocationToUMLLinksToAllocationSource;
59 AllocationToRSLLinksToAllocationTarget;
60 StereotypeLinksToRelationship;
Package rsl.rsldomainelements.phrases;
65 NounLinkLinksToTarget;
66 NounIsPartOfSource;
Package rsl.rsldomainelements.domainelements;
61 ElementContainsName;
Package rsl.rsldomainelements.actors;
62 PackageContainsActor;
Package sclkernel;
63 AllocationToUMLLinksToAllocationSource;
67 AllocationToRSLLinksToAllocationTarget;
68 StereotypeLinksToRelationship;
Package rsl.rslrequirements.requirementsspecifications;
69 RequirementContainsName;
Package rsl.rslrequirementrepresentations.descriptiverequirementrepresentations;
71 ScenarioContainsScenarioStep;
Package rsl.rslrequirements.requirementsspecifications;
72 RequirementContainsRepresentation;
73 PackageContainsRequirement;
Package uml.classes.dependencies;
74 SupplierDependencyLinksToSupplier;
75 ClientDependencyLinksToClient;
